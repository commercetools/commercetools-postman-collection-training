{
	"info": {
		"_postman_id": "92f89e18-aab4-445e-9f0a-55c2f54bc48e",
		"name": "FA_B2B_Training",
		"description": "## How-to Use\n\nTo be used for quick data creation in the trainings.\nBefore sending any request, please make sure that you have a valid token.\n\n- Import the environment file from https://github.com/commercetools/commercetools-postman-collection/blob/master/api/template.json into postman. \n- Create an api client (use admin template) for your project in the Merchant Center.\n- Set the `client_id` and `client_secret` in the `Commercetools template` environment from top-right (eye icon).\n- Send the request `Obtain access token`.\n- Send the request Get TaxCategory",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "11897687"
	},
	"item": [
		{
			"name": "setup config",
			"item": [
				{
					"name": "Get project settings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"project-id\", data.results[0].id); ",
									"    pm.environment.set(\"project-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"project-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"project-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"project-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"project-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/{{project-key}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}"
							]
						},
						"description": "null"
					},
					"response": []
				},
				{
					"name": "Update project settings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"project-id\", data.results[0].id); ",
									"    pm.environment.set(\"project-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"project-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"project-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"project-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"project-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"version\": {{project-version}},\n\t\"actions\": [\n\t\t{\n\t\t\t\"action\": \"changeCountries\",\n        \t\"countries\": [\n           \t\t\"US\", \"DE\", \"CA\"\n        \t]\n\t   \t},\n\t\t{\n\t\t\t\"action\": \"changeCurrencies\",\n        \t\"currencies\": [\n           \t\t\"CAD\", \"EUR\", \"USD\"\n        \t]\n\t   \t},\n\t\t{\n\t\t\t\"action\": \"changeLanguages\",\n        \t\"languages\": [\n           \t\t\"en\", \"de\"\n        \t]\n\t   \t},\n        {\n          \"action\": \"changeProductSearchIndexingEnabled\",\n          \"enabled\": true\n        }           \n     ]\n}\n"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create TaxCategory",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"tax-category-id\", data.results[0].id); ",
									"    pm.environment.set(\"tax-category-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"tax-category-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"tax-category-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"tax-category-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"tax-category-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\" : \"Standard VAT\",\n  \"description\" : \"Standard VAT\",\n  \"key\": \"standard-vat\",\n  \"rates\" : [ \n      {\n        \"name\": \"Standard US tax\",\n        \"amount\": 0.12,\n        \"includedInPrice\": false,\n        \"country\": \"US\"\n    },\n    {\n        \"name\": \"Standard European\",\n        \"amount\": 0.15,\n        \"includedInPrice\": true,\n        \"country\": \"DE\"\n    }\n  \n  ]\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/tax-categories",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"tax-categories"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create US Zone",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"us-zone-id\", data.results[0].id); ",
									"    pm.environment.set(\"us-zone-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"us-zone-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"us-zone-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"us-zone-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"us-zone-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\" : \"United States zone\",\n  \"locations\" : [ \n        {\n          \"country\": \"US\"\n        }\n  ]\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/zones",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"zones"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create European Zone",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"eu-zone-id\", data.results[0].id); ",
									"    pm.environment.set(\"eu-zone-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"eu-zone-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"eu-zone-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"eu-zone-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"eu-zone-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\" : \"European zone\",\n  \"locations\" : [ \n        {\n          \"country\": \"DE\"\n        },\n        {\n          \"country\": \"CH\"\n        },\n        {\n          \"country\": \"AT\"\n        },\n        {\n          \"country\": \"LI\"\n        },\n        {\n          \"country\": \"LU\"\n        }\n  ]\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/zones",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"zones"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create ShippingMethod",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"shipping-method-id\", data.results[0].id); ",
									"    pm.environment.set(\"shipping-method-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"shipping-method-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"shipping-method-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"shipping-method-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"shipping-method-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\" : \"Standard shipping\",\n  \"localizedDescription\": {\n        \"en\": \"Standard shipping\",\n        \"de\": \"Standardversand\"\n      },\n  \"key\" : \"standard-shipping\",\n  \"taxCategory\" : {\n    \"typeId\" : \"tax-category\",\n    \"id\" : \"{{tax-category-id}}\"\n  },\n  \"zoneRates\" : [ {\n    \"zone\" : {\n      \"typeId\" : \"zone\",\n      \"id\" : \"{{eu-zone-id}}\"\n    },\n    \"shippingRates\" : [{\n        \"price\": {\n        \"type\": \"centPrecision\",\n        \"currencyCode\": \"EUR\",\n        \"centAmount\": 1000,\n        \"fractionDigits\": 2\n        },\n        \"freeAbove\": {\n        \"type\": \"centPrecision\",\n        \"currencyCode\": \"EUR\",\n        \"centAmount\": 10000,\n        \"fractionDigits\": 2\n        },\n        \"tiers\": []\n        }\n     ]\n  }, {\n    \"zone\" : {\n      \"typeId\" : \"zone\",\n      \"id\" : \"{{us-zone-id}}\"\n    },\n    \"shippingRates\" : [ {\n        \"price\": {\n        \"type\": \"centPrecision\",\n        \"currencyCode\": \"USD\",\n        \"centAmount\": 1000,\n        \"fractionDigits\": 2\n        },\n        \"freeAbove\": {\n        \"type\": \"centPrecision\",\n        \"currencyCode\": \"USD\",\n        \"centAmount\": 10000,\n        \"fractionDigits\": 2\n        },\n        \"tiers\": []\n     }\n    ]\n  } ],\n  \"isDefault\" : true\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/shipping-methods",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"shipping-methods"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Create Channels",
			"item": [
				{
					"name": "Create SportForAll West Dist Channel",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"west-dist-channel-id\", data.results[0].id); ",
									"    pm.environment.set(\"west-dist-channel-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"west-dist-channel-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"west-dist-channel-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"west-dist-channel-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"west-dist-channel-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\" : {\n    \"en\" : \"SportForAll West Distribution Channel\"\n  },\n  \"key\" : \"sportforall-west-distribution-channel\",\n  \"roles\" : [ \"ProductDistribution\" ],\n  \"address\" : {\n              \"id\" : \"sportforall-west-distribution-channel-address\",\n              \"key\" : \"sportforall-west-distribution-channel-address\",\n               \"country\" : \"US\"\n            }\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/channels",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"channels"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Create Channel"
					},
					"response": []
				},
				{
					"name": "Create SportForAll East Dist Channel",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"east-dist-channel-id\", data.results[0].id); ",
									"    pm.environment.set(\"east-dist-channel-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"east-dist-channel-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"east-dist-channel-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"east-dist-channel-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"east-dist-channel-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\" : {\n    \"en\" : \"SportForAll East Distribution Channel\"\n  },\n  \"key\" : \"sportforall-east-distribution-channel\",\n  \"roles\" : [ \"ProductDistribution\" ],\n  \"address\" : {\n              \"id\" : \"sportforall-east-distribution-channel-address\",\n              \"key\" : \"sportforall-east-distribution-channel-address\",\n               \"country\" : \"US\"\n            }\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/channels",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"channels"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Create Channel"
					},
					"response": []
				}
			]
		},
		{
			"name": "Create Products",
			"item": [
				{
					"name": "01 Create ProductType - Nutrition Bar",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"product-type-id-nutrition-bar\", data.results[0].id); ",
									"    pm.environment.set(\"product-type-version-nutrition-bar\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"product-type-key-nutrition-bar\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"product-type-version-nutrition-bar\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"product-type-id-nutrition-bar\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"product-type-key-nutrition-bar\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\" : \"Nutrition Bar\",\n  \"description\" : \"Nutrition Bar\",\n  \"key\" : \"nutrition-bar-product-type\",\n  \"attributes\" : [ {\n    \"type\" : {\n      \"name\" : \"enum\",\n      \"values\" : [\n          { \"key\" : \"chocolate\",\n            \"label\": \"Chocolate\"\n          },\n          { \"key\" : \"vanilla\",\n            \"label\": \"Vanilla\"\n          },\n          { \"key\" : \"strawberry\",\n            \"label\": \"Strawberry\"\n          }\n      ]\n    },\n    \"name\" : \"bar-flavor\",\n    \"label\" : {\n      \"en\" : \"Flavor\",\n      \"de\" : \"Flavor\"\n    },\n    \"isRequired\" : true,\n    \"isSearchable\" : true,\n    \"attributeConstraint\" : \"CombinationUnique\"\n  },\n  {\n    \"type\" : {\n      \"name\" : \"enum\",\n      \"values\" : [\n          { \"key\" : \"carton\",\n            \"label\": \"Carton (12 Bars)\"\n          },\n          { \"key\" : \"case\",\n            \"label\": \"Case (12 Cartons)\"\n          },\n          { \"key\" : \"pallette\",\n            \"label\": \"Pallette (72 Cases)\"\n          }\n      ]\n    },\n    \"name\" : \"bar-size\",\n    \"label\" : {\n      \"en\" : \"Size\",\n      \"de\" : \"Size\"\n    },\n    \"isRequired\" : true,\n    \"isSearchable\" : true,\n    \"attributeConstraint\" : \"CombinationUnique\"\n  } ]\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/product-types",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"product-types"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Create ProductType"
					},
					"response": []
				},
				{
					"name": "01.1 Create Product - Original nutrition bar",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"product-id-peo\", data.results[0].id); ",
									"    pm.environment.set(\"product-version-peo\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"product-key-peo\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"product-version-peo\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"product-id-peo\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"product-key-peo\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"productType\":{\n        \"typeId\":\"product-type\",\n        \"id\":\"{{product-type-id-nutrition-bar}}\"\n    },\n    \"name\":{\n        \"de\":\"Original nutrition bar\",\n        \"en\":\"Original nutrition bar\"\n    },\n    \"description\":{\n        \"de\":\"Original nutrition bar\",\n        \"en\":\"Original nutrition bar\"\n    },\n    \"slug\":{\n        \"de\":\"Original_nutrition_bar\",\n        \"en\":\"Original_nutrition_bar\"\n    },\n    \"metaTitle\":{\n        \"de\":\"Original nutrition bar\",\n        \"en\":\"Original nutrition bar\"\n    },\n    \"publish\": true,\n    \"key\":\"original-nutrition-bar\",\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    },\n    \"priceMode\" : \"Standalone\",\n    \"masterVariant\":{\n        \"id\":1,\n        \"sku\":\"ONB-C-Carton\",\n        \"key\":\"ONB-C-Carton\",\n        \"attributes\":[\n            {\n            \"name\":\"bar-flavor\",\n            \"value\":\"chocolate\"\n            },\n            {\n            \"name\":\"bar-size\",\n            \"value\":\"carton\"\n            }\n        ]\n    },\n    \"variants\":[\n        {\n        \"id\":2,\n        \"sku\":\"ONB-V-Carton\",\n        \"key\":\"ONB-V-Carton\",\n        \"attributes\":[\n            {\n            \"name\":\"bar-flavor\",\n            \"value\":\"vanilla\"\n            },\n            {\n            \"name\":\"bar-size\",\n            \"value\":\"carton\"\n            }\n        ]\n        },\n        {\n        \"id\":3,\n        \"sku\":\"ONB-S-Carton\",\n        \"key\":\"ONB-S-Carton\",\n        \"attributes\":[\n            {\n            \"name\":\"bar-flavor\",\n            \"value\":\"strawberry\"\n            },\n            {\n            \"name\":\"bar-size\",\n            \"value\":\"carton\"\n            }\n        ]\n        },\n        {\n        \"id\":4,\n        \"sku\":\"ONB-C-Case\",\n        \"key\":\"ONB-C-Case\",\n        \"attributes\":[\n            {\n            \"name\":\"bar-flavor\",\n            \"value\":\"chocolate\"\n            },\n            {\n            \"name\":\"bar-size\",\n            \"value\":\"case\"\n            }\n        ]\n        },\n        {\n        \"id\":5,\n        \"sku\":\"ONB-V-Case\",\n        \"key\":\"ONB-V-Case\",\n        \"attributes\":[\n            {\n            \"name\":\"bar-flavor\",\n            \"value\":\"vanilla\"\n            },\n            {\n            \"name\":\"bar-size\",\n            \"value\":\"case\"\n            }\n        ]\n        },\n        {\n        \"id\":6,\n        \"sku\":\"ONB-S-Case\",\n        \"key\":\"ONB-S-Case\",\n        \"attributes\":[\n            {\n            \"name\":\"bar-flavor\",\n            \"value\":\"strawberry\"\n            },\n            {\n            \"name\":\"bar-size\",\n            \"value\":\"case\"\n            }\n        ]\n        },\n        {\n        \"id\":7,\n        \"sku\":\"ONB-C-Pallette\",\n        \"key\":\"ONB-C-Pallette\",\n        \"attributes\":[\n            {\n            \"name\":\"bar-flavor\",\n            \"value\":\"chocolate\"\n            },\n            {\n            \"name\":\"bar-size\",\n            \"value\":\"pallette\"\n            }\n        ]\n        },\n        {\n        \"id\":8,\n        \"sku\":\"ONB-V-Pallette\",\n        \"key\":\"ONB-V-Pallette\",\n        \"attributes\":[\n            {\n            \"name\":\"bar-flavor\",\n            \"value\":\"vanilla\"\n            },\n            {\n            \"name\":\"bar-size\",\n            \"value\":\"pallette\"\n            }\n        ]\n        },\n        {\n        \"id\":9,\n        \"sku\":\"ONB-S-Pallette\",\n        \"key\":\"ONB-S-Pallette\",\n        \"attributes\":[\n            {\n            \"name\":\"bar-flavor\",\n            \"value\":\"strawberry\"\n            },\n            {\n            \"name\":\"bar-size\",\n            \"value\":\"pallette\"\n            }\n        ]\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/products",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"products"
							],
							"query": [
								{
									"key": "priceCurrency",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCountry",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCustomerGroup",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceChannel",
									"value": "",
									"disabled": true
								},
								{
									"key": "localeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "storeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "To create a new product, send a representation that is going to become the initial staged representation\nof the new product in the master catalog. If price selection query parameters are provided,\nthe selected prices will be added to the response.\n"
					},
					"response": []
				},
				{
					"name": "01.2 Create Product - Protein enriched nutrition bar w Channel in Prices",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"product-id-penb\", data.results[0].id); ",
									"    pm.environment.set(\"product-version-penb\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"product-key-penb\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"product-version-penb\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"product-id-penb\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"product-key-penb\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"productType\":{\n        \"typeId\":\"product-type\",\n        \"id\":\"{{product-type-id-nutrition-bar}}\"\n    },\n    \"name\":{\n        \"de\":\"Protein enriched nutrition bar\",\n        \"en\":\"Protein enriched nutrition bar\"\n    },\n    \"description\":{\n        \"de\":\"Protein enriched nutrition bar\",\n        \"en\":\"Protein enriched nutrition bar\"\n    },\n    \"slug\":{\n        \"de\":\"Protein_enriched_nutrition_bar\",\n        \"en\":\"Protein_enriched_nutrition_bar\"\n    },\n    \"metaTitle\":{\n        \"de\":\"Protein enriched nutrition bar\",\n        \"en\":\"Protein enriched nutrition bar\"\n    },\n    \"publish\": true,\n    \"key\":\"protein-enriched-nutrition-bar\",\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    },\n    \"priceMode\" : \"Embedded\",\n    \"masterVariant\":{\n        \"id\":1,\n        \"sku\":\"PENB-C-Carton\",\n        \"key\":\"PENB-C-Carton\",\n        \"attributes\":[\n            {\n            \"name\":\"bar-flavor\",\n            \"value\":\"chocolate\"\n            },\n            {\n            \"name\":\"bar-size\",\n            \"value\":\"carton\"\n            }\n        ],\n     \"prices\": [\n              {\n                \"key\": \"PENB-C-Carton-USD-US\",\n                \"value\": {\n                  \"type\": \"centPrecision\",\n                  \"currencyCode\": \"USD\",\n                  \"centAmount\": 1200,\n                  \"fractionDigits\": 2\n                },\n                \"country\": \"US\"\n              },\n              {\n                \"key\": \"PENB-C-Carton-EUR-DE\",\n                \"value\": {\n                  \"type\": \"centPrecision\",\n                  \"currencyCode\": \"EUR\",\n                  \"centAmount\": 1200,\n                  \"fractionDigits\": 2\n                },\n                \"country\": \"DE\"\n              },\n              {\n                \"key\": \"PENB-C-Carton-USD-US-West-Channel\",\n                \"value\": {\n                  \"type\": \"centPrecision\",\n                  \"currencyCode\": \"USD\",\n                  \"centAmount\": 1001,\n                  \"fractionDigits\": 2\n                },\n                \"country\": \"US\",\n                \"channel\": {\n                  \"typeId\": \"channel\",\n                  \"key\": \"{{west-dist-channel-key}}\"\n                }\n              },\n              {\n                \"key\": \"PENB-C-Carton-USD-US-East-Channel\",\n                \"value\": {\n                  \"type\": \"centPrecision\",\n                  \"currencyCode\": \"USD\",\n                  \"centAmount\": 1002,\n                  \"fractionDigits\": 2\n                },\n                \"country\": \"US\",\n                \"channel\": {\n                  \"typeId\": \"channel\",\n                  \"key\": \"{{east-dist-channel-key}}\"\n                }\n              }\n\n            ]\n    },\n    \"variants\":[\n        {\n        \"id\":2,\n        \"sku\":\"PENB-V-Carton\",\n        \"key\":\"PENB-V-Carton\",\n        \"attributes\":[\n            {\n            \"name\":\"bar-flavor\",\n            \"value\":\"vanilla\"\n            },\n            {\n            \"name\":\"bar-size\",\n            \"value\":\"carton\"\n            }\n        ]\n        },\n        {\n        \"id\":3,\n        \"sku\":\"PENB-S-Carton\",\n        \"key\":\"PENB-S-Carton\",\n        \"attributes\":[\n            {\n            \"name\":\"bar-flavor\",\n            \"value\":\"strawberry\"\n            },\n            {\n            \"name\":\"bar-size\",\n            \"value\":\"carton\"\n            }\n        ]\n        },\n        {\n        \"id\":4,\n        \"sku\":\"PENB-C-Case\",\n        \"key\":\"PENB-C-Case\",\n        \"attributes\":[\n            {\n            \"name\":\"bar-flavor\",\n            \"value\":\"chocolate\"\n            },\n            {\n            \"name\":\"bar-size\",\n            \"value\":\"case\"\n            }\n        ]\n        },\n        {\n        \"id\":5,\n        \"sku\":\"PENB-V-Case\",\n        \"key\":\"PENB-V-Case\",\n        \"attributes\":[\n            {\n            \"name\":\"bar-flavor\",\n            \"value\":\"vanilla\"\n            },\n            {\n            \"name\":\"bar-size\",\n            \"value\":\"case\"\n            }\n        ]\n        },\n        {\n        \"id\":6,\n        \"sku\":\"PENB-S-Case\",\n        \"key\":\"PENB-S-Case\",\n        \"attributes\":[\n            {\n            \"name\":\"bar-flavor\",\n            \"value\":\"strawberry\"\n            },\n            {\n            \"name\":\"bar-size\",\n            \"value\":\"case\"\n            }\n        ]\n        },\n        {\n        \"id\":7,\n        \"sku\":\"PENB-C-Pallette\",\n        \"key\":\"PENB-C-Pallette\",\n        \"attributes\":[\n            {\n            \"name\":\"bar-flavor\",\n            \"value\":\"chocolate\"\n            },\n            {\n            \"name\":\"bar-size\",\n            \"value\":\"pallette\"\n            }\n        ]\n        },\n        {\n        \"id\":8,\n        \"sku\":\"PENB-V-Pallette\",\n        \"key\":\"PENB-V-Pallette\",\n        \"attributes\":[\n            {\n            \"name\":\"bar-flavor\",\n            \"value\":\"vanilla\"\n            },\n            {\n            \"name\":\"bar-size\",\n            \"value\":\"pallette\"\n            }\n        ]\n        },\n        {\n        \"id\":9,\n        \"sku\":\"PENB-S-Pallette\",\n        \"key\":\"PENB-S-Pallette\",\n        \"attributes\":[\n            {\n            \"name\":\"bar-flavor\",\n            \"value\":\"strawberry\"\n            },\n            {\n            \"name\":\"bar-size\",\n            \"value\":\"pallette\"\n            }\n        ]\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/products",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"products"
							],
							"query": [
								{
									"key": "priceCurrency",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCountry",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCustomerGroup",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceChannel",
									"value": "",
									"disabled": true
								},
								{
									"key": "localeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "storeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "To create a new product, send a representation that is going to become the initial staged representation\nof the new product in the master catalog. If price selection query parameters are provided,\nthe selected prices will be added to the response.\n"
					},
					"response": []
				},
				{
					"name": "01.3 Create Product - Vegan nutrition bar",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"product-id-pev\", data.results[0].id); ",
									"    pm.environment.set(\"product-version-pev\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"product-key-pev\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"product-version-pev\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"product-id-pev\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"product-key-pev\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"productType\":{\n        \"typeId\":\"product-type\",\n        \"id\":\"{{product-type-id-nutrition-bar}}\"\n    },\n    \"name\":{\n        \"de\":\"Vegan nutrition bar\",\n        \"en\":\"Vegan nutrition bar\"\n    },\n     \"description\":{\n        \"de\":\"Vegan nutrition bar\",\n        \"en\":\"Vegan nutrition bar\"\n    },\n   \"slug\":{\n        \"de\":\"Vegan_nutrition_bar\",\n        \"en\":\"Vegan_nutrition_bar\"\n    },\n    \"metaTitle\":{\n        \"de\":\"Vegan nutrition bar\",\n        \"en\":\"Vegan nutrition bar\"\n    },\n    \"publish\": true,\n    \"key\":\"vegan-nutrition-bar\",\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    },\n    \"priceMode\" : \"Standalone\",\n    \"masterVariant\":{\n        \"id\":1,\n        \"sku\":\"VNB-C-Carton\",\n        \"key\":\"VNB-C-Carton\",\n        \"attributes\":[\n            {\n            \"name\":\"bar-flavor\",\n            \"value\":\"chocolate\"\n            },\n            {\n            \"name\":\"bar-size\",\n            \"value\":\"carton\"\n            }\n        ]\n    },\n    \"variants\":[\n        {\n        \"id\":2,\n        \"sku\":\"VNB-V-Carton\",\n        \"key\":\"VNB-V-Carton\",\n        \"attributes\":[\n            {\n            \"name\":\"bar-flavor\",\n            \"value\":\"vanilla\"\n            },\n            {\n            \"name\":\"bar-size\",\n            \"value\":\"carton\"\n            }\n        ]\n        },\n        {\n        \"id\":3,\n        \"sku\":\"VNB-S-Carton\",\n        \"key\":\"VNB-S-Carton\",\n        \"attributes\":[\n            {\n            \"name\":\"bar-flavor\",\n            \"value\":\"strawberry\"\n            },\n            {\n            \"name\":\"bar-size\",\n            \"value\":\"carton\"\n            }\n        ]\n        },\n        {\n        \"id\":4,\n        \"sku\":\"VNB-C-Case\",\n        \"key\":\"VNB-C-Case\",\n        \"attributes\":[\n            {\n            \"name\":\"bar-flavor\",\n            \"value\":\"chocolate\"\n            },\n            {\n            \"name\":\"bar-size\",\n            \"value\":\"case\"\n            }\n        ]\n        },\n        {\n        \"id\":5,\n        \"sku\":\"VNB-V-Case\",\n        \"key\":\"VNB-V-Case\",\n        \"attributes\":[\n            {\n            \"name\":\"bar-flavor\",\n            \"value\":\"vanilla\"\n            },\n            {\n            \"name\":\"bar-size\",\n            \"value\":\"case\"\n            }\n        ]\n        },\n        {\n        \"id\":6,\n        \"sku\":\"VNB-S-Case\",\n        \"key\":\"VNB-S-Case\",\n        \"attributes\":[\n            {\n            \"name\":\"bar-flavor\",\n            \"value\":\"strawberry\"\n            },\n            {\n            \"name\":\"bar-size\",\n            \"value\":\"case\"\n            }\n        ]\n        },\n        {\n        \"id\":7,\n        \"sku\":\"VNB-C-Pallette\",\n        \"key\":\"VNB-C-Pallette\",\n        \"attributes\":[\n            {\n            \"name\":\"bar-flavor\",\n            \"value\":\"chocolate\"\n            },\n            {\n            \"name\":\"bar-size\",\n            \"value\":\"pallette\"\n            }\n        ]\n        },\n        {\n        \"id\":8,\n        \"sku\":\"VNB-V-Pallette\",\n        \"key\":\"VNB-V-Pallette\",\n        \"attributes\":[\n            {\n            \"name\":\"bar-flavor\",\n            \"value\":\"vanilla\"\n            },\n            {\n            \"name\":\"bar-size\",\n            \"value\":\"pallette\"\n            }\n        ]\n        },\n        {\n        \"id\":9,\n        \"sku\":\"VNB-S-Pallette\",\n        \"key\":\"VNB-S-Pallette\",\n        \"attributes\":[\n            {\n            \"name\":\"bar-flavor\",\n            \"value\":\"strawberry\"\n            },\n            {\n            \"name\":\"bar-size\",\n            \"value\":\"pallette\"\n            }\n        ]\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/products",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"products"
							],
							"query": [
								{
									"key": "priceCurrency",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCountry",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCustomerGroup",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceChannel",
									"value": "",
									"disabled": true
								},
								{
									"key": "localeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "storeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "To create a new product, send a representation that is going to become the initial staged representation\nof the new product in the master catalog. If price selection query parameters are provided,\nthe selected prices will be added to the response.\n"
					},
					"response": []
				},
				{
					"name": "01.4 Create Product - Sugar free nutrition bar",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"product-id-pesf\", data.results[0].id); ",
									"    pm.environment.set(\"product-version-pesf\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"product-key-pesf\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"product-version-pesf\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"product-id-pesf\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"product-key-pesf\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"productType\":{\n        \"typeId\":\"product-type\",\n        \"id\":\"{{product-type-id-nutrition-bar}}\"\n    },\n    \"name\":{\n        \"de\":\"Sugar free nutrition bar\",\n        \"en\":\"Sugar free nutrition bar\"\n    },\n    \"description\":{\n        \"de\":\"Sugar free nutrition bar\",\n        \"en\":\"Sugar free nutrition bar\"\n    },\n    \"slug\":{\n        \"de\":\"Sugar_free_nutrition_bar\",\n        \"en\":\"Sugar_free_nutrition_bar\"\n    },\n    \"metaTitle\":{\n        \"de\":\"Sugar free nutrition bar\",\n        \"en\":\"Sugar free nutrition bar\"\n    },\n    \"publish\": true,\n    \"key\":\"sugar-free-nutrition-bar\",\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    },\n    \"priceMode\" : \"Standalone\",\n    \"masterVariant\":{\n        \"id\":1,\n        \"sku\":\"SFNB-C-Carton\",\n        \"key\":\"SFNB-C-Carton\",\n        \"attributes\":[\n            {\n            \"name\":\"bar-flavor\",\n            \"value\":\"chocolate\"\n            },\n            {\n            \"name\":\"bar-size\",\n            \"value\":\"carton\"\n            }\n        ]\n    },\n    \"variants\":[\n        {\n        \"id\":2,\n        \"sku\":\"SFNB-V-Carton\",\n        \"key\":\"SFNB-V-Carton\",\n        \"attributes\":[\n            {\n            \"name\":\"bar-flavor\",\n            \"value\":\"vanilla\"\n            },\n            {\n            \"name\":\"bar-size\",\n            \"value\":\"carton\"\n            }\n        ]\n        },\n        {\n        \"id\":3,\n        \"sku\":\"SFNB-S-Carton\",\n        \"key\":\"SFNB-S-Carton\",\n        \"attributes\":[\n            {\n            \"name\":\"bar-flavor\",\n            \"value\":\"strawberry\"\n            },\n            {\n            \"name\":\"bar-size\",\n            \"value\":\"carton\"\n            }\n        ]\n        },\n        {\n        \"id\":4,\n        \"sku\":\"SFNB-C-Case\",\n        \"key\":\"SFNB-C-Case\",\n        \"attributes\":[\n            {\n            \"name\":\"bar-flavor\",\n            \"value\":\"chocolate\"\n            },\n            {\n            \"name\":\"bar-size\",\n            \"value\":\"case\"\n            }\n        ]\n        },\n        {\n        \"id\":5,\n        \"sku\":\"SFNB-V-Case\",\n        \"key\":\"SFNB-V-Case\",\n        \"attributes\":[\n            {\n            \"name\":\"bar-flavor\",\n            \"value\":\"vanilla\"\n            },\n            {\n            \"name\":\"bar-size\",\n            \"value\":\"case\"\n            }\n        ]\n        },\n        {\n        \"id\":6,\n        \"sku\":\"SFNB-S-Case\",\n        \"key\":\"SFNB-S-Case\",\n        \"attributes\":[\n            {\n            \"name\":\"bar-flavor\",\n            \"value\":\"strawberry\"\n            },\n            {\n            \"name\":\"bar-size\",\n            \"value\":\"case\"\n            }\n        ]\n        },\n        {\n        \"id\":7,\n        \"sku\":\"SFNB-C-Pallette\",\n        \"key\":\"SFNB-C-Pallette\",\n        \"attributes\":[\n            {\n            \"name\":\"bar-flavor\",\n            \"value\":\"chocolate\"\n            },\n            {\n            \"name\":\"bar-size\",\n            \"value\":\"pallette\"\n            }\n        ]\n        },\n        {\n        \"id\":8,\n        \"sku\":\"SFNB-V-Pallette\",\n        \"key\":\"SFNB-V-Pallette\",\n        \"attributes\":[\n            {\n            \"name\":\"bar-flavor\",\n            \"value\":\"vanilla\"\n            },\n            {\n            \"name\":\"bar-size\",\n            \"value\":\"pallette\"\n            }\n        ]\n        },\n        {\n        \"id\":9,\n        \"sku\":\"SFNB-S-Pallette\",\n        \"key\":\"SFNB-S-Pallette\",\n        \"attributes\":[\n            {\n            \"name\":\"bar-flavor\",\n            \"value\":\"strawberry\"\n            },\n            {\n            \"name\":\"bar-size\",\n            \"value\":\"pallette\"\n            }\n        ]\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/products",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"products"
							],
							"query": [
								{
									"key": "priceCurrency",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCountry",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCustomerGroup",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceChannel",
									"value": "",
									"disabled": true
								},
								{
									"key": "localeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "storeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "To create a new product, send a representation that is going to become the initial staged representation\nof the new product in the master catalog. If price selection query parameters are provided,\nthe selected prices will be added to the response.\n"
					},
					"response": []
				},
				{
					"name": "01.5 Create Product - Fat free nutrition bar",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"product-id-peff\", data.results[0].id); ",
									"    pm.environment.set(\"product-version-peff\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"product-key-peff\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"product-version-peff\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"product-id-peff\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"product-key-peff\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"productType\":{\n        \"typeId\":\"product-type\",\n        \"id\":\"{{product-type-id-nutrition-bar}}\"\n    },\n    \"name\":{\n        \"de\":\"Fat free nutrition bar\",\n        \"en\":\"Fat free nutrition bar\"\n    },\n    \"description\":{\n        \"de\":\"Fat free nutrition bar\",\n        \"en\":\"Fat free nutrition bar\"\n    },\n    \"slug\":{\n        \"de\":\"Fat_free_nutrition_bar\",\n        \"en\":\"Fat_free_nutrition_bar\"\n    },\n    \"metaTitle\":{\n        \"de\":\"Fat free nutrition bar\",\n        \"en\":\"Fat free nutrition bar\"\n    },\n    \"publish\": true,\n    \"key\":\"Fat-free-nutrition-bar\",\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    },\n    \"priceMode\" : \"Standalone\",\n    \"masterVariant\":{\n        \"id\":1,\n        \"sku\":\"FFNB-C-Carton\",\n        \"key\":\"FFNB-C-Carton\",\n        \"attributes\":[\n            {\n            \"name\":\"bar-flavor\",\n            \"value\":\"chocolate\"\n            },\n            {\n            \"name\":\"bar-size\",\n            \"value\":\"carton\"\n            }\n        ]\n    },\n    \"variants\":[\n        {\n        \"id\":2,\n        \"sku\":\"FFNB-V-Carton\",\n        \"key\":\"FFNB-V-Carton\",\n        \"attributes\":[\n            {\n            \"name\":\"bar-flavor\",\n            \"value\":\"vanilla\"\n            },\n            {\n            \"name\":\"bar-size\",\n            \"value\":\"carton\"\n            }\n        ]\n        },\n        {\n        \"id\":3,\n        \"sku\":\"FFNB-S-Carton\",\n        \"key\":\"FFNB-S-Carton\",\n        \"attributes\":[\n            {\n            \"name\":\"bar-flavor\",\n            \"value\":\"strawberry\"\n            },\n            {\n            \"name\":\"bar-size\",\n            \"value\":\"carton\"\n            }\n        ]\n        },\n        {\n        \"id\":4,\n        \"sku\":\"FFNB-C-Case\",\n        \"key\":\"FFNB-C-Case\",\n        \"attributes\":[\n            {\n            \"name\":\"bar-flavor\",\n            \"value\":\"chocolate\"\n            },\n            {\n            \"name\":\"bar-size\",\n            \"value\":\"case\"\n            }\n        ]\n        },\n        {\n        \"id\":5,\n        \"sku\":\"FFNB-V-Case\",\n        \"key\":\"FFNB-V-Case\",\n        \"attributes\":[\n            {\n            \"name\":\"bar-flavor\",\n            \"value\":\"vanilla\"\n            },\n            {\n            \"name\":\"bar-size\",\n            \"value\":\"case\"\n            }\n        ]\n        },\n        {\n        \"id\":6,\n        \"sku\":\"FFNB-S-Case\",\n        \"key\":\"FFNB-S-Case\",\n        \"attributes\":[\n            {\n            \"name\":\"bar-flavor\",\n            \"value\":\"strawberry\"\n            },\n            {\n            \"name\":\"bar-size\",\n            \"value\":\"case\"\n            }\n        ]\n        },\n        {\n        \"id\":7,\n        \"sku\":\"FFNB-C-Pallette\",\n        \"key\":\"FFNB-C-Pallette\",\n        \"attributes\":[\n            {\n            \"name\":\"bar-flavor\",\n            \"value\":\"chocolate\"\n            },\n            {\n            \"name\":\"bar-size\",\n            \"value\":\"pallette\"\n            }\n        ]\n        },\n        {\n        \"id\":8,\n        \"sku\":\"FFNB-V-Pallette\",\n        \"key\":\"FFNB-V-Pallette\",\n        \"attributes\":[\n            {\n            \"name\":\"bar-flavor\",\n            \"value\":\"vanilla\"\n            },\n            {\n            \"name\":\"bar-size\",\n            \"value\":\"pallette\"\n            }\n        ]\n        },\n        {\n        \"id\":9,\n        \"sku\":\"FFNB-S-Pallette\",\n        \"key\":\"FFNB-S-Pallette\",\n        \"attributes\":[\n            {\n            \"name\":\"bar-flavor\",\n            \"value\":\"strawberry\"\n            },\n            {\n            \"name\":\"bar-size\",\n            \"value\":\"pallette\"\n            }\n        ]\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/products",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"products"
							],
							"query": [
								{
									"key": "priceCurrency",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCountry",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCustomerGroup",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceChannel",
									"value": "",
									"disabled": true
								},
								{
									"key": "localeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "storeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "To create a new product, send a representation that is going to become the initial staged representation\nof the new product in the master catalog. If price selection query parameters are provided,\nthe selected prices will be added to the response.\n"
					},
					"response": []
				}
			]
		},
		{
			"name": "Create Prices",
			"item": [
				{
					"name": "02.01.1 Create StandalonePrice ONB-C-Carton-EUR-DE",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"standalone-price-id-peo-c-carton-eur-de\", data.results[0].id); ",
									"    pm.environment.set(\"standalone-price-version-peo-c-carton-eur-de\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"standalone-price-key-peo-c-carton-eur-de\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"standalone-price-version-peo-c-carton-eur-de\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"standalone-price-id-peo-c-carton-eur-de\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"standalone-price-key-peo-c-carton-eur-de\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"key\": \"ONB-C-Carton-EUR-DE\",\n  \"sku\" : \"ONB-C-Carton\",\n  \"value\" : {\n    \"currencyCode\" : \"EUR\",\n    \"centAmount\" : 1200\n  },\n  \"country\" : \"DE\"\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/standalone-prices",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"standalone-prices"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Produces the [StandalonePriceCreated](ctp:api:type:StandalonePriceCreatedMessage) Message.\n"
					},
					"response": []
				},
				{
					"name": "02.01.2 Create StandalonePrice ONB-C-Carton-USD-US",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"standalone-price-id-peo-c-carton-usd-us\", data.results[0].id); ",
									"    pm.environment.set(\"standalone-price-version-peo-c-carton-usd-us\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"standalone-price-key-peo-c-carton-usd-us\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"standalone-price-version-peo-c-carton-usd-us\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"standalone-price-id-peo-c-carton-usd-us\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"standalone-price-key-peo-c-carton-usd-us\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"key\": \"ONB-C-Carton-USD-US\",\n  \"sku\" : \"ONB-C-Carton\",\n  \"value\" : {\n    \"currencyCode\" : \"USD\",\n    \"centAmount\" : 1200\n  },\n  \"country\" : \"US\"\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/standalone-prices",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"standalone-prices"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Produces the [StandalonePriceCreated](ctp:api:type:StandalonePriceCreatedMessage) Message.\n"
					},
					"response": []
				},
				{
					"name": "02.01.3 Create StandalonePrice ONB-C-Carton-USD-US-East-Channel",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"standalone-price-id-peo-c-carton-usd-us\", data.results[0].id); ",
									"    pm.environment.set(\"standalone-price-version-peo-c-carton-usd-us\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"standalone-price-key-peo-c-carton-usd-us-channel-1\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"standalone-price-version-peo-c-carton-usd-us-channel-1\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"standalone-price-id-peo-c-carton-usd-us-channel-1\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"standalone-price-key-peo-c-carton-usd-us-channel-1\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"key\": \"ONB-C-Carton-USD-US-East-Channel\",\n  \"sku\" : \"ONB-C-Carton\",\n  \"value\" : {\n    \"currencyCode\" : \"USD\",\n    \"centAmount\" : 1000\n  },\n  \"country\" : \"US\",\n  \"channel\" : {\n      \"typeId\" : \"channel\",\n      \"key\" : \"{{east-dist-channel-key}}\"\n      }\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/standalone-prices",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"standalone-prices"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "02.01.4 Create StandalonePrice ONB-C-Carton-USD-US-West-Channel",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"standalone-price-id-peo-c-carton-usd-us-channel-2\", data.results[0].id); ",
									"    pm.environment.set(\"standalone-price-version-peo-c-carton-usd-us-channel-2\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"standalone-price-key-peo-c-carton-usd-us-channel-2\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"standalone-price-version-peo-c-carton-usd-us-channel-2\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"standalone-price-id-peo-c-carton-usd-us-channel-2\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"standalone-price-key-peo-c-carton-usd-us-channel-2\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"key\": \"ONB-C-Carton-USD-US-West-Channel\",\n  \"sku\" : \"ONB-C-Carton\",\n  \"value\" : {\n    \"currencyCode\" : \"USD\",\n    \"centAmount\" : 1000\n  },\n  \"country\" : \"US\",\n  \"channel\" : {\n      \"typeId\" : \"channel\",\n      \"key\" : \"{{west-dist-channel-key}}\"\n      }\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/standalone-prices",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"standalone-prices"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Create Product Selections",
			"item": [
				{
					"name": "Create West Region Product Selection",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"west-product-selection-id\", data.results[0].id); ",
									"    pm.environment.set(\"west-product-selection-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"west-product-selection-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"west-product-selection-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"west-product-selection-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"west-product-selection-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"key\" : \"sportforall-west-region-products\",\n  \"name\" : {\n    \"en\" : \"SportForAll West Region Products\"\n  },\n  \"mode\" : \"Individual\",\n  \"type\" : \"individual\"\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/product-selections",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"product-selections"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "null"
					},
					"response": []
				},
				{
					"name": "Update ProductSelection by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"west-product-selection-id\", data.results[0].id); ",
									"    pm.environment.set(\"west-product-selection-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"west-product-selection-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"west-product-selection-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"west-product-selection-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"west-product-selection-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"version\" : {{west-product-selection-version}},\n  \"actions\" : [ {\n    \"action\" : \"addProduct\",\n    \"product\": {\n        \"typeId\": \"product\",\n        \"key\": \"{{product-key-peo}}\"\n  }\n  } ]\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/product-selections/{{west-product-selection-id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"product-selections",
								"{{west-product-selection-id}}"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "null"
					},
					"response": []
				}
			]
		},
		{
			"name": "Create Stores",
			"item": [
				{
					"name": "Create SportForAll East Region Store",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"east-store-id\", data.results[0].id); ",
									"    pm.environment.set(\"east-store-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"east-store-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"east-store-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"east-store-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"east-store-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"key\" : \"sportforall-east-region-store\",\n  \"name\" : {\n    \"en\" : \"SportForAll East Region Store\"\n  },\n  \"languages\" : [\n      \"en\", \"de\"\n  ],\n  \"countries\" : [\n\n  ],\n  \"distributionChannels\" : [\n      {\n              \"typeId\" : \"channel\",\n              \"id\" : \"{{east-dist-channel-id}}\"\n            }\n      \n  ],\n   \"productSelections\" : [\n   ]\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/stores",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"stores"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Create Store"
					},
					"response": []
				},
				{
					"name": "Create SportForAll West Region Store",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"west-store-id\", data.results[0].id); ",
									"    pm.environment.set(\"west-store-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"west-store-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"west-store-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"west-store-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"west-store-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"key\" : \"sportforall-west-region-store\",\n  \"name\" : {\n    \"en\" : \"SportForAll West Region Store\"\n  },\n  \"languages\" : [\n      \"en\", \"de\"\n  ],\n  \"countries\" : [\n\n  ],\n  \"distributionChannels\" : [\n      {\n              \"typeId\" : \"channel\",\n              \"id\" : \"{{west-dist-channel-id}}\"\n            }\n      \n  ],\n   \"productSelections\" : [\n       {\n           \"productSelection\": {\n              \"typeId\" : \"product-selection\",\n              \"id\" : \"{{west-product-selection-id}}\"\n           },\n        \"active\" : true\n        }\n        \n   ]\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/stores",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"stores"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Create Store"
					},
					"response": []
				}
			]
		},
		{
			"name": "Create Business Units",
			"item": [
				{
					"name": "Create Sport for All Corporate Business Unit",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"corp-business-unit-id\", data.results[0].id); ",
									"    pm.environment.set(\"corp-business-unit-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"corp-business-unit-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"corp-business-unit-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"corp-business-unit-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"corp-business-unit-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"key\" : \"sport-for-all-corporate\",\n  \"name\" : \"Sport for All Corporate\",\n  \"unitType\" : \"Company\",\n  \"status\" : \"Active\",\n  \"storeMode\" : \"Explicit\",\n  \"stores\" : [\n  ],\n  \"contactEmail\" : \"corporate.contact@sportforall.com\",\n  \"associateMode\" : \"Explicit\",\n  \"associates\" : [\n   ],\n  \"addresses\" : [\n        {\n          \"country\": \"US\"\n        }\n      ],\n  \"defaultShippingAddress\" : 0\n\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/business-units",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"business-units"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "null"
					},
					"response": []
				},
				{
					"name": "Create SportForAll East Region Business Unit",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"east-business-unit-id\", data.results[0].id); ",
									"    pm.environment.set(\"east-business-unit-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"east-business-unit-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"east-business-unit-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"east-business-unit-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"east-business-unit-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"key\": \"sport-for-all-east-region\",\n    \"name\": \"Sport for All East Region\",\n    \"unitType\" : \"Division\",\n    \"status\" : \"Active\",\n    \"storeMode\" : \"Explicit\",\n    \"stores\" : [\n    ],\n    \"contactEmail\" : \"east-region.contact@sportforall.com\",\n    \"associateMode\": \"Explicit\",\n    \"associates\": [],\n    \"addresses\" : [\n        {\n          \"country\": \"US\"\n        }\n      ],\n    \"defaultShippingAddress\" : 0,\n    \"parentUnit\": {\n        \"typeId\": \"business-unit\",\n        \"key\": \"{{corp-business-unit-key}}\"\n    },\n    \"topLevelUnit\": {\n        \"typeId\": \"business-unit\",\n        \"key\": \"{{corp-business-unit-key}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/business-units",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"business-units"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "null"
					},
					"response": []
				},
				{
					"name": "Create SportForAll West Region Business Unit",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"west-business-unit-id\", data.results[0].id); ",
									"    pm.environment.set(\"west-business-unit-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"west-business-unit-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"west-business-unit-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"west-business-unit-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"west-business-unit-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"key\": \"sport-for-all-west-region\",\n    \"name\": \"Sport for All West Region\",\n    \"unitType\" : \"Division\",\n    \"status\" : \"Active\",\n    \"storeMode\": \"FromParent\",\n    \"associateMode\": \"ExplicitAndFromParent\",\n    \"associates\": [],\n    \"contactEmail\" : \"west-region.contact@sportforall.com\",\n    \"addresses\" : [\n        {\n          \"country\": \"US\"\n        }\n      ],\n    \"defaultShippingAddress\" : 0,\n    \"parentUnit\": {\n        \"typeId\": \"business-unit\",\n        \"key\": \"{{corp-business-unit-key}}\"\n    },\n    \"topLevelUnit\": {\n        \"typeId\": \"business-unit\",\n        \"key\": \"{{corp-business-unit-key}}\"\n    }\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/business-units",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"business-units"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "null"
					},
					"response": []
				}
			]
		},
		{
			"name": "Associate Roles",
			"item": [
				{
					"name": "Create AssociateRole BU Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"bu-admin-associate-role-id\", data.results[0].id); ",
									"    pm.environment.set(\"bu-admin-associate-role-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"bu-admin-associate-role-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"bu-admin-associate-role-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"bu-admin-associate-role-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"bu-admin-associate-role-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"key\": \"bu-admin\",\n    \"buyerAssignable\": true,\n    \"name\": \"BU Admin\",\n    \"permissions\": [\n        \"AddChildUnits\",\n        \"UpdateAssociates\",\n        \"UpdateBusinessUnitDetails\",\n        \"UpdateParentUnit\",\n        \"CreateApprovalRules\",\n        \"UpdateApprovalRules\",\n        \"UpdateApprovalFlows\"\n    ]\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/associate-roles",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"associate-roles"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Creating a Associate Role generates the [AssociateRoleCreated](ctp:api:type:AssociateRoleCreatedMessage) Message.\n"
					},
					"response": []
				},
				{
					"name": "Create AssociateRole Buyer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"buyer-associate-role-id\", data.results[0].id); ",
									"    pm.environment.set(\"buyer-associate-role-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"buyer-associate-role-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"buyer-associate-role-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"buyer-associate-role-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"buyer-associate-role-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"key\": \"buyer\",\n    \"buyerAssignable\": true,\n    \"name\": \"Buyer\",\n            \"permissions\": [\n                \"UpdateMyCarts\",\n                \"RenegotiateMyQuotes\",\n                \"CreateMyOrdersFromMyCarts\",\n                \"UpdateMyOrders\",\n                \"ViewMyQuotes\",\n                \"CreateMyOrdersFromMyQuotes\",\n                \"CreateMyCarts\",\n                \"ViewMyOrders\",\n                \"ReassignMyQuotes\",\n                \"CreateMyQuoteRequestsFromMyCarts\",\n                \"AcceptMyQuotes\",\n                \"ViewMyCarts\",\n                \"ViewMyQuoteRequests\",\n                \"UpdateMyQuoteRequests\",\n                \"DeclineMyQuotes\",\n                \"DeleteMyCarts\"\n            ]\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/associate-roles",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"associate-roles"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Creating a Associate Role generates the [AssociateRoleCreated](ctp:api:type:AssociateRoleCreatedMessage) Message.\n"
					},
					"response": []
				},
				{
					"name": "Create AssociateRole Reviewer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"reviewer-associate-role-id\", data.results[0].id); ",
									"    pm.environment.set(\"reviewer-associate-role-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"reviewer-associate-role-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"reviewer-associate-role-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"reviewer-associate-role-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"reviewer-associate-role-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"key\": \"reviewer\",\n    \"buyerAssignable\": true,\n    \"name\": \"Reviewer\",\n            \"permissions\": [\n                \"ViewOthersCarts\",\n                \"UpdateMyCarts\",\n                \"RenegotiateMyQuotes\",\n                \"CreateMyOrdersFromMyCarts\",\n                \"ViewMyQuotes\",\n                \"CreateMyOrdersFromMyQuotes\",\n                \"CreateMyCarts\",\n                \"ViewMyOrders\",\n                \"ViewOthersQuotes\",\n                \"ReassignMyQuotes\",\n                \"ViewOthersQuoteRequests\",\n                \"DeclineMyQuotes\",\n                \"CreateMyQuoteRequestsFromMyCarts\",\n                \"AcceptMyQuotes\",\n                \"ViewMyCarts\",\n                \"ViewMyQuoteRequests\",\n                \"UpdateMyQuoteRequests\",\n                \"ViewOthersOrders\",\n                \"UpdateMyOrders\"\n            ]\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/associate-roles",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"associate-roles"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Creating a Associate Role generates the [AssociateRoleCreated](ctp:api:type:AssociateRoleCreatedMessage) Message.\n"
					},
					"response": []
				},
				{
					"name": "Create AssociateRole Supervisor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"supervisor-associate-role-id\", data.results[0].id); ",
									"    pm.environment.set(\"supervisor-associate-role-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"supervisor-associate-role-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"supervisor-associate-role-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"supervisor-associate-role-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"supervisor-associate-role-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"key\": \"supervisor\",\n    \"buyerAssignable\": true,\n    \"name\": \"Supervisor\",\n            \"permissions\": [\n                \"ViewOthersCarts\",\n                \"CreateMyOrdersFromMyCarts\",\n                \"UpdateOthersOrders\",\n                \"ViewMyOrders\",\n                \"ViewOthersQuotes\",\n                \"ViewOthersQuoteRequests\",\n                \"CreateMyQuoteRequestsFromMyCarts\",\n                \"AcceptMyQuotes\",\n                \"CreateQuoteRequestsFromOthersCarts\",\n                \"DeclineOthersQuotes\",\n                \"UpdateMyCarts\",\n                \"DeleteOthersCarts\",\n                \"ReassignOthersQuotes\",\n                \"RenegotiateMyQuotes\",\n                \"ViewMyCarts\",\n                \"ViewMyQuoteRequests\",\n                \"UpdateMyQuoteRequests\",\n                \"ViewOthersOrders\",\n                \"UpdateMyOrders\",\n                \"CreateOrdersFromOthersQuotes\",\n                \"ViewMyQuotes\",\n                \"CreateMyOrdersFromMyQuotes\",\n                \"CreateOrdersFromOthersCarts\",\n                \"UpdateOthersCarts\",\n                \"RenegotiateOthersQuotes\",\n                \"CreateMyCarts\",\n                \"AcceptOthersQuotes\",\n                \"CreateOthersCarts\",\n                \"ReassignMyQuotes\",\n                \"UpdateOthersQuoteRequests\",\n                \"DeclineMyQuotes\",\n                \"DeleteMyCarts\"\n            ]\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/associate-roles",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"associate-roles"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Creating a Associate Role generates the [AssociateRoleCreated](ctp:api:type:AssociateRoleCreatedMessage) Message.\n"
					},
					"response": []
				},
				{
					"name": "Create AssociateRole Approver",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"approver-associate-role-id\", data.results[0].id); ",
									"    pm.environment.set(\"approver-associate-role-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"approver-associate-role-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"approver-associate-role-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"approver-associate-role-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"approver-associate-role-key\", data.key);",
									"}",
									"if(data.results){",
									"    console.log(\"data.results is: \", data.results);}",
									"    else {",
									"    console.log(\"data.results is: undefined\");",
									"    }",
									"if(data.results[0]){",
									"    console.log(\"data.results[0] is: \", data.results[0]);}",
									"    else {",
									"    console.log(\"data.results[0] is: undefined\");",
									"    }",
									"if(data.key){",
									"    console.log(\"data.key is: \", data.key);}",
									"    else {",
									"    console.log(\"data.key is: undefined\");",
									"    }",
									"if(data.id){",
									"    console.log(\"data.id is: \", data.id);}",
									"    else {",
									"    console.log(\"data.id is: undefined\");",
									"    }",
									"if(data.version){",
									"    console.log(\"data.version is: \", data.version);}",
									"    else {",
									"    console.log(\"data.version is: undefined\");",
									"    }",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"key\": \"approver\",\n    \"buyerAssignable\": true,\n    \"name\": \"Approver\",\n    \"permissions\": [\n        \"UpdateApprovalFlows\"\n    ]\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/associate-roles",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"associate-roles"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Creating a Associate Role generates the [AssociateRoleCreated](ctp:api:type:AssociateRoleCreatedMessage) Message.\n"
					},
					"response": []
				},
				{
					"name": "Query Associate Roles",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"associate-role-id\", data.results[0].id); ",
									"    pm.environment.set(\"associate-role-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"associate-role-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"associate-role-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"associate-role-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"associate-role-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/associate-roles",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"associate-roles"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Create Customers",
			"item": [
				{
					"name": "Create Customer Sam Smith",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"sam-customer-id\", data.results[0].id); ",
									"    pm.environment.set(\"sam-customer-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"sam-customer-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"sam-customer-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"sam-customer-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"sam-customer-key\", data.key);",
									"}",
									"if(data.customer.version){",
									"    pm.environment.set(\"sam-customer-version\", data.customer.version);",
									"}",
									"if(data.customer.id){",
									"    pm.environment.set(\"sam-customer-id\", data.customer.id); ",
									"}",
									"if(data.customer.key){",
									"    pm.environment.set(\"sam-customer-key\", data.customer.key);",
									"}",
									"if(data.results){",
									"    console.log(\"data.results is: \", data.results);}",
									"    else {",
									"    console.log(\"data.results is: undefined\");",
									"    }",
									"if(data.results && data.results[0]){",
									"    console.log(\"data.results[0] is: \", data.results[0]);}",
									"    else {",
									"    console.log(\"data.results[0] is: undefined\");",
									"    }",
									"if(data.key){",
									"    console.log(\"data.key is: \", data.key);}",
									"    else {",
									"    console.log(\"data.key is: undefined\");",
									"    }",
									"if(data.id){",
									"    console.log(\"data.id is: \", data.id);}",
									"    else {",
									"    console.log(\"data.id is: undefined\");",
									"    }",
									"if(data.version){",
									"    console.log(\"data.version is: \", data.version);}",
									"    else {",
									"    console.log(\"data.version is: undefined\");",
									"    }",
									"if(data.customer.key){",
									"    console.log(\"data.customer.key is: \", data.customer.key);}",
									"    else {",
									"    console.log(\"data.customer.key is: undefined\");",
									"    }",
									"if(data.customer.id){",
									"    console.log(\"data.customer.id is: \", data.customer.id);}",
									"    else {",
									"    console.log(\"data.customer.id is: undefined\");",
									"    }",
									"if(data.customer.version){",
									"    console.log(\"data.customer.version is: \", data.customer.version);}",
									"    else {",
									"    console.log(\"data.customer.version is: undefined\");",
									"    }",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n      \"email\": \"sam.smith@sportforall.com\",\n      \"key\": \"sam-smith-key\",\n      \"firstName\": \"Sam\",\n      \"lastName\": \"Smith\",\n      \"companyName\": \"Sport for All\",\n      \"password\": \"password\",\n      \"addresses\": [\n        {\n          \"country\": \"US\"\n        }\n      ],\n      \"defaultShippingAddressId\": 1\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/customers",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"customers"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "If the `anonymousCart` field is set on the [CustomerDraft](ctp:api:type:CustomerDraft), then the newly created Customer will be assigned to that [Cart](ctp:api:type:Cart).\nSimilarly, if the `anonymousId` field is set, the Customer will be set on all [Carts](ctp:api:type:Cart), [Orders](ctp:api:type:Order), [ShoppingLists](ctp:api:type:ShoppingList) and [Payments](ctp:api:type:Payment) with the same `anonymousId`.\nCreating a Customer produces the [CustomerCreated](ctp:api:type:CustomerCreatedMessage) Message.\n"
					},
					"response": []
				},
				{
					"name": "Create Customer Sally Jones",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"sally-customer-id\", data.results[0].id); ",
									"    pm.environment.set(\"sally-customer-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"sally-customer-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"sally-customer-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"sally-customer-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"sally-customer-key\", data.key);",
									"}",
									"if(data.customer.version){",
									"    pm.environment.set(\"sally-customer-version\", data.customer.version);",
									"}",
									"if(data.customer.id){",
									"    pm.environment.set(\"sally-customer-id\", data.customer.id); ",
									"}",
									"if(data.customer.key){",
									"    pm.environment.set(\"sally-customer-key\", data.customer.key);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n      \"email\": \"sally.jones@sportforall.com\",\n      \"key\": \"sally-customer-key\",\n      \"firstName\": \"Sally\",\n      \"lastName\": \"Jones\",\n      \"companyName\": \"Sport for All\",\n      \"password\": \"password\",\n      \"addresses\": [\n        {\n          \"country\": \"US\"\n        }\n      ],\n      \"defaultShippingAddressId\": 1\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/customers",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"customers"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "If the `anonymousCart` field is set on the [CustomerDraft](ctp:api:type:CustomerDraft), then the newly created Customer will be assigned to that [Cart](ctp:api:type:Cart).\nSimilarly, if the `anonymousId` field is set, the Customer will be set on all [Carts](ctp:api:type:Cart), [Orders](ctp:api:type:Order), [ShoppingLists](ctp:api:type:ShoppingList) and [Payments](ctp:api:type:Payment) with the same `anonymousId`.\nCreating a Customer produces the [CustomerCreated](ctp:api:type:CustomerCreatedMessage) Message.\n"
					},
					"response": []
				},
				{
					"name": "Create Customer Tobias Schmidt",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"tobias-customer-id\", data.results[0].id); ",
									"    pm.environment.set(\"tobias-customer-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"tobias-customer-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"tobias-customer-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"tobias-customer-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"tobias-customer-key\", data.key);",
									"}",
									"if(data.customer.version){",
									"    pm.environment.set(\"tobias-customer-version\", data.customer.version);",
									"}",
									"if(data.customer.id){",
									"    pm.environment.set(\"tobias-customer-id\", data.customer.id); ",
									"}",
									"if(data.customer.key){",
									"    pm.environment.set(\"tobias-customer-key\", data.customer.key);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n      \"email\": \"tobias.schmidt@sportforall.com\",\n      \"key\": \"tobias-customer-key\",\n      \"firstName\": \"Tobias\",\n      \"lastName\": \"Schmidt\",\n      \"companyName\": \"Sport for All\",\n      \"password\": \"password\",\n      \"addresses\": [\n        {\n          \"country\": \"US\"\n        }\n      ],\n      \"defaultShippingAddressId\": 1\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/customers",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"customers"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "If the `anonymousCart` field is set on the [CustomerDraft](ctp:api:type:CustomerDraft), then the newly created Customer will be assigned to that [Cart](ctp:api:type:Cart).\nSimilarly, if the `anonymousId` field is set, the Customer will be set on all [Carts](ctp:api:type:Cart), [Orders](ctp:api:type:Order), [ShoppingLists](ctp:api:type:ShoppingList) and [Payments](ctp:api:type:Payment) with the same `anonymousId`.\nCreating a Customer produces the [CustomerCreated](ctp:api:type:CustomerCreatedMessage) Message.\n"
					},
					"response": []
				},
				{
					"name": "Create Customer Martha Johns",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"martha-customer-id\", data.results[0].id); ",
									"    pm.environment.set(\"martha-customer-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"martha-customer-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"martha-customer-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"martha-customer-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"martha-customer-key\", data.key);",
									"}",
									"if(data.customer.version){",
									"    pm.environment.set(\"martha-customer-version\", data.customer.version);",
									"}",
									"if(data.customer.id){",
									"    pm.environment.set(\"martha-customer-id\", data.customer.id); ",
									"}",
									"if(data.customer.key){",
									"    pm.environment.set(\"martha-customer-key\", data.customer.key);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n      \"email\": \"martha.johns@sportforall.com\",\n      \"key\": \"martha-customer-key\",\n      \"firstName\": \"Martha\",\n      \"lastName\": \"Johns\",\n      \"companyName\": \"Sport for All\",\n      \"password\": \"password\",\n      \"addresses\": [\n        {\n          \"country\": \"US\"\n        }\n      ],\n      \"defaultShippingAddressId\": 1\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/customers",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"customers"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "If the `anonymousCart` field is set on the [CustomerDraft](ctp:api:type:CustomerDraft), then the newly created Customer will be assigned to that [Cart](ctp:api:type:Cart).\nSimilarly, if the `anonymousId` field is set, the Customer will be set on all [Carts](ctp:api:type:Cart), [Orders](ctp:api:type:Order), [ShoppingLists](ctp:api:type:ShoppingList) and [Payments](ctp:api:type:Payment) with the same `anonymousId`.\nCreating a Customer produces the [CustomerCreated](ctp:api:type:CustomerCreatedMessage) Message.\n"
					},
					"response": []
				}
			]
		},
		{
			"name": "Add Associates to Business Units",
			"item": [
				{
					"name": "Add Associate Sally",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"east-business-unit-id\", data.results[0].id); ",
									"    pm.environment.set(\"east-business-unit-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"east-business-unit-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"east-business-unit-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"east-business-unit-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"east-business-unit-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"version\": {{east-business-unit-version}},\n    \"actions\": [\n        {\n            \"action\" : \"addAssociate\",\n            \"associate\" : {\n              \"customer\" : {\n                \"typeId\" : \"customer\",\n                \"id\" : \"{{sally-customer-id}}\"\n              },\n              \"associateRoleAssignments\" : [ {\n                \"associateRole\" : {\n                  \"typeId\" : \"associate-role\",\n                  \"key\" : \"{{buyer-associate-role-key}}\"\n                }\n              } ]\n            }\n          }\n    ]\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/business-units/{{east-business-unit-id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"business-units",
								"{{east-business-unit-id}}"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "post BusinessUnits"
					},
					"response": []
				},
				{
					"name": "Add Associate Sam",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"east-business-unit-id\", data.results[0].id); ",
									"    pm.environment.set(\"east-business-unit-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"east-business-unit-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"east-business-unit-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"east-business-unit-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"east-business-unit-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"version\": {{east-business-unit-version}},\n    \"actions\": [\n        {\n            \"action\" : \"addAssociate\",\n            \"associate\" : {\n              \"customer\" : {\n                \"typeId\" : \"customer\",\n                \"id\" : \"{{sam-customer-id}}\"\n              },\n              \"associateRoleAssignments\" : [ {\n                \"associateRole\" : {\n                  \"typeId\" : \"associate-role\",\n                  \"key\" : \"{{approver-associate-role-key}}\"\n                }\n              },\n                {\n                \"associateRole\" : {\n                  \"typeId\" : \"associate-role\",\n                  \"key\" : \"{{supervisor-associate-role-key}}\"\n                }\n              },\n                {\n                \"associateRole\" : {\n                  \"typeId\" : \"associate-role\",\n                  \"key\" : \"{{bu-admin-associate-role-key}}\"\n                }\n              }               \n              ]\n            }\n          }\n    ]\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/business-units/{{east-business-unit-id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"business-units",
								"{{east-business-unit-id}}"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "post BusinessUnits"
					},
					"response": []
				},
				{
					"name": "Add Associate Tobias",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"corp-business-unit-id\", data.results[0].id); ",
									"    pm.environment.set(\"corp-business-unit-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"corp-business-unit-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"corp-business-unit-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"corp-business-unit-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"corp-business-unit-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"version\": {{corp-business-unit-version}},\n    \"actions\": [\n        {\n            \"action\" : \"addAssociate\",\n            \"associate\" : {\n              \"customer\" : {\n                \"typeId\" : \"customer\",\n                \"id\" : \"{{tobias-customer-id}}\"\n              },\n              \"associateRoleAssignments\" : [ \n                {\n                \"associateRole\" : {\n                  \"typeId\" : \"associate-role\",\n                  \"key\" : \"{{supervisor-associate-role-key}}\"\n                },\n                \"inheritance\": \"Enabled\"\n              },\n                {\n                \"associateRole\" : {\n                  \"typeId\" : \"associate-role\",\n                  \"key\" : \"{{bu-admin-associate-role-key}}\"\n                },\n                \"inheritance\": \"Enabled\"\n              }               \n              ]\n            }\n          }\n    ]\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/business-units/{{corp-business-unit-id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"business-units",
								"{{corp-business-unit-id}}"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "post BusinessUnits"
					},
					"response": []
				},
				{
					"name": "Add Associate Martha",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"corp-business-unit-id\", data.results[0].id); ",
									"    pm.environment.set(\"corp-business-unit-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"corp-business-unit-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"corp-business-unit-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"corp-business-unit-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"corp-business-unit-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"version\": {{corp-business-unit-version}},\n    \"actions\": [\n        {\n            \"action\" : \"addAssociate\",\n            \"associate\" : {\n              \"customer\" : {\n                \"typeId\" : \"customer\",\n                \"id\" : \"{{martha-customer-id}}\"\n              },\n              \"associateRoleAssignments\" : [ {\n                \"associateRole\" : {\n                  \"typeId\" : \"associate-role\",\n                  \"key\" : \"{{buyer-associate-role-key}}\"\n                },\n                \"inheritance\": \"Enabled\"\n              }               \n              ]\n            }\n          }\n    ]\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/business-units/{{corp-business-unit-id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"business-units",
								"{{corp-business-unit-id}}"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "post BusinessUnits"
					},
					"response": []
				}
			]
		},
		{
			"name": "Quotes",
			"item": [
				{
					"name": "Create QuoteRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"quote-request-id\", data.results[0].id); ",
									"    pm.environment.set(\"quote-request-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"quote-request-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"quote-request-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"quote-request-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"quote-request-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cart\" : {\n    \"typeId\" : \"cart\",\n    \"id\" : \"3fd2da41-baae-476e-9ee3-0457b244b10e\"\n  },\n  \"cartVersion\" : 9,\n  \"comment\" : \"Please give me a 50% discount\"\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/quote-requests",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"quote-requests"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "null"
					},
					"response": []
				},
				{
					"name": "Create Quote",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"quote-id\", data.results[0].id); ",
									"    pm.environment.set(\"quote-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"quote-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"quote-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"quote-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"quote-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"stagedQuote\" : {\n    \"typeId\" : \"staged-quote\",\n    \"id\" : \"2a3baa00-44fa-4ab8-bec7-933c31e18dcc\"\n  },\n  \"stagedQuoteVersion\" : 1\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/quotes",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"quotes"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "null"
					},
					"response": []
				},
				{
					"name": "Query quotes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"quote-id\", data.results[0].id); ",
									"    pm.environment.set(\"quote-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"quote-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"quote-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"quote-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"quote-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/quotes",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"quotes"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								},
								{
									"key": "sort",
									"value": "",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "",
									"disabled": true
								},
								{
									"key": "offset",
									"value": "",
									"disabled": true
								},
								{
									"key": "withTotal",
									"value": "",
									"disabled": true
								},
								{
									"key": "where",
									"value": "",
									"disabled": true
								},
								{
									"key": "/^var[.][a-zA-Z0-9]+$/",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "null"
					},
					"response": []
				},
				{
					"name": "Create an Order from a Quote",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"quote-id\", data.results[0].id); ",
									"    pm.environment.set(\"quote-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"quote-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"quote-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"quote-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"quote-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"quote\" : {\n    \"id\" : \"2d1aa9f7-8cce-4e6e-9fc7-9c9bc460a516\",\n    \"typeId\" : \"quote\"\n  },\n  \"version\" : 1\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/orders/quotes",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"orders",
								"quotes"
							]
						},
						"description": "Create an Order from a Quote"
					},
					"response": []
				}
			]
		},
		{
			"name": "Approval Rules",
			"item": [
				{
					"name": "Create Approval Rule",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"approval-rule-id\", data.results[0].id); ",
									"    pm.environment.set(\"approval-rule-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"approval-rule-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"approval-rule-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"approval-rulet-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"approval-rule-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"key\" : \"approval-rule2\",\n  \"name\" : \"Approval Rule 2\",\n  \"description\" : \"Approval Rule 1\",\n  \"status\" : \"Active\",\n  \"predicate\" : \"totalPrice.centAmount >= 10000\",\n  \"approvers\" : {\n    \"tiers\" : [ {\n      \"and\" : [ {\n        \"or\" : [ {\n          \"associateRole\" : {\n            \"typeId\" : \"associate-role\",\n            \"key\" : \"{{supervisor-associate-role-key}}\"\n          }\n        } ]\n      } ]\n    } ]\n  },\n  \"requesters\" : [ {\n    \"associateRole\" : {\n      \"typeId\" : \"associate-role\",\n      \"key\" : \"{{buyer-associate-role-key}}\"\n    }\n  } ]\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/as-associate/{{sam-customer-id}}/in-business-unit/key={{east-business-unit-key}}/approval-rules",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"as-associate",
								"{{sam-customer-id}}",
								"in-business-unit",
								"key={{east-business-unit-key}}",
								"approval-rules"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "null"
					},
					"response": []
				},
				{
					"name": "Create order from cart in business unit",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"order-id\", data.results[0].id); ",
									"    pm.environment.set(\"order-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"order-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"order-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"order-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"order-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cart\" : {\n    \"id\" : \"2cf68658-3ef3-46e9-bc4f-8e483280aea6\",\n    \"typeId\" : \"cart\"\n  },\n  \"version\" : 8\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/as-associate/{{sally-customer-id}}/in-business-unit/key={{east-business-unit-key}}/orders",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"as-associate",
								"{{sally-customer-id}}",
								"in-business-unit",
								"key={{east-business-unit-key}}",
								"orders"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Creates an Order from a [Cart](ctp:api:type:Cart) in a [BusinessUnit](ctp:api:type:BusinessUnit).\nThe Cart must have a shipping address set before creating an Order.\nCreating an Order fails with an [InvalidOperation](ctp:api:type:InvalidOperationError) if the Cart does not reference the same BusinessUnit as the `businessUnitKey` path parameter.\n"
					},
					"response": []
				},
				{
					"name": "Query approval-flows",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"approval-flow-id\", data.results[0].id); ",
									"    pm.environment.set(\"approval-flow-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"approval-flow-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"approval-flow-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"approval-flow-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"approval-flow-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/as-associate/e81e7f20-302a-4fb4-a6da-f5f5462666f1/in-business-unit/key=sport-for-all-east-region/approval-flows",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"as-associate",
								"e81e7f20-302a-4fb4-a6da-f5f5462666f1",
								"in-business-unit",
								"key=sport-for-all-east-region",
								"approval-flows"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								},
								{
									"key": "sort",
									"value": "",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "",
									"disabled": true
								},
								{
									"key": "offset",
									"value": "",
									"disabled": true
								},
								{
									"key": "withTotal",
									"value": "",
									"disabled": true
								},
								{
									"key": "where",
									"value": "",
									"disabled": true
								},
								{
									"key": "/^var[.][a-zA-Z0-9]+$/",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "null"
					},
					"response": []
				},
				{
					"name": "Query Approval Rules - cannot query, only get by id or key - seems to work if no ID at the end as a general query",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"product-selection-assignment-id\", data.results[0].id); ",
									"    pm.environment.set(\"product-selection-assignment-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"product-selection-assignment-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"product-selection-assignment-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"product-selection-assignment-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"product-selection-assignment-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/as-associate/{{sam-customer-id}}/in-business-unit/key={{east-business-unit-key}}/approval-rules/",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"as-associate",
								"{{sam-customer-id}}",
								"in-business-unit",
								"key={{east-business-unit-key}}",
								"approval-rules",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Update ApprovalFlow by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"approval-flow-id\", data.results[0].id); ",
									"    pm.environment.set(\"approval-flow-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"approval-flow-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"approval-flow-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"approval-flow-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"approval-flow-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"reject\",\n    \"reason\" : \"Out of policy\"\n  } ]\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/as-associate/{{sam-customer-id}}/in-business-unit/key={{east-business-unit-key}}/approval-flows/699006d3-835b-4c5a-9d4e-3b3700995c10",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"as-associate",
								"{{sam-customer-id}}",
								"in-business-unit",
								"key={{east-business-unit-key}}",
								"approval-flows",
								"699006d3-835b-4c5a-9d4e-3b3700995c10"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "null"
					},
					"response": []
				}
			]
		},
		{
			"name": "Misc/in work",
			"item": [
				{
					"name": "Create Store",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"test-store-id\", data.results[0].id); ",
									"    pm.environment.set(\"test-store-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"test-store-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"test-store-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"test-store-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"munich-store-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"key\" : \"test-store\",\n  \"name\" : {\n    \"en\" : \"Test store\"\n  },\n  \"languages\" : [\n      \"en\", \"de\"\n  ],\n  \"countries\" : [\n\n  ],\n  \"distributionChannels\" : [\n      {\n              \"typeId\" : \"channel\",\n              \"id\" : \"{{test-dist-channel-id}}\"\n            }\n      \n  ],\n   \"productSelections\" : [\n       {\n           \"productSelection\": {\n              \"typeId\" : \"product-selection\",\n              \"id\" : \"{{test-product-selection-id}}\"\n           },\n        \"active\" : true\n        }\n        \n   ]\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/stores",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"stores"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Create Store"
					},
					"response": []
				},
				{
					"name": "02.01.x Update test StandalonePrice w Staged Price PEO-C-Carton-USD-US-Channel-2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"standalone-price-id-peo-v-carton-usd-us-channel-2\", data.results[0].id); ",
									"    pm.environment.set(\"standalone-price-version-peo-v-carton-usd-us-channel-2\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"standalone-price-key-peo-v-carton-usd-us-channel-2\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"standalone-price-version-peo-v-carton-usd-us-channel-2\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"standalone-price-id-peo-v-carton-usd-us-channel-2\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"standalone-price-key-peo-v-carton-usd-us-channel-2\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"version\" : 1,\n  \"actions\" : [  {\n    \"action\" : \"changeValue\",\n    \"staged\" : true,\n    \"value\" : {\n        \"currencyCode\" : \"USD\",\n        \"centAmount\" : 2000\n    }\n    }\n  ]\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/standalone-prices/key=PEO-C-Carton-USD-US-Channel-2",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"standalone-prices",
								"key=PEO-C-Carton-USD-US-Channel-2"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Approval Rule test",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"approval-rule-id\", data.results[0].id); ",
									"    pm.environment.set(\"approval-rule-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"approval-rule-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"approval-rule-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"approval-rulet-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"approval-rule-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"key\" : \"test-approval-rule4\",\n  \"name\" : \"test approval rule4\",\n  \"description\" : \"Test Approval Rule3\",\n  \"status\" : \"Active\",\n  \"predicate\" : \"totalPrice.centAmount >= 10000\",\n  \"approvers\" : {\n    \"tiers\" : [ {\n      \"and\" : [ {\n        \"or\" : [ {\n          \"associateRole\" : {\n            \"typeId\" : \"associate-role\",\n            \"key\" : \"supervisor\"\n          }\n        }, {\n          \"associateRole\" : {\n            \"typeId\" : \"associate-role\",\n            \"key\" : \"bu-admin\"\n          }\n        } ]\n      } ]\n    } ]\n  },\n  \"requesters\" : [ {\n    \"associateRole\" : {\n      \"typeId\" : \"associate-role\",\n      \"key\" : \"buyer-associate-role\"\n    }\n  } ]\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/as-associate/af69773d-5af7-45a0-a60a-3e8fa518d131/in-business-unit/key=sport-for-all-west-region/approval-rules",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"as-associate",
								"af69773d-5af7-45a0-a60a-3e8fa518d131",
								"in-business-unit",
								"key=sport-for-all-west-region",
								"approval-rules"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "null"
					},
					"response": []
				},
				{
					"name": "Update test Associate Role Add Permission",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"associate-role-id\", data.results[0].id); ",
									"    pm.environment.set(\"associate-role-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"associate-role-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"associate-role-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"associate-role-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"associate-role-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"version\" : 6,\n  \"actions\" : [ {\n    \"action\" : \"addPermission\",\n    \"permission\" : \"UpdateApprovalFlows\"\n  } ]\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/associate-roles/b878e9f9-db99-4a91-acc4-6f27813691e3",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"associate-roles",
								"b878e9f9-db99-4a91-acc4-6f27813691e3"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Query East business unit",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"business-unit-id\", data.results[0].id); ",
									"    pm.environment.set(\"business-unit-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"business-unit-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"business-unit-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"business-unit-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"business-unit-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/business-units/{{east-business-unit-id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"business-units",
								"{{east-business-unit-id}}"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								},
								{
									"key": "sort",
									"value": "",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "",
									"disabled": true
								},
								{
									"key": "offset",
									"value": "",
									"disabled": true
								},
								{
									"key": "withTotal",
									"value": "",
									"disabled": true
								},
								{
									"key": "where",
									"value": "",
									"disabled": true
								},
								{
									"key": "/^var[.][a-zA-Z0-9]+$/",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "null"
					},
					"response": []
				},
				{
					"name": "Query available products in SportForAll West Region Store w Expand",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"product-selection-assignment-id\", data.results[0].id); ",
									"    pm.environment.set(\"product-selection-assignment-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"product-selection-assignment-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"product-selection-assignment-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"product-selection-assignment-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"product-selection-assignment-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/in-store/key=sportforall-west-region-store/product-selection-assignments?expand=product",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"in-store",
								"key=sportforall-west-region-store",
								"product-selection-assignments"
							],
							"query": [
								{
									"key": "expand",
									"value": "product"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Query available products in SportForAll East Region Store",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"product-selection-assignment-id\", data.results[0].id); ",
									"    pm.environment.set(\"product-selection-assignment-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"product-selection-assignment-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"product-selection-assignment-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"product-selection-assignment-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"product-selection-assignment-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/product-projections/search?storeProjection=sportforall-east-region-store",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"product-projections",
								"search"
							],
							"query": [
								{
									"key": "storeProjection",
									"value": "sportforall-east-region-store"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "01.2 Create Product - Protein enriched nutrition bar",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"product-id-penb\", data.results[0].id); ",
									"    pm.environment.set(\"product-version-penb\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"product-key-penb\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"product-version-penb\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"product-id-penb\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"product-key-penb\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"productType\":{\n        \"typeId\":\"product-type\",\n        \"id\":\"{{product-type-id-nutrition-bar}}\"\n    },\n    \"name\":{\n        \"de\":\"Protein enriched nutrition bar\",\n        \"en\":\"Protein enriched nutrition bar\"\n    },\n    \"description\":{\n        \"de\":\"Protein enriched nutrition bar\",\n        \"en\":\"Protein enriched nutrition bar\"\n    },\n    \"slug\":{\n        \"de\":\"Protein_enriched_nutrition_bar\",\n        \"en\":\"Protein_enriched_nutrition_bar\"\n    },\n    \"metaTitle\":{\n        \"de\":\"Protein enriched nutrition bar\",\n        \"en\":\"Protein enriched nutrition bar\"\n    },\n    \"publish\": true,\n    \"key\":\"protein-enriched-nutrition-bar\",\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    },\n    \"priceMode\" : \"Embedded\",\n    \"masterVariant\":{\n        \"id\":1,\n        \"sku\":\"PENB-C-Carton\",\n        \"key\":\"PENB-C-Carton\",\n        \"attributes\":[\n            {\n            \"name\":\"bar-flavor\",\n            \"value\":\"chocolate\"\n            },\n            {\n            \"name\":\"bar-size\",\n            \"value\":\"carton\"\n            }\n        ],\n     \"prices\": [\n              {\n                \"key\": \"PENB-C-Carton-USD-US\",\n                \"value\": {\n                  \"type\": \"centPrecision\",\n                  \"currencyCode\": \"USD\",\n                  \"centAmount\": 1200,\n                  \"fractionDigits\": 2\n                },\n                \"country\": \"US\"\n              },\n              {\n                \"key\": \"PENB-C-Carton-EUR-DE\",\n                \"value\": {\n                  \"type\": \"centPrecision\",\n                  \"currencyCode\": \"EUR\",\n                  \"centAmount\": 1200,\n                  \"fractionDigits\": 2\n                },\n                \"country\": \"DE\"\n              }\n            ]\n    },\n    \"variants\":[\n        {\n        \"id\":2,\n        \"sku\":\"PENB-V-Carton\",\n        \"key\":\"PENB-V-Carton\",\n        \"attributes\":[\n            {\n            \"name\":\"bar-flavor\",\n            \"value\":\"vanilla\"\n            },\n            {\n            \"name\":\"bar-size\",\n            \"value\":\"carton\"\n            }\n        ]\n        },\n        {\n        \"id\":3,\n        \"sku\":\"PENB-S-Carton\",\n        \"key\":\"PENB-S-Carton\",\n        \"attributes\":[\n            {\n            \"name\":\"bar-flavor\",\n            \"value\":\"strawberry\"\n            },\n            {\n            \"name\":\"bar-size\",\n            \"value\":\"carton\"\n            }\n        ]\n        },\n        {\n        \"id\":4,\n        \"sku\":\"PENB-C-Case\",\n        \"key\":\"PENB-C-Case\",\n        \"attributes\":[\n            {\n            \"name\":\"bar-flavor\",\n            \"value\":\"chocolate\"\n            },\n            {\n            \"name\":\"bar-size\",\n            \"value\":\"case\"\n            }\n        ]\n        },\n        {\n        \"id\":5,\n        \"sku\":\"PENB-V-Case\",\n        \"key\":\"PENB-V-Case\",\n        \"attributes\":[\n            {\n            \"name\":\"bar-flavor\",\n            \"value\":\"vanilla\"\n            },\n            {\n            \"name\":\"bar-size\",\n            \"value\":\"case\"\n            }\n        ]\n        },\n        {\n        \"id\":6,\n        \"sku\":\"PENB-S-Case\",\n        \"key\":\"PENB-S-Case\",\n        \"attributes\":[\n            {\n            \"name\":\"bar-flavor\",\n            \"value\":\"strawberry\"\n            },\n            {\n            \"name\":\"bar-size\",\n            \"value\":\"case\"\n            }\n        ]\n        },\n        {\n        \"id\":7,\n        \"sku\":\"PENB-C-Pallette\",\n        \"key\":\"PENB-C-Pallette\",\n        \"attributes\":[\n            {\n            \"name\":\"bar-flavor\",\n            \"value\":\"chocolate\"\n            },\n            {\n            \"name\":\"bar-size\",\n            \"value\":\"pallette\"\n            }\n        ]\n        },\n        {\n        \"id\":8,\n        \"sku\":\"PENB-V-Pallette\",\n        \"key\":\"PENB-V-Pallette\",\n        \"attributes\":[\n            {\n            \"name\":\"bar-flavor\",\n            \"value\":\"vanilla\"\n            },\n            {\n            \"name\":\"bar-size\",\n            \"value\":\"pallette\"\n            }\n        ]\n        },\n        {\n        \"id\":9,\n        \"sku\":\"PENB-S-Pallette\",\n        \"key\":\"PENB-S-Pallette\",\n        \"attributes\":[\n            {\n            \"name\":\"bar-flavor\",\n            \"value\":\"strawberry\"\n            },\n            {\n            \"name\":\"bar-size\",\n            \"value\":\"pallette\"\n            }\n        ]\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/products",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"products"
							],
							"query": [
								{
									"key": "priceCurrency",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCountry",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCustomerGroup",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceChannel",
									"value": "",
									"disabled": true
								},
								{
									"key": "localeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "storeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "To create a new product, send a representation that is going to become the initial staged representation\nof the new product in the master catalog. If price selection query parameters are provided,\nthe selected prices will be added to the response.\n"
					},
					"response": []
				},
				{
					"name": "Replicate cart",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"replicate-id\", data.results[0].id); ",
									"    pm.environment.set(\"replicate-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"replicate-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"replicate-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"replicate-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"replicate-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"reference\" : {\n    \"id\" : \"2fd38672-c9f6-41d9-9f18-d093c88340dc\",\n    \"typeId\" : \"cart\"\n  }\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/carts/replicate",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"carts",
								"replicate"
							]
						},
						"description": "null"
					},
					"response": []
				},
				{
					"name": "Create cart in business unit",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"cart-id\", data.results[0].id); ",
									"    pm.environment.set(\"cart-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"cart-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"cart-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"cart-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"cart-key\", data.key);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"currency\" : \"EUR\"\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/as-associate/{{associate-id}}/in-business-unit/key={{business-unit-key}}/carts",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"as-associate",
								"{{associate-id}}",
								"in-business-unit",
								"key={{business-unit-key}}",
								"carts"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Creates a [Cart](ctp:api:type:Cart) in the [BusinessUnit](ctp:api:type:BusinessUnit) referenced by `businessUnitKey`. As such, the `businessUnit` field on [CartDraft](ctp:api:type:CartDraft) is ignored for this request.\nCreating a Cart can fail with an [InvalidOperation](ctp:api:type:InvalidOperationError) if the referenced [ShippingMethod](ctp:api:type:ShippingMethod) in the [CartDraft](ctp:api:type:CartDraft) has a predicate that does not match the Cart.\n"
					},
					"response": []
				}
			]
		},
		{
			"name": "Obtain access token",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"var data = JSON.parse(responseBody);",
							"if(data.access_token){",
							"    pm.environment.set(\"ctp_access_token\", data.access_token);",
							"}",
							"if (data.scope) {",
							"    parts = data.scope.split(\" \");",
							"    parts = parts.filter(scope => scope.includes(\":\")).map(scope => scope.split(\":\"))",
							"    if (parts.length > 0) {",
							"        scopeParts = parts[0];",
							"        pm.environment.set(\"project-key\", scopeParts[1]);",
							"        parts = parts.filter(scope => scope.length >= 3)",
							"        if (parts.length > 0) {",
							"            scopeParts = parts[0];",
							"            pm.environment.set(\"store-key\", scopeParts[2]);",
							"        }",
							"    }",
							"}"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{client_id}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{client_secret}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{auth_url}}/oauth/token?grant_type=client_credentials",
					"host": [
						"{{auth_url}}"
					],
					"path": [
						"oauth",
						"token"
					],
					"query": [
						{
							"key": "grant_type",
							"value": "client_credentials"
						}
					]
				},
				"description": "Use this request to obtain an access token for your commercetools platform project via Client Credentials Flow. As a prerequisite you must have filled out environment variables in Postman for projectKey, client_id and client_secret to use this."
			},
			"response": []
		},
		{
			"name": "Get TaxCategory",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
							"var data = JSON.parse(responseBody);",
							"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
							"    pm.environment.set(\"tax-category-id\", data.results[0].id); ",
							"    pm.environment.set(\"tax-category-version\", data.results[0].version);",
							"}",
							"if(data.results && data.results[0] && data.results[0].key){",
							"    pm.environment.set(\"tax-category-key\", data.results[0].key); ",
							"}",
							"if(data.version){",
							"    pm.environment.set(\"tax-category-version\", data.version);",
							"}",
							"if(data.id){",
							"    pm.environment.set(\"tax-category-id\", data.id); ",
							"}",
							"if(data.key){",
							"    pm.environment.set(\"tax-category-key\", data.key);",
							"}",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "accessToken",
							"value": "{{ctp_access_token}}",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						},
						{
							"key": "tokenType",
							"value": "Bearer",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/{{project-key}}/tax-categories",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{project-key}}",
						"tax-categories"
					],
					"query": [
						{
							"key": "expand",
							"value": "",
							"disabled": true
						}
					]
				},
				"description": "Get TaxCategory by key"
			},
			"response": []
		}
	]
}