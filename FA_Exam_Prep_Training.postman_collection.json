{
	"info": {
		"_postman_id": "281db344-408d-4fac-b2e1-6b17cc6de35b",
		"name": "FA_Exam_Prep_Training",
		"description": "## How-to Use\n\nTo be used for quick data creation in the trainings.\nBefore sending any request, please make sure that you have a valid token.\n\n- Import the environment file from https://github.com/commercetools/commercetools-postman-collection/blob/master/api/template.json into postman. \n- Create an api client (use admin template) for your project in the Merchant Center.\n- Set the `client_id` and `client_secret` in the `Commercetools template` environment from top-right (eye icon).\n- Send the request `Obtain access token`.\n- Send the request Get TaxCategory",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "11897687"
	},
	"item": [
		{
			"name": "Obtain access token",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"var data = JSON.parse(responseBody);",
							"if(data.access_token){",
							"    pm.environment.set(\"ctp_access_token\", data.access_token);",
							"}",
							"if (data.scope) {",
							"    parts = data.scope.split(\" \");",
							"    parts = parts.filter(scope => scope.includes(\":\")).map(scope => scope.split(\":\"))",
							"    if (parts.length > 0) {",
							"        scopeParts = parts[0];",
							"        pm.environment.set(\"project-key\", scopeParts[1]);",
							"        parts = parts.filter(scope => scope.length >= 3)",
							"        if (parts.length > 0) {",
							"            scopeParts = parts[0];",
							"            pm.environment.set(\"store-key\", scopeParts[2]);",
							"        }",
							"    }",
							"}"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{client_id}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{client_secret}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{auth_url}}/oauth/token?grant_type=client_credentials",
					"host": [
						"{{auth_url}}"
					],
					"path": [
						"oauth",
						"token"
					],
					"query": [
						{
							"key": "grant_type",
							"value": "client_credentials"
						}
					]
				},
				"description": "Use this request to obtain an access token for your commercetools platform project via Client Credentials Flow. As a prerequisite you must have filled out environment variables in Postman for projectKey, client_id and client_secret to use this."
			},
			"response": []
		},
		{
			"name": "Get TaxCategory",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
							"var data = JSON.parse(responseBody);",
							"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
							"    pm.environment.set(\"tax-category-id\", data.results[0].id); ",
							"    pm.environment.set(\"tax-category-version\", data.results[0].version);",
							"}",
							"if(data.results && data.results[0] && data.results[0].key){",
							"    pm.environment.set(\"tax-category-key\", data.results[0].key); ",
							"}",
							"if(data.version){",
							"    pm.environment.set(\"tax-category-version\", data.version);",
							"}",
							"if(data.id){",
							"    pm.environment.set(\"tax-category-id\", data.id); ",
							"}",
							"if(data.key){",
							"    pm.environment.set(\"tax-category-key\", data.key);",
							"}",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "accessToken",
							"value": "{{ctp_access_token}}",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						},
						{
							"key": "tokenType",
							"value": "Bearer",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/{{project-key}}/tax-categories",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{project-key}}",
						"tax-categories"
					],
					"query": [
						{
							"key": "expand",
							"value": "",
							"disabled": true
						}
					]
				},
				"description": "Get TaxCategory by key"
			},
			"response": []
		},
		{
			"name": "01 Create ProductType - Room Access",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
							"var data = JSON.parse(responseBody);",
							"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
							"    pm.environment.set(\"product-type-id-room-access\", data.results[0].id); ",
							"    pm.environment.set(\"product-type-version-room-access\", data.results[0].version);",
							"}",
							"if(data.results && data.results[0] && data.results[0].key){",
							"    pm.environment.set(\"product-type-key-room-access\", data.results[0].key); ",
							"}",
							"if(data.version){",
							"    pm.environment.set(\"product-type-version-room-access\", data.version);",
							"}",
							"if(data.id){",
							"    pm.environment.set(\"product-type-id-room-access\", data.id); ",
							"}",
							"if(data.key){",
							"    pm.environment.set(\"product-type-key-room-access\", data.key);",
							"}",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "accessToken",
							"value": "{{ctp_access_token}}",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						},
						{
							"key": "tokenType",
							"value": "Bearer",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"key\" : \"room-access\",\n  \"name\" : \"Room access\",\n  \"description\" : \"Room access\",\n  \"attributes\" : [ \n         {\n          \"name\": \"room-type\",\n          \"label\": {\n            \"de\": \"Room type\",\n            \"en\": \"Room type\"\n          },\n          \"inputTip\": {\n            \"de\": \"Room type\",\n            \"en\": \"Room type\"\n          },\n          \"isRequired\": true,\n          \"type\": {\n            \"name\": \"enum\",\n            \"values\": [\n              {\n                \"key\": \"weight-room\",\n                \"label\": \"Weight room\"\n              },\n              {\n                \"key\": \"fitness-room\",\n                \"label\": \"Fitness room\"\n              },\n              {\n                \"key\": \"sauna\",\n                \"label\": \"Sauna\"\n              },\n              {\n                \"key\": \"steam-room\",\n                \"label\": \"Steam room\"\n              }\n            ]\n          },\n          \"attributeConstraint\": \"None\",\n          \"isSearchable\": true\n        },\n        {\n          \"name\": \"duration\",\n          \"label\": {\n            \"de\": \"Duration\",\n            \"en\": \"Duration\"\n          },\n          \"inputTip\": {\n            \"de\": \"Duration\",\n            \"en\": \"Duration\"\n          },\n          \"isRequired\": true,\n          \"type\": {\n            \"name\": \"enum\",\n            \"values\": [\n              {\n                \"key\": \"monthly\",\n                \"label\": \"Monthly\"\n              },\n              {\n                \"key\": \"annual\",\n                \"label\": \"Annual\"\n              }\n            ]\n          },\n          \"attributeConstraint\": \"None\",\n          \"isSearchable\": true\n        }\n      ]\n}"
				},
				"url": {
					"raw": "{{host}}/{{project-key}}/product-types",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{project-key}}",
						"product-types"
					],
					"query": [
						{
							"key": "expand",
							"value": "",
							"disabled": true
						}
					]
				},
				"description": "Create ProductType"
			},
			"response": []
		},
		{
			"name": "02 Create ProductType - Membership",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
							"var data = JSON.parse(responseBody);",
							"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
							"    pm.environment.set(\"product-type-id-membership\", data.results[0].id); ",
							"    pm.environment.set(\"product-type-version-membership\", data.results[0].version);",
							"}",
							"if(data.results && data.results[0] && data.results[0].key){",
							"    pm.environment.set(\"product-type-key-membership\", data.results[0].key); ",
							"}",
							"if(data.version){",
							"    pm.environment.set(\"product-type-version-membership\", data.version);",
							"}",
							"if(data.id){",
							"    pm.environment.set(\"product-type-id-membership\", data.id); ",
							"}",
							"if(data.key){",
							"    pm.environment.set(\"product-type-key-membership\", data.key);",
							"}",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "accessToken",
							"value": "{{ctp_access_token}}",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						},
						{
							"key": "tokenType",
							"value": "Bearer",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n      \"key\": \"membership\",\n      \"name\": \"Membership\",\n      \"description\": \"Membership\",\n      \"attributes\": [\n        {\n          \"name\": \"duration\",\n          \"label\": {\n            \"de\": \"Duration\",\n            \"en\": \"Duration\"\n          },\n          \"inputTip\": {\n            \"de\": \"Duration\",\n            \"en\": \"Duration\"\n          },\n          \"isRequired\": true,\n          \"type\": {\n            \"name\": \"enum\",\n            \"values\": [\n              {\n                \"key\": \"monthly\",\n                \"label\": \"Monthly\"\n              },\n              {\n                \"key\": \"annual\",\n                \"label\": \"Annual\"\n              }\n            ]\n          },\n          \"attributeConstraint\": \"None\",\n          \"isSearchable\": true\n        }\n      ]\n    }\n"
				},
				"url": {
					"raw": "{{host}}/{{project-key}}/product-types",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{project-key}}",
						"product-types"
					],
					"query": [
						{
							"key": "expand",
							"value": "",
							"disabled": true
						}
					]
				},
				"description": "Create ProductType"
			},
			"response": []
		},
		{
			"name": "02.1 Create Product - Gym Membership",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
							"var data = JSON.parse(responseBody);",
							"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
							"    pm.environment.set(\"product-id-gym-membership\", data.results[0].id); ",
							"    pm.environment.set(\"product-version-gym-membership\", data.results[0].version);",
							"}",
							"if(data.results && data.results[0] && data.results[0].key){",
							"    pm.environment.set(\"product-key-gym-membership\", data.results[0].key); ",
							"}",
							"if(data.version){",
							"    pm.environment.set(\"product-version-gym-membership\", data.version);",
							"}",
							"if(data.id){",
							"    pm.environment.set(\"product-id-gym-membership\", data.id); ",
							"}",
							"if(data.key){",
							"    pm.environment.set(\"product-key-gym-membership\", data.key);",
							"}",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "accessToken",
							"value": "{{ctp_access_token}}",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						},
						{
							"key": "tokenType",
							"value": "Bearer",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\"productType\": {\n\"typeId\": \"product-type\",\n\"id\": \"{{product-type-id-membership}}\"\n},\n    \"key\": \"gym-membership\",\n    \"name\": {\n    \"de\": \"Gym Membership\",\n    \"en\": \"Gym Membership\"\n    },\n    \"description\": {\n    \"de\": \"Gym Membership\",\n    \"en\": \"Gym Membership\"\n    },\n    \"slug\": {\n    \"de\": \"gym-membership\",\n    \"en\": \"gym-membership\"\n    },\n    \"masterVariant\": {\n    \"id\": 1,\n    \"sku\": \"gym-membership-monthly\",\n    \"key\": \"gym-membership-monthly\",\n    \"prices\": [\n        {\n        \"value\": {\n            \"type\": \"centPrecision\",\n            \"currencyCode\": \"EUR\",\n            \"centAmount\": 4000,\n            \"fractionDigits\": 2\n        }\n        }\n    ],\n    \"images\": [],\n    \"attributes\": [\n        {\n        \"name\": \"duration\",\n        \"value\": {\n            \"key\": \"monthly\",\n            \"label\": \"Monthly\"\n        }\n        }\n    ],\n    \"assets\": []\n    },\n    \"variants\": [],\n    \"publish\": true,\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    }\n}"
				},
				"url": {
					"raw": "{{host}}/{{project-key}}/products",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{project-key}}",
						"products"
					],
					"query": [
						{
							"key": "expand",
							"value": "",
							"disabled": true
						}
					]
				},
				"description": "Create ProductType"
			},
			"response": []
		},
		{
			"name": "02.2 Create Product - Spa Membership",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
							"var data = JSON.parse(responseBody);",
							"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
							"    pm.environment.set(\"product-id-spa-membership\", data.results[0].id); ",
							"    pm.environment.set(\"product-version-spa-membership\", data.results[0].version);",
							"}",
							"if(data.results && data.results[0] && data.results[0].key){",
							"    pm.environment.set(\"product-key-spa-membership\", data.results[0].key); ",
							"}",
							"if(data.version){",
							"    pm.environment.set(\"product-version-spa-membership\", data.version);",
							"}",
							"if(data.id){",
							"    pm.environment.set(\"product-id-spa-membership\", data.id); ",
							"}",
							"if(data.key){",
							"    pm.environment.set(\"product-key-spa-membership\", data.key);",
							"}",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "accessToken",
							"value": "{{ctp_access_token}}",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						},
						{
							"key": "tokenType",
							"value": "Bearer",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\"productType\": {\n\"typeId\": \"product-type\",\n\"id\": \"{{product-type-id-membership}}\"\n},\n    \"key\": \"spa-membership\",\n    \"name\": {\n    \"de\": \"Spa Membership\",\n    \"en\": \"Spa Membership\"\n    },\n    \"description\": {\n    \"de\": \"Spa Membership\",\n    \"en\": \"Spa Membership\"\n    },\n    \"slug\": {\n    \"de\": \"spa-membership\",\n    \"en\": \"spa-membership\"\n    },\n    \"masterVariant\": {\n    \"id\": 1,\n    \"sku\": \"spa-membership-monthly\",\n    \"key\": \"spa-membership-monthly\",\n    \"prices\": [\n        {\n        \"value\": {\n            \"type\": \"centPrecision\",\n            \"currencyCode\": \"EUR\",\n            \"centAmount\": 4000,\n            \"fractionDigits\": 2\n        }\n        }\n    ],\n    \"images\": [],\n    \"attributes\": [\n        {\n        \"name\": \"duration\",\n        \"value\": {\n            \"key\": \"monthly\",\n            \"label\": \"Monthly\"\n        }\n        }\n    ],\n    \"assets\": []\n    },\n    \"variants\": [],\n    \"publish\": true,\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    }\n}"
				},
				"url": {
					"raw": "{{host}}/{{project-key}}/products",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{project-key}}",
						"products"
					],
					"query": [
						{
							"key": "expand",
							"value": "",
							"disabled": true
						}
					]
				},
				"description": "Create ProductType"
			},
			"response": []
		},
		{
			"name": "03 Create ProductType - Fitness class",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
							"var data = JSON.parse(responseBody);",
							"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
							"    pm.environment.set(\"product-type-id-fitness-class\", data.results[0].id); ",
							"    pm.environment.set(\"product-type-version-fitness-class\", data.results[0].version);",
							"}",
							"if(data.results && data.results[0] && data.results[0].key){",
							"    pm.environment.set(\"product-type-key-fitness-class\", data.results[0].key); ",
							"}",
							"if(data.version){",
							"    pm.environment.set(\"product-type-version-fitness-class\", data.version);",
							"}",
							"if(data.id){",
							"    pm.environment.set(\"product-type-id-fitness-class\", data.id); ",
							"}",
							"if(data.key){",
							"    pm.environment.set(\"product-type-key-fitness-class\", data.key);",
							"}",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "accessToken",
							"value": "{{ctp_access_token}}",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						},
						{
							"key": "tokenType",
							"value": "Bearer",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n      \"key\": \"fitness-class\",\n      \"name\": \"Fitness Class\",\n      \"description\": \"Fitness Class\",\n      \"attributes\": []\n    }\n"
				},
				"url": {
					"raw": "{{host}}/{{project-key}}/product-types",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{project-key}}",
						"product-types"
					],
					"query": [
						{
							"key": "expand",
							"value": "",
							"disabled": true
						}
					]
				},
				"description": "Create ProductType"
			},
			"response": []
		},
		{
			"name": "04 Create ProductType - Facial Cream",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
							"var data = JSON.parse(responseBody);",
							"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
							"    pm.environment.set(\"product-type-id-facial-cream\", data.results[0].id); ",
							"    pm.environment.set(\"product-type-version-facial-cream\", data.results[0].version);",
							"}",
							"if(data.results && data.results[0] && data.results[0].key){",
							"    pm.environment.set(\"product-type-key-facial-cream\", data.results[0].key); ",
							"}",
							"if(data.version){",
							"    pm.environment.set(\"product-type-version-facial-cream\", data.version);",
							"}",
							"if(data.id){",
							"    pm.environment.set(\"product-type-id-facial-cream\", data.id); ",
							"}",
							"if(data.key){",
							"    pm.environment.set(\"product-type-key-facial-cream\", data.key);",
							"}",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "accessToken",
							"value": "{{ctp_access_token}}",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						},
						{
							"key": "tokenType",
							"value": "Bearer",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n      \"key\": \"facial-cream\",\n      \"name\": \"Facial cream\",\n      \"description\": \"Facial cream\",\n      \"attributes\": []\n    }\n"
				},
				"url": {
					"raw": "{{host}}/{{project-key}}/product-types",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{project-key}}",
						"product-types"
					],
					"query": [
						{
							"key": "expand",
							"value": "",
							"disabled": true
						}
					]
				},
				"description": "Create ProductType"
			},
			"response": []
		},
		{
			"name": "04.1 Create Product - Exfoliating Facial Cream",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
							"var data = JSON.parse(responseBody);",
							"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
							"    pm.environment.set(\"product-id-facial-cream\", data.results[0].id); ",
							"    pm.environment.set(\"product-version-facial-cream\", data.results[0].version);",
							"}",
							"if(data.results && data.results[0] && data.results[0].key){",
							"    pm.environment.set(\"product-key-facial-cream\", data.results[0].key); ",
							"}",
							"if(data.version){",
							"    pm.environment.set(\"product-version-facial-cream\", data.version);",
							"}",
							"if(data.id){",
							"    pm.environment.set(\"product-id-facial-cream\", data.id); ",
							"}",
							"if(data.key){",
							"    pm.environment.set(\"product-key-facial-cream\", data.key);",
							"}",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "accessToken",
							"value": "{{ctp_access_token}}",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						},
						{
							"key": "tokenType",
							"value": "Bearer",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\"productType\": {\n\"typeId\": \"product-type\",\n\"id\": \"{{product-type-id-facial-cream}}\"\n},\n    \"key\": \"exfoliating-facial-cream\",\n    \"name\": {\n    \"de\": \"Exfoliating Facial Cream\",\n    \"en\": \"Exfoliating Facial Cream\"\n    },\n    \"description\": {\n    \"de\": \"Exfoliating Facial Cream\",\n    \"en\": \"Exfoliating Facial Cream\"\n    },\n    \"slug\": {\n    \"de\": \"exfoliating-facial-cream\",\n    \"en\": \"exfoliating-facial-cream\"\n    },\n    \"masterVariant\": {\n    \"id\": 1,\n    \"sku\": \"exfoliating-facial-cream\",\n    \"key\": \"exfoliating-facial-cream\",\n    \"prices\": [\n        {\n        \"id\": \"965c78de-9a0c-4dfb-b8b2-c348fde8a5c3\",\n        \"value\": {\n            \"type\": \"centPrecision\",\n            \"currencyCode\": \"EUR\",\n            \"centAmount\": 9999,\n            \"fractionDigits\": 2\n        }\n        }\n    ],\n    \"images\": [],\n    \"attributes\": [],\n    \"assets\": []\n    },\n    \"variants\": [],\n    \"publish\": true,\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    }\n}"
				},
				"url": {
					"raw": "{{host}}/{{project-key}}/products",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{project-key}}",
						"products"
					],
					"query": [
						{
							"key": "expand",
							"value": "",
							"disabled": true
						}
					]
				},
				"description": "Create ProductType"
			},
			"response": []
		},
		{
			"name": "05 Create ProductType - Facial Treatment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
							"var data = JSON.parse(responseBody);",
							"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
							"    pm.environment.set(\"product-type-id-facial-treatment\", data.results[0].id); ",
							"    pm.environment.set(\"product-type-version-facial-treatment\", data.results[0].version);",
							"}",
							"if(data.results && data.results[0] && data.results[0].key){",
							"    pm.environment.set(\"product-type-key-facial-treatment\", data.results[0].key); ",
							"}",
							"if(data.version){",
							"    pm.environment.set(\"product-type-version-facial-treatment\", data.version);",
							"}",
							"if(data.id){",
							"    pm.environment.set(\"product-type-id-facial-treatment\", data.id); ",
							"}",
							"if(data.key){",
							"    pm.environment.set(\"product-type-key-facial-treatment\", data.key);",
							"}",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "accessToken",
							"value": "{{ctp_access_token}}",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						},
						{
							"key": "tokenType",
							"value": "Bearer",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n      \"key\": \"facial-treatment\",\n      \"name\": \"Facial Treatment\",\n      \"description\": \"Facial Treatment\",\n      \"attributes\": []\n    }\n"
				},
				"url": {
					"raw": "{{host}}/{{project-key}}/product-types",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{project-key}}",
						"product-types"
					],
					"query": [
						{
							"key": "expand",
							"value": "",
							"disabled": true
						}
					]
				},
				"description": "Create ProductType"
			},
			"response": []
		},
		{
			"name": "05.1 Create Product - Facial Massage",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
							"var data = JSON.parse(responseBody);",
							"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
							"    pm.environment.set(\"product-id-facial-massage\", data.results[0].id); ",
							"    pm.environment.set(\"product-version-facial-massage\", data.results[0].version);",
							"}",
							"if(data.results && data.results[0] && data.results[0].key){",
							"    pm.environment.set(\"product-key-facial-massage\", data.results[0].key); ",
							"}",
							"if(data.version){",
							"    pm.environment.set(\"product-version-facial-massage\", data.version);",
							"}",
							"if(data.id){",
							"    pm.environment.set(\"product-id-facial-massage\", data.id); ",
							"}",
							"if(data.key){",
							"    pm.environment.set(\"product-key-facial-massage\", data.key);",
							"}",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "accessToken",
							"value": "{{ctp_access_token}}",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						},
						{
							"key": "tokenType",
							"value": "Bearer",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\"productType\": {\n\"typeId\": \"product-type\",\n\"id\": \"{{product-type-id-facial-treatment}}\"\n},\n    \"key\": \"facial-massage\",\n    \"name\": {\n    \"de\": \"Facial Massage\",\n    \"en\": \"Facial Massage\"\n    },\n    \"description\": {\n    \"de\": \"Facial Massage\",\n    \"en\": \"Facial Massage\"\n    },\n    \"slug\": {\n    \"de\": \"facial-massage\",\n    \"en\": \"facial-massage\"\n    },\n    \"masterVariant\": {\n    \"id\": 1,\n    \"sku\": \"facial-massage\",\n    \"key\": \"facial-massage\",\n    \"prices\": [\n        {\n        \"id\": \"965c78de-9a0c-4dfb-b8b2-c348fde8a5c3\",\n        \"value\": {\n            \"type\": \"centPrecision\",\n            \"currencyCode\": \"EUR\",\n            \"centAmount\": 9717,\n            \"fractionDigits\": 2\n        }\n        }\n    ],\n    \"images\": [],\n    \"attributes\": [],\n    \"assets\": []\n    },\n    \"variants\": [],\n    \"publish\": true,\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    }\n}"
				},
				"url": {
					"raw": "{{host}}/{{project-key}}/products",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{project-key}}",
						"products"
					],
					"query": [
						{
							"key": "expand",
							"value": "",
							"disabled": true
						}
					]
				},
				"description": "Create ProductType"
			},
			"response": []
		},
		{
			"name": "05.2 Create Product - Facial Herbal Treatment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
							"var data = JSON.parse(responseBody);",
							"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
							"    pm.environment.set(\"product-id-facial-herbal-treatment\", data.results[0].id); ",
							"    pm.environment.set(\"product-version-facial-herbal-treatment\", data.results[0].version);",
							"}",
							"if(data.results && data.results[0] && data.results[0].key){",
							"    pm.environment.set(\"product-key-facial-herbal-treatment\", data.results[0].key); ",
							"}",
							"if(data.version){",
							"    pm.environment.set(\"product-version-facial-herbal-treatment\", data.version);",
							"}",
							"if(data.id){",
							"    pm.environment.set(\"product-id-facial-herbal-treatment\", data.id); ",
							"}",
							"if(data.key){",
							"    pm.environment.set(\"product-key-facial-herbal-treatment\", data.key);",
							"}",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "accessToken",
							"value": "{{ctp_access_token}}",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						},
						{
							"key": "tokenType",
							"value": "Bearer",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\"productType\": {\n\"typeId\": \"product-type\",\n\"id\": \"{{product-type-id-facial-treatment}}\"\n},\n    \"key\": \"facial-herbal-treatment\",\n    \"name\": {\n    \"de\": \"Facial Herbal Treatment\",\n    \"en\": \"Facial Herbal Treatment\"\n    },\n    \"description\": {\n    \"de\": \"Facial Herbal Treatment\",\n    \"en\": \"Facial Herbal Treatment\"\n    },\n    \"slug\": {\n    \"de\": \"facial-herbal-treatment\",\n    \"en\": \"facial-herbal-treatment\"\n    },\n    \"masterVariant\": {\n    \"id\": 1,\n    \"sku\": \"facial-herbal-treatment\",\n    \"key\": \"facial-herbal-treatment\",\n    \"prices\": [\n        {\n        \"id\": \"965c78de-9a0c-4dfb-b8b2-c348fde8a5c3\",\n        \"value\": {\n            \"type\": \"centPrecision\",\n            \"currencyCode\": \"EUR\",\n            \"centAmount\": 5775,\n            \"fractionDigits\": 2\n        }\n        }\n    ],\n    \"images\": [],\n    \"attributes\": [],\n    \"assets\": []\n    },\n    \"variants\": [],\n    \"publish\": true,\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    }\n}"
				},
				"url": {
					"raw": "{{host}}/{{project-key}}/products",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{project-key}}",
						"products"
					],
					"query": [
						{
							"key": "expand",
							"value": "",
							"disabled": true
						}
					]
				},
				"description": "Create ProductType"
			},
			"response": []
		},
		{
			"name": "05.3 Create Product - Facial Mud Pack",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
							"var data = JSON.parse(responseBody);",
							"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
							"    pm.environment.set(\"product-id-facial-mud-pack\", data.results[0].id); ",
							"    pm.environment.set(\"product-version-facial-mud-pack\", data.results[0].version);",
							"}",
							"if(data.results && data.results[0] && data.results[0].key){",
							"    pm.environment.set(\"product-key-facial-mud-pack\", data.results[0].key); ",
							"}",
							"if(data.version){",
							"    pm.environment.set(\"product-version-facial-mud-pack\", data.version);",
							"}",
							"if(data.id){",
							"    pm.environment.set(\"product-id-facial-mud-pack\", data.id); ",
							"}",
							"if(data.key){",
							"    pm.environment.set(\"product-key-facial-mud-pack\", data.key);",
							"}",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "accessToken",
							"value": "{{ctp_access_token}}",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						},
						{
							"key": "tokenType",
							"value": "Bearer",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\"productType\": {\n\"typeId\": \"product-type\",\n\"id\": \"{{product-type-id-facial-treatment}}\"\n},\n    \"key\": \"facial-mud-pack\",\n    \"name\": {\n    \"de\": \"Facial Mud Pack\",\n    \"en\": \"Facial Mud Pack\"\n    },\n    \"description\": {\n    \"de\": \"Facial Mud Pack\",\n    \"en\": \"Facial Mud Pack\"\n    },\n    \"slug\": {\n    \"de\": \"facial-mud-pack\",\n    \"en\": \"facial-mud-pack\"\n    },\n    \"masterVariant\": {\n    \"id\": 1,\n    \"sku\": \"facial-mud-pack\",\n    \"key\": \"facial-mud-pack\",\n    \"prices\": [\n        {\n        \"id\": \"965c78de-9a0c-4dfb-b8b2-c348fde8a5c3\",\n        \"value\": {\n            \"type\": \"centPrecision\",\n            \"currencyCode\": \"EUR\",\n            \"centAmount\": 7723,\n            \"fractionDigits\": 2\n        }\n        }\n    ],\n    \"images\": [],\n    \"attributes\": [],\n    \"assets\": []\n    },\n    \"variants\": [],\n    \"publish\": true,\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    }\n}"
				},
				"url": {
					"raw": "{{host}}/{{project-key}}/products",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{project-key}}",
						"products"
					],
					"query": [
						{
							"key": "expand",
							"value": "",
							"disabled": true
						}
					]
				},
				"description": "Create ProductType"
			},
			"response": []
		},
		{
			"name": "06a Create Customer Custom Type",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
							"var data = JSON.parse(responseBody);",
							"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
							"    pm.environment.set(\"type-id\", data.results[0].id); ",
							"    pm.environment.set(\"type-version\", data.results[0].version);",
							"}",
							"if(data.results && data.results[0] && data.results[0].key){",
							"    pm.environment.set(\"type-key\", data.results[0].key); ",
							"}",
							"if(data.version){",
							"    pm.environment.set(\"type-version\", data.version);",
							"}",
							"if(data.id){",
							"    pm.environment.set(\"type-id\", data.id); ",
							"}",
							"if(data.key){",
							"    pm.environment.set(\"type-key\", data.key);",
							"}",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "accessToken",
							"value": "{{ctp_access_token}}",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						},
						{
							"key": "tokenType",
							"value": "Bearer",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{  \n    \"key\": \"customer-stats\",\n    \"name\": {\n        \"de\": \"Customer Health Stats\",\n        \"en\": \"Customer Health Stats\"\n    },\n    \"resourceTypeIds\": [\n        \"customer\"\n    ],\n    \"fieldDefinitions\": [\n    {\n        \"name\": \"height_in_inches\",\n        \"label\": {\n            \"de\": \"Height in inches\",\n            \"en\": \"Height in inches\"\n        },\n        \"required\": false,\n        \"type\": {\n        \"name\": \"Number\"\n        }\n    },\n    {\n        \"name\": \"weight_in_pounds\",\n        \"label\": {\n        \"de\": \"Weight in pounds\",\n        \"en\": \"Weight in pounds\"\n        },\n        \"required\": false,\n        \"type\": {\n        \"name\": \"Number\"\n        }\n    }\n    ]\n}"
				},
				"url": {
					"raw": "{{host}}/{{project-key}}/types",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{project-key}}",
						"types"
					],
					"query": [
						{
							"key": "expand",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "06b Create Purchased State",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
							"var data = JSON.parse(responseBody);",
							"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
							"    pm.environment.set(\"purchased-state-id\", data.results[0].id); ",
							"    pm.environment.set(\"purchased-state-version\", data.results[0].version);",
							"}",
							"if(data.results && data.results[0] && data.results[0].key){",
							"    pm.environment.set(\"purchased-state-key\", data.results[0].key); ",
							"}",
							"if(data.version){",
							"    pm.environment.set(\"purchased-state-version\", data.version);",
							"}",
							"if(data.id){",
							"    pm.environment.set(\"purchased-state-id\", data.id); ",
							"}",
							"if(data.key){",
							"    pm.environment.set(\"purchased-state-key\", data.key);",
							"}",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "accessToken",
							"value": "{{ctp_access_token}}",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						},
						{
							"key": "tokenType",
							"value": "Bearer",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\" : {\n    \"de\": \"Purchased State\",\n    \"en\": \"Purchased State\"\n   },\n  \"key\" : \"purchased-state\",\n  \"type\" : \"OrderState\",\n  \"roles\" : [ ],\n  \"initial\" : true\n}"
				},
				"url": {
					"raw": "{{host}}/{{project-key}}/states",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{project-key}}",
						"states"
					],
					"query": [
						{
							"key": "expand",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "06.1 Create Expired State",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
							"var data = JSON.parse(responseBody);",
							"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
							"    pm.environment.set(\"expired-state-id\", data.results[0].id); ",
							"    pm.environment.set(\"expired-state-version\", data.results[0].version);",
							"}",
							"if(data.results && data.results[0] && data.results[0].key){",
							"    pm.environment.set(\"expired-state-key\", data.results[0].key); ",
							"}",
							"if(data.version){",
							"    pm.environment.set(\"expired-state-version\", data.version);",
							"}",
							"if(data.id){",
							"    pm.environment.set(\"expired-state-id\", data.id); ",
							"}",
							"if(data.key){",
							"    pm.environment.set(\"purchased-state-key\", data.key);",
							"}",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "accessToken",
							"value": "{{ctp_access_token}}",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						},
						{
							"key": "tokenType",
							"value": "Bearer",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\" : {\n    \"de\": \"Expired State\",\n    \"en\": \"Expired State\"\n   },\n  \"key\" : \"expired-state\",\n  \"type\" : \"OrderState\",\n  \"roles\" : [ ],\n  \"transitions\" : [],\n  \"initial\" : false\n}"
				},
				"url": {
					"raw": "{{host}}/{{project-key}}/states",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{project-key}}",
						"states"
					],
					"query": [
						{
							"key": "expand",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "06.2 Create Redeemed State",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
							"var data = JSON.parse(responseBody);",
							"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
							"    pm.environment.set(\"redeemed-state-id\", data.results[0].id); ",
							"    pm.environment.set(\"redeemed-state-version\", data.results[0].version);",
							"}",
							"if(data.results && data.results[0] && data.results[0].key){",
							"    pm.environment.set(\"redeemed-state-key\", data.results[0].key); ",
							"}",
							"if(data.version){",
							"    pm.environment.set(\"redeemed-state-version\", data.version);",
							"}",
							"if(data.id){",
							"    pm.environment.set(\"redeemed-state-id\", data.id); ",
							"}",
							"if(data.key){",
							"    pm.environment.set(\"redeemed-state-key\", data.key);",
							"}",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "accessToken",
							"value": "{{ctp_access_token}}",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						},
						{
							"key": "tokenType",
							"value": "Bearer",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\" : {\n    \"de\": \"Redeemed State\",\n    \"en\": \"Redeemed State\"\n   },\n  \"key\" : \"redeemed-state\",\n  \"type\" : \"OrderState\",\n  \"roles\" : [ ],\n  \"transitions\" : [],\n  \"initial\" : false\n}"
				},
				"url": {
					"raw": "{{host}}/{{project-key}}/states",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{project-key}}",
						"states"
					],
					"query": [
						{
							"key": "expand",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "06.3 Set Purchased State Transitions",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
							"var data = JSON.parse(responseBody);",
							"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
							"    pm.environment.set(\"purchased-state-id\", data.results[0].id); ",
							"    pm.environment.set(\"purchased-state-version\", data.results[0].version);",
							"}",
							"if(data.results && data.results[0] && data.results[0].key){",
							"    pm.environment.set(\"purchased-state-key\", data.results[0].key); ",
							"}",
							"if(data.version){",
							"    pm.environment.set(\"purchased-state-version\", data.version);",
							"}",
							"if(data.id){",
							"    pm.environment.set(\"purchased-state-id\", data.id); ",
							"}",
							"if(data.key){",
							"    pm.environment.set(\"purchased-state-key\", data.key);",
							"}",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "accessToken",
							"value": "{{ctp_access_token}}",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						},
						{
							"key": "tokenType",
							"value": "Bearer",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"version\": {{purchased-state-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setTransitions\",\n            \"transitions\" : [ {\n              \"typeId\" : \"state\",\n              \"id\" : \"{{expired-state-id}}\"\n            }, {\n              \"typeId\" : \"state\",\n              \"id\" : \"{{redeemed-state-id}}\"\n            } ]\n          }\n    ]\n}"
				},
				"url": {
					"raw": "{{host}}/{{project-key}}/states/{{purchased-state-id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{project-key}}",
						"states",
						"{{purchased-state-id}}"
					],
					"query": [
						{
							"key": "expand",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		}
	]
}