{
	"info": {
		"_postman_id": "c4f27d2a-1256-4431-b7a0-27169dba5f71",
		"name": "FA_Training",
		"description": "## How-to Use\n\nTo be used for quick data creation in the trainings.\nBefore sending any request, please make sure that you have a valid token.\n\n- Import the environment file from https://github.com/commercetools/commercetools-postman-collection/blob/master/api/template.json into postman. \n- Create an api client (use admin template) for your project in the Merchant Center.\n- Set the `client_id` and `client_secret` in the `Commercetools template` environment from top-right (eye icon).\n- Send the request `Obtain access token`.\n- Send the request Get TaxCategory",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "11897687"
	},
	"item": [
		{
			"name": "Case 1 - Product Modeling Basic",
			"item": [
				{
					"name": "01 Create ProductType - Online Offerings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"product-type-id-online-classes\", data.results[0].id); ",
									"    pm.environment.set(\"product-type-version-online-classes\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"product-type-key-online-classes\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"product-type-version-online-classes\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"product-type-id-online-classes\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"product-type-key-online-classes\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\" : \"Online Offerings\",\n  \"description\" : \"Online Offerings\",\n  \"key\" : \"online-offerings-product-type\",\n  \"attributes\" : [ {\n    \"type\" : {\n      \"name\" : \"text\"\n    },\n    \"isSearchable\" : true,\n    \"inputHint\" : \"SingleLine\",\n    \"name\" : \"name\",\n    \"label\" : {\n      \"en\" : \"Name of offering\",\n      \"de\" : \"Name of offering\"\n    },\n    \"isRequired\" : true,\n    \"attributeConstraint\" : \"Unique\"\n  } ]\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/product-types",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"product-types"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Create ProductType"
					},
					"response": []
				},
				{
					"name": "02 Create Product - Online Classes (5 variants)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"product-id\", data.results[0].id); ",
									"    pm.environment.set(\"product-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"product-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"product-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"product-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"product-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"productType\":{\n        \"typeId\":\"product-type\",\n        \"id\":\"{{product-type-id-online-classes}}\"\n    },\n    \"name\":{\n        \"de\":\"Online classes\",\n        \"en\":\"Online classes\"\n    },\n    \"slug\":{\n        \"de\":\"online-classes\",\n        \"en\":\"online-classes\"\n    },\n    \"metaTitle\":{\n        \"de\":\"online-classes\",\n        \"en\":\"online-classes\"\n    },\n    \"masterVariant\":{\n        \"id\":1,\n        \"sku\":\"french-cooking-class\",\n        \"key\":\"french-cooking-class\",\n        \"prices\":[\n            {\n            \"value\":{\n                \"type\":\"centPrecision\",\n                \"currencyCode\":\"EUR\",\n                \"centAmount\":3999,\n                \"fractionDigits\":2\n            },\n            \"country\":\"DE\"\n            }\n        ],\n        \"images\":[],\n        \"attributes\":[\n            {\n            \"name\":\"name\",\n            \"value\":\"Online French cooking class\"\n            }\n        ],\n        \"assets\":[]\n    },\n    \"variants\":[\n        {\n            \"id\":2,\n            \"sku\":\"italian-cooking-class\",\n            \"key\":\"italian-cooking-class\",\n            \"prices\":[\n            {\n                \"value\":{\n                    \"type\":\"centPrecision\",\n                    \"currencyCode\":\"EUR\",\n                    \"centAmount\":3999,\n                    \"fractionDigits\":2\n                },\n                \"country\":\"DE\"\n            }\n            ],\n            \"images\":[],\n            \"attributes\":[\n            {\n                \"name\":\"name\",\n                \"value\":\"Online Italian cooking class\"\n            }\n            ],\n            \"assets\":[]\n        },\n        {\n            \"id\":3,\n            \"sku\":\"middle-eastern-cooking-class\",\n            \"key\":\"middle-eastern-cooking-class\",\n            \"prices\":[\n            {\n                \"value\":{\n                    \"type\":\"centPrecision\",\n                    \"currencyCode\":\"EUR\",\n                    \"centAmount\":3999,\n                    \"fractionDigits\":2\n                },\n                \"country\":\"DE\"\n            }\n            ],\n            \"images\":[],\n            \"attributes\":[\n            {\n                \"name\":\"name\",\n                \"value\":\"Middle Eastern cooking class\"\n            }\n            ],\n            \"assets\":[]\n        },\n        {\n            \"id\":4,\n            \"sku\":\"Soup cooking class\",\n            \"key\":\"Soup cooking class\",\n            \"prices\":[\n            {\n                \"value\":{\n                    \"type\":\"centPrecision\",\n                    \"currencyCode\":\"EUR\",\n                    \"centAmount\":2599,\n                    \"fractionDigits\":2\n                },\n                \"country\":\"DE\"\n            }\n            ],\n            \"images\":[],\n            \"attributes\":[\n            {\n                \"name\":\"name\",\n                \"value\":\"Online Soup cooking class\"\n            }\n            ],\n            \"assets\":[]\n        },\n        {\n            \"id\":5,\n            \"sku\":\"grilling-class\",\n            \"key\":\"grilling-class\",\n            \"prices\":[\n            {\n                \"value\":{\n                    \"type\":\"centPrecision\",\n                    \"currencyCode\":\"EUR\",\n                    \"centAmount\":2299,\n                    \"fractionDigits\":2\n                },\n                \"country\":\"DE\"\n            }\n            ],\n            \"images\":[],\n            \"attributes\":[\n            {\n                \"name\":\"name\",\n                \"value\":\"Online Grilling class\"\n            }\n            ],\n            \"assets\":[]\n        }\n    ],\n    \"searchKeywords\":{\n        \n    },\n    \"publish\": true,\n    \"key\":\"online-classes\",\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    }\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/products",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"products"
							],
							"query": [
								{
									"key": "priceCurrency",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCountry",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCustomerGroup",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceChannel",
									"value": "",
									"disabled": true
								},
								{
									"key": "localeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "storeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "To create a new product, send a representation that is going to become the initial staged representation\nof the new product in the master catalog. If price selection query parameters are provided,\nthe selected prices will be added to the response.\n"
					},
					"response": []
				},
				{
					"name": "021 Create Product - French cooking class",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"product-id\", data.results[0].id); ",
									"    pm.environment.set(\"product-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"product-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"product-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"product-id\", data.id);",
									"    pm.environment.set(\"product-id-french-class\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"product-key\", data.key);",
									"    pm.environment.set(\"product-key-french-class\", data.key); ",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\n{\n    \"productType\":{\n        \"typeId\":\"product-type\",\n        \"id\":\"{{product-type-id-online-classes}}\"\n    },\n    \"name\":{\n        \"de\":\"French Cooking class\",\n        \"en\":\"French Cooking class\"\n    },\n    \"slug\":{\n        \"de\":\"french-cooking-online-class\",\n        \"en\":\"french-cooking-online-class\"\n    },\n    \"metaTitle\":{\n        \"de\":\"french-cooking-online-class\",\n        \"en\":\"french-cooking-online-class\"\n    },\n    \"masterVariant\":{\n        \"id\":1,\n        \"sku\":\"french-cooking-online-class\",\n        \"key\":\"french-cooking-online-class\",\n        \"prices\":[\n            {\n            \"value\":{\n                \"type\":\"centPrecision\",\n                \"currencyCode\":\"EUR\",\n                \"centAmount\":3999,\n                \"fractionDigits\":2\n            },\n            \"country\":\"DE\"\n            }\n        ],\n        \"images\":[],\n        \"attributes\":[\n            {\n            \"name\":\"name\",\n            \"value\":\"French Cooking class\"\n            }\n        ],\n        \"assets\":[]\n    },\n    \n    \"searchKeywords\":{\n        \n    },\n    \"publish\": true,\n    \"key\":\"french-cooking-online-class\",\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    }\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/products",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"products"
							],
							"query": [
								{
									"key": "priceCurrency",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCountry",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCustomerGroup",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceChannel",
									"value": "",
									"disabled": true
								},
								{
									"key": "localeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "storeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "022 Create Product - Italian cooking class",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"product-id\", data.results[0].id); ",
									"    pm.environment.set(\"product-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"product-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"product-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"product-id\", data.id); ",
									"    pm.environment.set(\"product-id-italian-class\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"product-key\", data.key);",
									"    pm.environment.set(\"product-key-italian-class\", data.key); ",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\n{\n    \"productType\":{\n        \"typeId\":\"product-type\",\n        \"id\":\"{{product-type-id-online-classes}}\"\n    },\n    \"name\":{\n        \"de\":\"Italian Cooking class\",\n        \"en\":\"Italian Cooking class\"\n    },\n    \"slug\":{\n        \"de\":\"italian-cooking-online-class\",\n        \"en\":\"italian-cooking-online-class\"\n    },\n    \"metaTitle\":{\n        \"de\":\"italian-cooking-online-class\",\n        \"en\":\"italian-cooking-online-class\"\n    },\n    \"masterVariant\":{\n        \"id\":1,\n        \"sku\":\"italian-cooking-online-class\",\n        \"key\":\"italian-cooking-online-class\",\n        \"prices\":[\n            {\n            \"value\":{\n                \"type\":\"centPrecision\",\n                \"currencyCode\":\"EUR\",\n                \"centAmount\":3999,\n                \"fractionDigits\":2\n            },\n            \"country\":\"DE\"\n            }\n        ],\n        \"images\":[],\n        \"attributes\":[\n            {\n            \"name\":\"name\",\n            \"value\":\"Italian Cooking class\"\n            }\n        ],\n        \"assets\":[]\n    },\n    \n    \"searchKeywords\":{\n        \n    },\n    \"publish\": true,\n    \"key\":\"italian-cooking-online-class\",\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    }\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/products",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"products"
							],
							"query": [
								{
									"key": "priceCurrency",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCountry",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCustomerGroup",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceChannel",
									"value": "",
									"disabled": true
								},
								{
									"key": "localeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "storeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "023 Create Product - Middle Eastern cooking class",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"product-id\", data.results[0].id); ",
									"    pm.environment.set(\"product-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"product-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"product-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"product-id\", data.id); ",
									"    pm.environment.set(\"product-id-middle-eastern-class\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"product-key\", data.key);",
									"    pm.environment.set(\"product-key-middle-eastern-class\", data.key); ",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\n{\n    \"productType\":{\n        \"typeId\":\"product-type\",\n        \"id\":\"{{product-type-id-online-classes}}\"\n    },\n    \"name\":{\n        \"de\":\"Middle Eastern Cooking class\",\n        \"en\":\"Middle Eastern Cooking class\"\n    },\n    \"slug\":{\n        \"de\":\"middle-eastern-cooking-online-class\",\n        \"en\":\"middle-eastern-cooking-online-class\"\n    },\n    \"metaTitle\":{\n        \"de\":\"middle-eastern-cooking-online-class\",\n        \"en\":\"middle-eastern-cooking-online-class\"\n    },\n    \"masterVariant\":{\n        \"id\":1,\n        \"sku\":\"middle-eastern-cooking-online-class\",\n        \"key\":\"middle-eastern-cooking-online-class\",\n        \"prices\":[\n            {\n            \"value\":{\n                \"type\":\"centPrecision\",\n                \"currencyCode\":\"EUR\",\n                \"centAmount\":3999,\n                \"fractionDigits\":2\n            },\n            \"country\":\"DE\"\n            }\n        ],\n        \"images\":[],\n        \"attributes\":[\n            {\n            \"name\":\"name\",\n            \"value\":\"Middle Eastern Cooking class\"\n            }\n        ],\n        \"assets\":[]\n    },\n    \n    \"searchKeywords\":{\n        \n    },\n    \"publish\": true,\n    \"key\":\"middle-eastern-cooking-online-class\",\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    }\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/products",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"products"
							],
							"query": [
								{
									"key": "priceCurrency",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCountry",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCustomerGroup",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceChannel",
									"value": "",
									"disabled": true
								},
								{
									"key": "localeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "storeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "024 Create Product - Soup cooking class",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"product-id\", data.results[0].id); ",
									"    pm.environment.set(\"product-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"product-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"product-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"product-id\", data.id); ",
									"    pm.environment.set(\"product-id-soup-class\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"product-key\", data.key);",
									"    pm.environment.set(\"product-id-soup-class\", data.key); ",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\n{\n    \"productType\":{\n        \"typeId\":\"product-type\",\n        \"id\":\"{{product-type-id-online-classes}}\"\n    },\n    \"name\":{\n        \"de\":\"Soup Cooking class\",\n        \"en\":\"Soup Cooking class\"\n    },\n    \"slug\":{\n        \"de\":\"soup-cooking-online-class\",\n        \"en\":\"soup-cooking-online-class\"\n    },\n    \"metaTitle\":{\n        \"de\":\"soup-cooking-online-class\",\n        \"en\":\"soup-cooking-online-class\"\n    },\n    \"masterVariant\":{\n        \"id\":1,\n        \"sku\":\"soup-cooking-online-class\",\n        \"key\":\"soup-cooking-online-class\",\n        \"prices\":[\n            {\n            \"value\":{\n                \"type\":\"centPrecision\",\n                \"currencyCode\":\"EUR\",\n                \"centAmount\":2599,\n                \"fractionDigits\":2\n            },\n            \"country\":\"DE\"\n            }\n        ],\n        \"images\":[],\n        \"attributes\":[\n            {\n            \"name\":\"name\",\n            \"value\":\"Soup Cooking class\"\n            }\n        ],\n        \"assets\":[]\n    },\n    \n    \"searchKeywords\":{\n        \n    },\n    \"publish\": true,\n    \"key\":\"soup-cooking-online-class\",\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    }\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/products",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"products"
							],
							"query": [
								{
									"key": "priceCurrency",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCountry",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCustomerGroup",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceChannel",
									"value": "",
									"disabled": true
								},
								{
									"key": "localeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "storeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "025 Create Product - Grilling class",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"product-id\", data.results[0].id); ",
									"    pm.environment.set(\"product-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"product-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"product-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"product-id\", data.id); ",
									"    pm.environment.set(\"product-id-grilling-class\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"product-key\", data.key);",
									"    pm.environment.set(\"product-id-grilling-class\", data.key); ",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\n{\n    \"productType\":{\n        \"typeId\":\"product-type\",\n        \"id\":\"{{product-type-id-online-classes}}\"\n    },\n    \"name\":{\n        \"de\":\"Grilling class\",\n        \"en\":\"Grilling class\"\n    },\n    \"slug\":{\n        \"de\":\"grilling-online-class\",\n        \"en\":\"grilling-online-class\"\n    },\n    \"metaTitle\":{\n        \"de\":\"grilling-online-class\",\n        \"en\":\"grilling-online-class\"\n    },\n    \"masterVariant\":{\n        \"id\":1,\n        \"sku\":\"grilling-online-class\",\n        \"key\":\"grilling-online-class\",\n        \"prices\":[\n            {\n            \"value\":{\n                \"type\":\"centPrecision\",\n                \"currencyCode\":\"EUR\",\n                \"centAmount\":2299,\n                \"fractionDigits\":2\n            },\n            \"country\":\"DE\"\n            }\n        ],\n        \"images\":[],\n        \"attributes\":[\n            {\n            \"name\":\"name\",\n            \"value\":\"Grilling class\"\n            }\n        ],\n        \"assets\":[]\n    },\n    \n    \"searchKeywords\":{\n        \n    },\n    \"publish\": true,\n    \"key\":\"grilling-online-class\",\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    }\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/products",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"products"
							],
							"query": [
								{
									"key": "priceCurrency",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCountry",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCustomerGroup",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceChannel",
									"value": "",
									"disabled": true
								},
								{
									"key": "localeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "storeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Case 2 - Product Modeling Intermediate",
			"item": [
				{
					"name": "01 Create ProductType - Equipment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"product-type-id-equipment\", data.results[0].id); ",
									"    pm.environment.set(\"product-type-version-equipment\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"product-type-key-equipment\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"product-type-version-equipment\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"product-type-id-equipment\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"product-type-key-equipment\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Equipment\",\n    \"description\": \"Equipment\",\n    \"key\": \"equipment-product-type\",\n    \"attributes\": [\n        {\n            \"type\": {\n                \"name\": \"text\"\n            },\n            \"isSearchable\": true,\n            \"inputHint\": \"SingleLine\",\n            \"name\": \"size\",\n            \"label\": {\n                \"en\": \"Size\",\n                \"de\": \"Size\"\n            },\n            \"isRequired\": false,\n            \"attributeConstraint\": \"Unique\"\n        },\n        {\n            \"type\": {\n                \"name\": \"text\"\n            },\n            \"isSearchable\": true,\n            \"inputHint\": \"SingleLine\",\n            \"name\": \"style\",\n            \"label\": {\n                \"en\": \"Style\",\n                \"de\": \"Style\"\n            },\n            \"isRequired\": false,\n            \"attributeConstraint\": \"Unique\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/product-types",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"product-types"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Create ProductType"
					},
					"response": []
				},
				{
					"name": "02 Create ProductType - Dinnerware",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"product-type-id-dinnerware\", data.results[0].id); ",
									"    pm.environment.set(\"product-type-version-dinnerware\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"product-type-key-dinnerware\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"product-type-version-dinnerware\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"product-type-id-dinnerware\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"product-type-key-dinnerware\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\" : \"Dinnerware\",\n  \"description\" : \"Dinnerware\",\n  \"key\" : \"dinnerware-product-type\",\n  \"attributes\" : [ {\n    \"type\" : {\n      \"name\" : \"text\"\n    },\n    \"isSearchable\" : true,\n    \"inputHint\" : \"SingleLine\",\n    \"name\" : \"material\",\n    \"label\" : {\n      \"en\" : \"Material\",\n      \"de\" : \"Material\"\n    },\n    \"isRequired\" : true,\n    \"attributeConstraint\" : \"Unique\"\n  } ]\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/product-types",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"product-types"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Create ProductType"
					},
					"response": []
				},
				{
					"name": "021 Create Product - Crème brûlée torch",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"product-id-torch\", data.results[0].id); ",
									"    pm.environment.set(\"product-version-torch\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"product-key-torch\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"product-version-torch\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"product-id-torch\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"product-key-torch\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\n{\n    \"productType\":{\n        \"typeId\":\"product-type\",\n        \"id\":\"{{product-type-id-equipment}}\"\n    },\n    \"name\":{\n        \"de\":\"Crème brûlée torch\",\n        \"en\":\"Crème brûlée torch\"\n    },\n    \"slug\":{\n        \"de\":\"creme-brulee-torch\",\n        \"en\":\"creme-brulee-torch\"\n    },\n    \"metaTitle\":{\n        \"de\":\"Crème brûlée torch\",\n        \"en\":\"Crème brûlée torch\"\n    },\n    \"masterVariant\":{\n        \"id\":1,\n        \"sku\":\"creme-brulee-torch\",\n        \"key\":\"creme-brulee-torch\",\n        \"prices\":[\n            {\n            \"value\":{\n                \"type\":\"centPrecision\",\n                \"currencyCode\":\"EUR\",\n                \"centAmount\":12900,\n                \"fractionDigits\":2\n            },\n            \"country\":\"DE\"\n            }\n        ],\n        \"images\":[],\n       \"assets\":[]\n    },\n    \"searchKeywords\":{\n        \n    },\n    \"publish\": true,\n    \"key\":\"creme-brulee-torch\",\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    }\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/products",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"products"
							],
							"query": [
								{
									"key": "priceCurrency",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCountry",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCustomerGroup",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceChannel",
									"value": "",
									"disabled": true
								},
								{
									"key": "localeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "storeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "To create a new product, send a representation that is going to become the initial staged representation\nof the new product in the master catalog. If price selection query parameters are provided,\nthe selected prices will be added to the response.\n"
					},
					"response": []
				},
				{
					"name": "022 Create Product - Ceramic ramekins",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"product-id-ceramic-ramekins\", data.results[0].id); ",
									"    pm.environment.set(\"product-version-ceramic-ramekins\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"product-key-ceramic-ramekins\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"product-version-ceramic-ramekins\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"product-id-ceramic-ramekins\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"product-key-ceramic-ramekins\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"productType\": {\n        \"typeId\": \"product-type\",\n        \"id\": \"{{product-type-id-dinnerware}}\"\n    },\n    \"name\": {\n        \"de\": \"Ceramic ramekins\",\n        \"en\": \"Ceramic ramekins\"\n    },\n    \"slug\": {\n        \"de\": \"ceramic-ramekins\",\n        \"en\": \"ceramic-ramekins\"\n    },\n    \"metaTitle\": {\n        \"de\": \"Ceramic ramekins\",\n        \"en\": \"Ceramic ramekins\"\n    },\n    \"masterVariant\": {\n        \"id\": 1,\n        \"sku\": \"ramekin-01\",\n        \"key\": \"ramekin-01\",\n        \"prices\": [\n            {\n                \"value\": {\n                    \"type\": \"centPrecision\",\n                    \"currencyCode\": \"EUR\",\n                    \"centAmount\": 1999,\n                    \"fractionDigits\": 2\n                },\n                \"country\": \"DE\"\n            }\n        ],\n        \"images\": [],\n        \"attributes\": [\n            {\n                \"name\": \"material\",\n                \"value\": \"ceramic\"\n            }\n        ],\n        \"assets\": []\n    },\n    \"searchKeywords\": {},\n    \"publish\": true,\n    \"key\": \"ceramic-ramekins\",\n    \"taxCategory\": {\n        \"typeId\": \"tax-category\",\n        \"id\": \"{{tax-category-id}}\"\n    }\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/products",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"products"
							],
							"query": [
								{
									"key": "priceCurrency",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCountry",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCustomerGroup",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceChannel",
									"value": "",
									"disabled": true
								},
								{
									"key": "localeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "storeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "To create a new product, send a representation that is going to become the initial staged representation\nof the new product in the master catalog. If price selection query parameters are provided,\nthe selected prices will be added to the response.\n"
					},
					"response": []
				},
				{
					"name": "022 Create Product - Glass ramekins",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"product-id-glass-ramekins\", data.results[0].id); ",
									"    pm.environment.set(\"product-version-glass-ramekins\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"product-key-glass-ramekins\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"product-version-glass-ramekins\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"product-id-glass-ramekins\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"product-key-glass-ramekins\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"productType\": {\n        \"typeId\": \"product-type\",\n        \"id\": \"{{product-type-id-dinnerware}}\"\n    },\n    \"name\": {\n        \"de\": \"Glass ramekins\",\n        \"en\": \"Glass ramekins\"\n    },\n    \"slug\": {\n        \"de\": \"glass-ramekins\",\n        \"en\": \"glass-ramekins\"\n    },\n    \"metaTitle\": {\n        \"de\": \"Glass ramekins\",\n        \"en\": \"Glass ramekins\"\n    },\n    \"masterVariant\": {\n        \"id\": 1,\n        \"sku\": \"ramekin-02\",\n        \"key\": \"ramekin-02\",\n        \"prices\": [\n            {\n                \"value\": {\n                    \"type\": \"centPrecision\",\n                    \"currencyCode\": \"EUR\",\n                    \"centAmount\": 2999,\n                    \"fractionDigits\": 2\n                },\n                \"country\": \"DE\"\n            }\n        ],\n        \"images\": [],\n        \"attributes\": [\n            {\n                \"name\": \"material\",\n                \"value\": \"glass\"\n            }\n        ],\n        \"assets\": []\n    },\n    \"searchKeywords\": {},\n    \"publish\": true,\n    \"key\": \"glass-ramekins\",\n    \"taxCategory\": {\n        \"typeId\": \"tax-category\",\n        \"id\": \"{{tax-category-id}}\"\n    }\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/products",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"products"
							],
							"query": [
								{
									"key": "priceCurrency",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCountry",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCustomerGroup",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceChannel",
									"value": "",
									"disabled": true
								},
								{
									"key": "localeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "storeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "To create a new product, send a representation that is going to become the initial staged representation\nof the new product in the master catalog. If price selection query parameters are provided,\nthe selected prices will be added to the response.\n"
					},
					"response": []
				},
				{
					"name": "022 Create Product - Steel ramekins",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"product-id-steel-ramekins\", data.results[0].id); ",
									"    pm.environment.set(\"product-version-steel-ramekins\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"product-key-steel-ramekins\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"product-version-steel-ramekins\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"product-id-steel-ramekins\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"product-key-steel-ramekins\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"productType\": {\n        \"typeId\": \"product-type\",\n        \"id\": \"{{product-type-id-dinnerware}}\"\n    },\n    \"name\": {\n        \"de\": \"Steel ramekins\",\n        \"en\": \"Steel ramekins\"\n    },\n    \"slug\": {\n        \"de\": \"steel-ramekins\",\n        \"en\": \"steel-ramekins\"\n    },\n    \"metaTitle\": {\n        \"de\": \"Steel ramekins\",\n        \"en\": \"Steel ramekins\"\n    },\n    \"masterVariant\": {\n        \"id\": 1,\n        \"sku\": \"ramekin-03\",\n        \"key\": \"ramekin-03\",\n        \"prices\": [\n            {\n                \"value\": {\n                    \"type\": \"centPrecision\",\n                    \"currencyCode\": \"EUR\",\n                    \"centAmount\": 1999,\n                    \"fractionDigits\": 2\n                },\n                \"country\": \"DE\"\n            }\n        ],\n        \"images\": [],\n        \"attributes\": [\n            {\n                \"name\": \"material\",\n                \"value\": \"steel\"\n            }\n        ],\n        \"assets\": []\n    },\n    \"searchKeywords\": {},\n    \"publish\": true,\n    \"key\": \"steel-ramekins\",\n    \"taxCategory\": {\n        \"typeId\": \"tax-category\",\n        \"id\": \"{{tax-category-id}}\"\n    }\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/products",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"products"
							],
							"query": [
								{
									"key": "priceCurrency",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCountry",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCustomerGroup",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceChannel",
									"value": "",
									"disabled": true
								},
								{
									"key": "localeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "storeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "To create a new product, send a representation that is going to become the initial staged representation\nof the new product in the master catalog. If price selection query parameters are provided,\nthe selected prices will be added to the response.\n"
					},
					"response": []
				},
				{
					"name": "023 Create Product - Classic pasta pot",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"product-id-classic-pasta-pot\", data.results[0].id); ",
									"    pm.environment.set(\"product-version-classic-pasta-pot\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"product-key-classic-pasta-pot\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"product-version-classic-pasta-pot\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"product-id-classic-pasta-pot\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"product-key-classic-pasta-pot\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"productType\": {\n        \"typeId\": \"product-type\",\n        \"id\": \"{{product-type-id-equipment}}\"\n    },\n    \"name\": {\n        \"de\": \"Classic pasta pot\",\n        \"en\": \"Classic pasta pot\"\n    },\n    \"slug\": {\n        \"de\": \"classic-pasta-pot\",\n        \"en\": \"classic-pasta-pot\"\n    },\n    \"metaTitle\": {\n        \"de\": \"Classic pasta pot\",\n        \"en\": \"Classic pasta pot\"\n    },\n    \"masterVariant\": {\n        \"id\": 1,\n        \"sku\": \"pasta-pot-01\",\n        \"key\": \"pasta-pot-01\",\n        \"prices\": [\n            {\n                \"value\": {\n                    \"type\": \"centPrecision\",\n                    \"currencyCode\": \"EUR\",\n                    \"centAmount\": 1999,\n                    \"fractionDigits\": 2\n                },\n                \"country\": \"DE\"\n            }\n        ],\n        \"images\": [],\n        \"attributes\": [\n            {\n                \"name\": \"size\",\n                \"value\": \"2 qt.\"\n            },\n            {\n                \"name\": \"style\",\n                \"value\": \"classic\"\n            }\n        ],\n        \"assets\": []\n    },\n    \"searchKeywords\": {},\n    \"publish\": true,\n    \"key\": \"classic-pasta-pot\",\n    \"taxCategory\": {\n        \"typeId\": \"tax-category\",\n        \"id\": \"{{tax-category-id}}\"\n    }\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/products",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"products"
							],
							"query": [
								{
									"key": "priceCurrency",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCountry",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCustomerGroup",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceChannel",
									"value": "",
									"disabled": true
								},
								{
									"key": "localeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "storeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "023 Create Product - Rustic pasta pot",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"product-id-rustic-pasta-pot\", data.results[0].id); ",
									"    pm.environment.set(\"product-version-rustic-pasta-pot\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"product-key-rustic-pasta-pot\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"product-version-rustic-pasta-pot\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"product-id-rustic-pasta-pot\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"product-key-rustic-pasta-pot\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"productType\": {\n        \"typeId\": \"product-type\",\n        \"id\": \"{{product-type-id-equipment}}\"\n    },\n    \"name\": {\n        \"de\": \"Rustic pasta pot\",\n        \"en\": \"Rustic pasta pot\"\n    },\n    \"slug\": {\n        \"de\": \"rustic-pasta-pot\",\n        \"en\": \"rustic-pasta-pot\"\n    },\n    \"metaTitle\": {\n        \"de\": \"Rustic pasta pot\",\n        \"en\": \"Rustic pasta pot\"\n    },\n    \"masterVariant\": {\n        \"id\": 1,\n        \"sku\": \"pasta-pot-02\",\n        \"key\": \"pasta-pot-02\",\n        \"prices\": [\n            {\n                \"value\": {\n                    \"type\": \"centPrecision\",\n                    \"currencyCode\": \"EUR\",\n                    \"centAmount\": 2999,\n                    \"fractionDigits\": 2\n                },\n                \"country\": \"DE\"\n            }\n        ],\n        \"images\": [],\n        \"attributes\": [\n            {\n                \"name\": \"size\",\n                \"value\": \"2 qt.\"\n            },\n            {\n                \"name\": \"style\",\n                \"value\": \"rustic\"\n            }\n        ],\n        \"assets\": []\n    },\n    \"searchKeywords\": {},\n    \"publish\": true,\n    \"key\": \"rustic-pasta-pot\",\n    \"taxCategory\": {\n        \"typeId\": \"tax-category\",\n        \"id\": \"{{tax-category-id}}\"\n    }\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/products",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"products"
							],
							"query": [
								{
									"key": "priceCurrency",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCountry",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCustomerGroup",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceChannel",
									"value": "",
									"disabled": true
								},
								{
									"key": "localeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "storeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "023 Create Product - Industrial pasta pot",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"product-id-industrial-pasta-pot\", data.results[0].id); ",
									"    pm.environment.set(\"product-version-industrial-pasta-pot\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"product-key-industrial-pasta-pot\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"product-version-industrial-pasta-pot\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"product-id-industrial-pasta-pot\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"product-key-industrial-pasta-pot\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"productType\": {\n        \"typeId\": \"product-type\",\n        \"id\": \"{{product-type-id-equipment}}\"\n    },\n    \"name\": {\n        \"de\": \"Industrial pasta pot\",\n        \"en\": \"Industrial pasta pot\"\n    },\n    \"slug\": {\n        \"de\": \"industrial-pasta-pot\",\n        \"en\": \"industrial-pasta-pot\"\n    },\n    \"metaTitle\": {\n        \"de\": \"Industrial pasta pot\",\n        \"en\": \"Industrial pasta pot\"\n    },\n    \"masterVariant\": {\n        \"id\": 1,\n        \"sku\": \"pasta-pot-03\",\n        \"key\": \"pasta-pot-03\",\n        \"prices\": [\n            {\n                \"value\": {\n                    \"type\": \"centPrecision\",\n                    \"currencyCode\": \"EUR\",\n                    \"centAmount\": 1599,\n                    \"fractionDigits\": 2\n                },\n                \"country\": \"DE\"\n            }\n        ],\n        \"images\": [],\n        \"attributes\": [\n            {\n                \"name\": \"size\",\n                \"value\": \"2 qt.\"\n            },\n            {\n                \"name\": \"style\",\n                \"value\": \"industrial\"\n            }\n        ],\n        \"assets\": []\n    },\n    \"searchKeywords\": {},\n    \"publish\": true,\n    \"key\": \"industrial-pasta-pot\",\n    \"taxCategory\": {\n        \"typeId\": \"tax-category\",\n        \"id\": \"{{tax-category-id}}\"\n    }\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/products",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"products"
							],
							"query": [
								{
									"key": "priceCurrency",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCountry",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCustomerGroup",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceChannel",
									"value": "",
									"disabled": true
								},
								{
									"key": "localeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "storeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "optional after task demo - Create ProductType - bundle",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"product-type-id-bundle\", data.results[0].id); ",
									"    pm.environment.set(\"product-type-version-bundle\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"product-type-key-bundle\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"product-type-version-bundle\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"product-type-id-bundle\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"product-type-key-bundle\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Bundle ProductType\",\n  \"description\": \"AllForFoodies Bundle ProductType\",\n  \"classifier\": \"Complex\",\n  \"attributes\": [\n    {\n      \"name\": \"items\",\n      \"label\": {\n        \"de\": \"Items\",\n        \"en\": \"Items\"\n      },\n      \"inputTip\": {\n        \"de\": \"Bundle item\",\n        \"en\": \"Bundle item\"\n      },\n      \"isRequired\": false,\n      \"type\": {\n        \"name\": \"set\",\n        \"elementType\": {\n          \"name\": \"reference\",\n          \"referenceTypeId\": \"product\"\n        }\n      },\n      \"attributeConstraint\": \"None\",\n      \"isSearchable\": true,\n      \"inputHint\": \"SingleLine\"\n    }\n  ],\n  \"key\": \"bundle-producttype\"\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/product-types",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"product-types"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Create ProductType"
					},
					"response": []
				},
				{
					"name": "optional after task demo - Create Product - french bundle",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"product-id-bundle\", data.results[0].id); ",
									"    pm.environment.set(\"product-version-bundle\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"product-key-bundle\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"product-version-bundle\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"product-id-bundle\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"product-key-bundle\", data.key);",
									"}",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"productType\": {\n        \"typeId\": \"product-type\",\n        \"id\": \"{{product-type-id-bundle}}\"\n    },\n    \"name\": {\n      \"en\": \"French Cooking Bundle\"\n    },\n    \"slug\": {\n        \"en\": \"french-cooking-bundle\"\n    },\n    \"masterVariant\": {\n        \"id\": 1,\n        \"sku\": \"french-ceramic-cooking-bundle\",\n        \"key\": \"french-ceramic-cooking-bundle\",\n        \"prices\": [\n            {\n            \"value\": {\n                \"type\": \"centPrecision\",\n                \"currencyCode\": \"EUR\",\n                \"centAmount\": 12900,\n                \"fractionDigits\": 2\n            },\n            \"country\": \"DE\"\n            }\n        ],\n\n    \"images\": [],\n    \"attributes\": [\n        {\n        \"name\": \"items\",\n        \"value\": [\n            {\n            \"typeId\": \"product\",\n            \"id\": \"{{product-id-french-class}}\"\n            },\n            {\n            \"typeId\": \"product\",\n            \"id\": \"{{product-id-torch}}\"\n            },\n            {\n            \"typeId\": \"product\",\n            \"id\": \"{{product-id-ceramic-ramekins}}\"\n            }\n        ]\n        }\n    ],\n    \"assets\": []\n    },\n    \"variants\": [],\n    \"searchKeywords\": {},\n    \"publish\": true,\n    \"key\": \"french-cooking-bundle\",\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    }\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/products",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"products"
							],
							"query": [
								{
									"key": "priceCurrency",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCountry",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCustomerGroup",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceChannel",
									"value": "",
									"disabled": true
								},
								{
									"key": "localeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "storeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "To create a new product, send a representation that is going to become the initial staged representation\nof the new product in the master catalog. If price selection query parameters are provided,\nthe selected prices will be added to the response.\n"
					},
					"response": []
				},
				{
					"name": "optional after task demo - Create Product - italian bundle",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"product-id-bundle\", data.results[0].id); ",
									"    pm.environment.set(\"product-version-bundle\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"product-key-bundle\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"product-version-bundle\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"product-id-bundle\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"product-key-bundle\", data.key);",
									"}",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"productType\": {\n        \"typeId\": \"product-type\",\n        \"id\": \"{{product-type-id-bundle}}\"\n    },\n    \"name\": {\n        \"en\": \"Italian Cooking Bundle\"\n    },\n    \"slug\": {\n        \"en\": \"italian-cooking-bundle\"\n    },\n    \"masterVariant\": {\n        \"id\": 1,\n        \"sku\": \"italian-industrial-cooking-bundle\",\n        \"key\": \"italian-industrial-cooking-bundle\",\n        \"prices\": [\n            {\n                \"value\": {\n                    \"type\": \"centPrecision\",\n                    \"currencyCode\": \"EUR\",\n                    \"centAmount\": 12900,\n                    \"fractionDigits\": 2\n                },\n                \"country\": \"DE\"\n            }\n        ],\n        \"images\": [],\n        \"attributes\": [\n            {\n                \"name\": \"items\",\n                \"value\": [\n                    {\n                        \"typeId\": \"product\",\n                        \"id\": \"{{product-id-italian-class}}\"\n                    },\n                    {\n                        \"typeId\": \"product\",\n                        \"id\": \"{{product-id-industrial-pasta-pot}}\"\n                    }\n                ]\n            }\n        ],\n        \"assets\": []\n    },\n    \"variants\": [],\n    \"searchKeywords\": {},\n    \"publish\": true,\n    \"key\": \"italian-cooking-bundle\",\n    \"taxCategory\": {\n        \"typeId\": \"tax-category\",\n        \"id\": \"{{tax-category-id}}\"\n    }\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/products",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"products"
							],
							"query": [
								{
									"key": "priceCurrency",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCountry",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCustomerGroup",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceChannel",
									"value": "",
									"disabled": true
								},
								{
									"key": "localeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "storeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "To create a new product, send a representation that is going to become the initial staged representation\nof the new product in the master catalog. If price selection query parameters are provided,\nthe selected prices will be added to the response.\n"
					},
					"response": []
				}
			]
		},
		{
			"name": "Case 3 - Product Modeling Bonus",
			"item": [
				{
					"name": "01 Create ProductType - ingredient",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"product-type-id-ingredient\", data.results[0].id); ",
									"    pm.environment.set(\"product-type-version-ingredient\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"product-type-key-ingredient\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"product-type-version-ingredient\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"product-type-id-ingredient\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"product-type-key-ingredient\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\" : \"Ingredients\",\n  \"description\" : \"Ingredients\",\n  \"key\" : \"ingredient-product-type\",\n  \"attributes\" : [ {\n    \"type\" : {\n      \"name\" : \"text\"\n    },\n    \"isSearchable\" : true,\n    \"inputHint\" : \"SingleLine\",\n    \"name\" : \"package\",\n    \"label\" : {\n      \"en\" : \"Package Type\",\n      \"de\" : \"Package Type\"\n    },\n    \"isRequired\" : true,\n    \"attributeConstraint\" : \"CombinationUnique\"\n  },\n  {\n    \"type\" : {\n      \"name\" : \"number\"\n    },\n    \"name\" : \"weight_in_lb\",\n    \"label\" : {\n      \"en\" : \"Weight in lb\",\n      \"de\" : \"Weight in lb\"\n    },\n    \"isRequired\" : true,\n    \"attributeConstraint\" : \"CombinationUnique\"\n  }]\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/product-types",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"product-types"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Create ProductType"
					},
					"response": []
				},
				{
					"name": "011 Create Product - Gluten-free brownie mix",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"gluten-free-brownie-mix-product-id\", data.results[0].id); ",
									"    pm.environment.set(\"gluten-free-brownie-mix-product-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"gluten-free-brownie-mix-product-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"gluten-free-brownie-mix-product-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"gluten-free-brownie-mix-product-id\", data.id);",
									"    pm.environment.set(\"gluten-free-brownie-mix-product-id\", data.id) ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"gluten-free-brownie-mix-product-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"productType\":{\n        \"typeId\":\"product-type\",\n        \"id\":\"{{product-type-id-ingredient}}\"\n    },\n    \"name\":{\n        \"de\":\"Gluten-free brownie mix\",\n        \"en\":\"Gluten-free brownie mix\"\n    },\n    \"slug\":{\n        \"de\":\"gluten-free-brownie-mix\",\n        \"en\":\"gluten-free-brownie-mix\"\n    },\n    \"metaTitle\":{\n        \"de\":\"Gluten-free brownie mix\",\n        \"en\":\"Gluten-free brownie mix\"\n    },\n    \"masterVariant\":{\n        \"id\":1,\n        \"sku\":\"gluten-free-brownie-mix-01\",\n        \"key\":\"gluten-free-brownie-mix-01\",\n        \"prices\":[\n            {\n            \"value\":{\n                \"type\":\"centPrecision\",\n                \"currencyCode\":\"EUR\",\n                \"centAmount\":399,\n                \"fractionDigits\":2\n            },\n            \"country\":\"DE\"\n            }\n        ],\n        \"images\":[],\n        \"attributes\":[\n            {\n            \"name\":\"package\",\n            \"value\":\"bag\"\n            },\n            {\n            \"name\":\"weight_in_lb\",\n            \"value\":1\n            }\n        ],\n        \"assets\":[]\n    },\n    \"variants\":[\n        {\n            \"id\":2,\n            \"sku\":\"gluten-free-brownie-mix-05\",\n            \"key\":\"gluten-free-brownie-mix-05\",\n            \"prices\":[\n            {\n                \"value\":{\n                    \"type\":\"centPrecision\",\n                    \"currencyCode\":\"EUR\",\n                    \"centAmount\":1935,\n                    \"fractionDigits\":2\n                },\n                \"country\":\"DE\"\n            }\n            ],\n            \"images\":[],\n            \"attributes\":[\n            {\n            \"name\":\"package\",\n            \"value\":\"bag\"\n            },\n            {\n            \"name\":\"weight_in_lb\",\n            \"value\":5\n            }],\n            \"assets\":[]\n        },\n        {\n            \"id\":3,\n            \"sku\":\"gluten-free-brownie-mix-25\",\n            \"key\":\"gluten-free-brownie-mix-25\",\n            \"prices\":[\n            {\n                \"value\":{\n                    \"type\":\"centPrecision\",\n                    \"currencyCode\":\"EUR\",\n                    \"centAmount\":6725,\n                    \"fractionDigits\":2\n                },\n                \"country\":\"DE\"\n            }\n            ],\n            \"images\":[],\n            \"attributes\":[\n            {\n            \"name\":\"package\",\n            \"value\":\"case\"\n            },\n            {\n            \"name\":\"weight_in_lb\",\n            \"value\":25\n            }],\n            \"assets\":[]\n        }\n    ],\n    \"searchKeywords\":{\n        \n    },\n    \"publish\": true,\n    \"key\":\"gluten-free-brownie-mix\",\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    }\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/products",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"products"
							],
							"query": [
								{
									"key": "priceCurrency",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCountry",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCustomerGroup",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceChannel",
									"value": "",
									"disabled": true
								},
								{
									"key": "localeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "storeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "To create a new product, send a representation that is going to become the initial staged representation\nof the new product in the master catalog. If price selection query parameters are provided,\nthe selected prices will be added to the response.\n"
					},
					"response": []
				},
				{
					"name": "012 Create Product - Sugar cookie mix",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"sugar-cookie-mix-product-id\", data.results[0].id); ",
									"    pm.environment.set(\"sugar-cookie-mix-product-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"sugar-cookie-mix-product-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"sugar-cookie-mix-product-version\", data.version);",
									"    pm.environment.set(\"sugar-cookie-mix-product-id\", data.id) ",
									"",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"sugar-cookie-mix-product-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"sugar-cookie-mix-product-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"productType\":{\n        \"typeId\":\"product-type\",\n        \"id\":\"{{product-type-id-ingredient}}\"\n    },\n    \"name\":{\n        \"de\":\"Sugar cookie mix\",\n        \"en\":\"Sugar cookie mix\"\n    },\n    \"slug\":{\n        \"de\":\"sugar-cookie-mix\",\n        \"en\":\"sugar-cookie-mix\"\n    },\n    \"metaTitle\":{\n        \"de\":\"Sugar cookie mix\",\n        \"en\":\"Sugar cookie mix\"\n    },\n    \"masterVariant\":{\n        \"id\":1,\n        \"sku\":\"sugar-cookie-mix-01\",\n        \"key\":\"sugar-cookie-mix-01\",\n        \"prices\":[\n            {\n            \"value\":{\n                \"type\":\"centPrecision\",\n                \"currencyCode\":\"EUR\",\n                \"centAmount\":299,\n                \"fractionDigits\":2\n            },\n            \"country\":\"DE\"\n            }\n        ],\n        \"images\":[],\n        \"attributes\":[\n            {\n            \"name\":\"package\",\n            \"value\":\"bag\"\n            },\n            {\n            \"name\":\"weight_in_lb\",\n            \"value\":1\n            }\n        ],\n        \"assets\":[]\n    },\n    \"variants\":[\n        {\n            \"id\":2,\n            \"sku\":\"sugar-cookie-mix-05\",\n            \"key\":\"sugar-cookie-mix-05\",\n            \"prices\":[\n            {\n                \"value\":{\n                    \"type\":\"centPrecision\",\n                    \"currencyCode\":\"EUR\",\n                    \"centAmount\":1499,\n                    \"fractionDigits\":2\n                },\n                \"country\":\"DE\"\n            }\n            ],\n            \"images\":[],\n            \"attributes\":[\n            {\n            \"name\":\"package\",\n            \"value\":\"bag\"\n            },\n            {\n            \"name\":\"weight_in_lb\",\n            \"value\":5\n            }],\n            \"assets\":[]\n        },\n        {\n            \"id\":3,\n            \"sku\":\"sugar-cookie-mix-25\",\n            \"key\":\"sugar-cookie-mix-25\",\n            \"prices\":[\n            {\n                \"value\":{\n                    \"type\":\"centPrecision\",\n                    \"currencyCode\":\"EUR\",\n                    \"centAmount\":4975,\n                    \"fractionDigits\":2\n                },\n                \"country\":\"DE\"\n            }\n            ],\n            \"images\":[],\n            \"attributes\":[\n            {\n            \"name\":\"package\",\n            \"value\":\"case\"\n            },\n            {\n            \"name\":\"weight_in_lb\",\n            \"value\":25\n            }],\n            \"assets\":[]\n        }\n    ],\n    \"searchKeywords\":{\n        \n    },\n    \"publish\": true,\n    \"key\":\"sugar-cookie-mix\",\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    }\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/products",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"products"
							],
							"query": [
								{
									"key": "priceCurrency",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCountry",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCustomerGroup",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceChannel",
									"value": "",
									"disabled": true
								},
								{
									"key": "localeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "storeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "To create a new product, send a representation that is going to become the initial staged representation\nof the new product in the master catalog. If price selection query parameters are provided,\nthe selected prices will be added to the response.\n"
					},
					"response": []
				},
				{
					"name": "013 Create Product - Walnut pieces",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"walnut-pieces-product-id\", data.results[0].id); ",
									"    pm.environment.set(\"walnut-pieces-product-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"walnut-pieces-product-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"walnut-pieces-product-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"product-id\", data.id); ",
									"    pm.environment.set(\"walnut-pieces-product-id\", data.id) ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"walnut-pieces-product-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"productType\":{\n        \"typeId\":\"product-type\",\n        \"id\":\"{{product-type-id-ingredient}}\"\n    },\n    \"name\":{\n        \"de\":\"Walnut pieces\",\n        \"en\":\"Walnut pieces\"\n    },\n    \"slug\":{\n        \"de\":\"walnut-pieces\",\n        \"en\":\"walnut-pieces\"\n    },\n    \"metaTitle\":{\n        \"de\":\"Walnut pieces\",\n        \"en\":\"Walnut pieces\"\n    },\n    \"masterVariant\":{\n        \"id\":1,\n        \"sku\":\"walnut-pieces-01\",\n        \"key\":\"walnut-pieces-01\",\n        \"prices\":[\n            {\n            \"value\":{\n                \"type\":\"centPrecision\",\n                \"currencyCode\":\"EUR\",\n                \"centAmount\":899,\n                \"fractionDigits\":2\n            },\n            \"country\":\"DE\"\n            }\n        ],\n        \"images\":[],\n        \"attributes\":[\n            {\n            \"name\":\"package\",\n            \"value\":\"bag\"\n            },\n            {\n            \"name\":\"weight_in_lb\",\n            \"value\":1\n            }\n        ],\n        \"assets\":[]\n    },\n    \"variants\":[\n        {\n            \"id\":2,\n            \"sku\":\"walnut-pieces-05\",\n            \"key\":\"walnut-pieces-05\",\n            \"prices\":[\n            {\n                \"value\":{\n                    \"type\":\"centPrecision\",\n                    \"currencyCode\":\"EUR\",\n                    \"centAmount\":4360,\n                    \"fractionDigits\":2\n                },\n                \"country\":\"DE\"\n            }\n            ],\n            \"images\":[],\n            \"attributes\":[\n            {\n            \"name\":\"package\",\n            \"value\":\"bag\"\n            },\n            {\n            \"name\":\"weight_in_lb\",\n            \"value\":5\n            }],\n            \"assets\":[]\n        },\n        {\n            \"id\":3,\n            \"sku\":\"walnut-pieces-30\",\n            \"key\":\"walnut-pieces-30\",\n            \"prices\":[\n            {\n                \"value\":{\n                    \"type\":\"centPrecision\",\n                    \"currencyCode\":\"EUR\",\n                    \"centAmount\":20970,\n                    \"fractionDigits\":2\n                },\n                \"country\":\"DE\"\n            }\n            ],\n            \"images\":[],\n            \"attributes\":[\n            {\n            \"name\":\"package\",\n            \"value\":\"case\"\n            },\n            {\n            \"name\":\"weight_in_lb\",\n            \"value\":30\n            }],\n            \"assets\":[]\n        }\n    ],\n    \"searchKeywords\":{\n        \n    },\n    \"publish\": true,\n    \"key\":\"walnut-pieces\",\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    }\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/products",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"products"
							],
							"query": [
								{
									"key": "priceCurrency",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCountry",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCustomerGroup",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceChannel",
									"value": "",
									"disabled": true
								},
								{
									"key": "localeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "storeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "To create a new product, send a representation that is going to become the initial staged representation\nof the new product in the master catalog. If price selection query parameters are provided,\nthe selected prices will be added to the response.\n"
					},
					"response": []
				},
				{
					"name": "014 Create Product - Semi-sweet chocolate chips",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"semi-sweet-chocolate-pieces-product-id\", data.results[0].id); ",
									"    pm.environment.set(\"semi-sweet-chocolate-pieces-product-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"semi-sweet-chocolate-pieces-product-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"semi-sweet-chocolate-pieces-product-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"semi-sweet-chocolate-pieces-product-id\", data.id); ",
									"    pm.environment.set(\"semi-sweet-chocolate-pieces-product-id\", data.id) ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"semi-sweet-chocolate-pieces-product-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"productType\":{\n        \"typeId\":\"product-type\",\n        \"id\":\"{{product-type-id-ingredient}}\"\n    },\n    \"name\":{\n        \"de\":\"Semi-sweet chocolate chips\",\n        \"en\":\"Semi-sweet chocolate chips\"\n    },\n    \"slug\":{\n        \"de\":\"semi-sweet-chocolate-chips\",\n        \"en\":\"semi-sweet-chocolate-chips\"\n    },\n    \"metaTitle\":{\n        \"de\":\"Semi-sweet chocolate chips\",\n        \"en\":\"Semi-sweet chocolate chips\"\n    },\n    \"masterVariant\":{\n        \"id\":1,\n        \"sku\":\"semi-sweet-chocolate-chips-01\",\n        \"key\":\"semi-sweet-chocolate-chips-01\",\n        \"prices\":[\n            {\n            \"value\":{\n                \"type\":\"centPrecision\",\n                \"currencyCode\":\"EUR\",\n                \"centAmount\":599,\n                \"fractionDigits\":2\n            },\n            \"country\":\"DE\"\n            }\n        ],\n        \"images\":[],\n        \"attributes\":[\n            {\n            \"name\":\"package\",\n            \"value\":\"bag\"\n            },\n            {\n            \"name\":\"weight_in_lb\",\n            \"value\":1\n            }\n        ],\n        \"assets\":[]\n    },\n    \"variants\":[\n        {\n            \"id\":2,\n            \"sku\":\"semi-sweet-chocolate-chips-05\",\n            \"key\":\"semi-sweet-chocolate-chips-05\",\n            \"prices\":[\n            {\n                \"value\":{\n                    \"type\":\"centPrecision\",\n                    \"currencyCode\":\"EUR\",\n                    \"centAmount\":2905,\n                    \"fractionDigits\":2\n                },\n                \"country\":\"DE\"\n            }\n            ],\n            \"images\":[],\n            \"attributes\":[\n            {\n            \"name\":\"package\",\n            \"value\":\"bag\"\n            },\n            {\n            \"name\":\"weight_in_lb\",\n            \"value\":5\n            }],\n            \"assets\":[]\n        },\n        {\n            \"id\":3,\n            \"sku\":\"semi-sweet-chocolate-chips-25\",\n            \"key\":\"semi-sweet-chocolate-chips-25\",\n            \"prices\":[\n            {\n                \"value\":{\n                    \"type\":\"centPrecision\",\n                    \"currencyCode\":\"EUR\",\n                    \"centAmount\":12475,\n                    \"fractionDigits\":2\n                },\n                \"country\":\"DE\"\n            }\n            ],\n            \"images\":[],\n            \"attributes\":[\n            {\n            \"name\":\"package\",\n            \"value\":\"case\"\n            },\n            {\n            \"name\":\"weight_in_lb\",\n            \"value\":25\n            }],\n            \"assets\":[]\n        }\n    ],\n    \"searchKeywords\":{\n        \n    },\n    \"publish\": true,\n    \"key\":\"semi-sweet-chocolate-chips\",\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    }\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/products",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"products"
							],
							"query": [
								{
									"key": "priceCurrency",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCountry",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCustomerGroup",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceChannel",
									"value": "",
									"disabled": true
								},
								{
									"key": "localeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "storeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "To create a new product, send a representation that is going to become the initial staged representation\nof the new product in the master catalog. If price selection query parameters are provided,\nthe selected prices will be added to the response.\n"
					},
					"response": []
				},
				{
					"name": "02 Create ProductType - ingredient Info",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"product-type-id-ingredient-info\", data.results[0].id); ",
									"    pm.environment.set(\"product-type-version-ingredient-info\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"product-type-key-ingredient-info\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"product-type-version-ingredient-info\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"product-type-id-ingredient-info\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"product-type-key-ingredient-info\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n      \"name\": \"Ingredient Info\",\n      \"description\": \"Ingredient info to be used as a nested type in recipe product type\",\n      \"classifier\": \"Complex\",\n      \"attributes\": [\n        {\n          \"name\": \"SKU\",\n          \"label\": {\n            \"de\": \"SKU\",\n            \"en\": \"SKU\"\n          },\n          \"isRequired\": true,\n          \"type\": {\n            \"name\": \"text\"\n          },\n          \"attributeConstraint\": \"None\",\n          \"isSearchable\": false,\n          \"inputHint\": \"SingleLine\"\n        },\n        {\n          \"name\": \"Quantity\",\n          \"label\": {\n            \"de\": \"\",\n            \"en\": \"quantity\"\n          },\n          \"isRequired\": true,\n          \"type\": {\n            \"name\": \"number\"\n          },\n          \"attributeConstraint\": \"None\",\n          \"isSearchable\": false,\n          \"inputHint\": \"SingleLine\"\n        },\n        {\n          \"name\": \"Item\",\n          \"label\": {\n            \"de\": \"\",\n            \"en\": \"item\"\n          },\n          \"isRequired\": true,\n          \"type\": {\n            \"name\": \"reference\",\n            \"referenceTypeId\": \"product\"\n          },\n          \"attributeConstraint\": \"None\",\n          \"isSearchable\": false,\n          \"inputHint\": \"SingleLine\"\n        }\n      ],\n      \"key\": \"ingredient-info\"\n    }"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/product-types",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"product-types"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Create ProductType"
					},
					"response": []
				},
				{
					"name": "03 Create ProductType Recipe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"product-type-id-recipe\", data.results[0].id); ",
									"    pm.environment.set(\"product-type-version-recipe\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"product-type-key-recipe\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"product-type-version-recipe\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"product-type-id-recipe\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"product-type-key-recipe\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\" : \"Recipe\",\n    \"key\" : \"recipe-product-type\",\n    \"description\" : \"Nested recipe product type.\",\n    \"attributes\" : [ {\n        \"type\": {\n            \"name\": \"set\",\n            \"elementType\": {\n                \"name\": \"nested\",\n                \"typeReference\": {\n                    \"typeId\": \"product-type\",\n                    \"id\": \"{{product-type-id-ingredient-info}}\"\n                }\n            }\n        },\n        \"isSearchable\" : false,\n        \"name\" : \"ingredient-info\",\n        \"label\" : {\n            \"en\" : \"Ingredient Info\",\n            \"de\" : \"Ingredient Info\"\n        },\n        \"isRequired\" : false,\n        \"attributeConstraint\" : \"None\",\n        \"displayGroup\": \"Other\"\n    }]\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/product-types",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"product-types"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "031 Create Product - Fudgy Walnut Brownie Recipe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"product-id\", data.results[0].id); ",
									"    pm.environment.set(\"product-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"product-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"product-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"product-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"product-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"productType\":{\n        \"typeId\":\"product-type\",\n        \"id\":\"{{product-type-id-recipe}}\"\n    },\n    \"name\":{\n        \"de\":\"Fudgy Walnut Brownie Recipe\",\n        \"en\":\"Fudgy Walnut Brownie Recipe\"\n    },\n    \"slug\":{\n        \"de\":\"fudgy-walnut-brownie-recipe\",\n        \"en\":\"fudgy-walnut-brownie-recipe\"\n    },\n    \"metaTitle\":{\n        \"de\":\"fudgy-walnut-brownie-recipe\",\n        \"en\":\"fudgy-walnut-brownie-recipe\"\n    },\n    \"masterVariant\":{\n        \"id\":1,\n        \"sku\":\"fudgy-walnut-brownie-recipe\",\n        \"key\":\"fudgy-walnut-brownie-recipe\",\n        \"prices\":[\n            {\n            \"value\":{\n                \"type\":\"centPrecision\",\n                \"currencyCode\":\"EUR\",\n                \"centAmount\":2000,\n                \"fractionDigits\":2\n            },\n            \"country\":\"DE\"\n            }\n        ],\n        \"images\":[],\n        \"attributes\": [\n          {\n            \"name\": \"ingredient-info\",\n            \"value\": [\n              [\n                {\n                  \"name\": \"Item\",\n                  \"value\": {\n                    \"typeId\": \"product\",\n                    \"id\": \"{{gluten-free-brownie-mix-product-id}}\"\n                  }\n                },\n                {\n                  \"name\": \"SKU\",\n                  \"value\": \"gluten-free-brownie-mix-01\"\n                },\n                {\n                  \"name\": \"Quantity\",\n                  \"value\": 2\n                }\n              ],\n              [\n                {\n                  \"name\": \"Item\",\n                  \"value\": {\n                    \"typeId\": \"product\",\n                    \"id\": \"{{walnut-pieces-product-id}}\"\n                  }\n                },\n                {\n                  \"name\": \"SKU\",\n                  \"value\": \"walnut-pieces-01\"\n                },\n                {\n                  \"name\": \"Quantity\",\n                  \"value\": 1\n                }\n              ],\n                            [\n                {\n                  \"name\": \"Item\",\n                  \"value\": {\n                    \"typeId\": \"product\",\n                    \"id\": \"{{semi-sweet-chocolate-pieces-product-id}}\"\n                  }\n                },\n                {\n                  \"name\": \"SKU\",\n                  \"value\": \"semi-sweet-chocolate-chips-01\"\n                },\n                {\n                  \"name\": \"Quantity\",\n                  \"value\": 1\n                }\n              ]\n            ]\n          }\n        ]\n    },\n    \"searchKeywords\":{\n    },\n    \"publish\": true,\n    \"key\":\"fudgy-walnut-brownie-recipe\",\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    }\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/products",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"products"
							],
							"query": [
								{
									"key": "priceCurrency",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCountry",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCustomerGroup",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceChannel",
									"value": "",
									"disabled": true
								},
								{
									"key": "localeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "storeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "To create a new product, send a representation that is going to become the initial staged representation\nof the new product in the master catalog. If price selection query parameters are provided,\nthe selected prices will be added to the response.\n"
					},
					"response": []
				},
				{
					"name": "032 Create Product - Nuts For Chocolate Cookies Recipe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"nuts-for-chocolate-cookies-product-id\", data.results[0].id); ",
									"    pm.environment.set(\"nuts-for-chocolate-cookies-product-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"nuts-for-chocolate-cookies-product-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"nuts-for-chocolate-cookies-product-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"nuts-for-chocolate-cookies-product-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"nuts-for-chocolate-cookies-product-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"productType\":{\n        \"typeId\":\"product-type\",\n        \"id\":\"{{product-type-id-recipe}}\"\n    },\n    \"name\":{\n        \"de\":\"Nuts For Chocolate Cookies Recipe\",\n        \"en\":\"Nuts For Chocolate Cookies Recipe\"\n    },\n    \"slug\":{\n        \"de\":\"nuts-for-chocolate-cookies-recipe\",\n        \"en\":\"nuts-for-chocolate-cookies-recipe\"\n    },\n    \"metaTitle\":{\n        \"de\":\"nuts-for-chocolate-cookies-recipe\",\n        \"en\":\"nuts-for-chocolate-cookies-recipe\"\n    },\n    \"masterVariant\":{\n        \"id\":1,\n        \"sku\":\"nuts-for-chocolate-cookies-recipe\",\n        \"key\":\"nuts-for-chocolate-cookies-recipe\",\n        \"prices\":[\n            {\n            \"value\":{\n                \"type\":\"centPrecision\",\n                \"currencyCode\":\"EUR\",\n                \"centAmount\":2000,\n                \"fractionDigits\":2\n            },\n            \"country\":\"DE\"\n            }\n        ],\n        \"images\":[],\n        \"attributes\": [\n          {\n            \"name\": \"ingredient-info\",\n            \"value\": [\n                [\n                    {\n                    \"name\": \"Item\",\n                    \"value\": {\n                        \"typeId\": \"product\",\n                        \"id\": \"{{sugar-cookie-mix-product-id}}\"\n                    }\n                    },\n                    {\n                    \"name\": \"SKU\",\n                    \"value\": \"sugar-cookie-mix-01\"\n                    },\n                    {\n                    \"name\": \"Quantity\",\n                    \"value\": 1\n                    }\n                ],\n                [\n                    {\n                    \"name\": \"Item\",\n                    \"value\": {\n                        \"typeId\": \"product\",\n                        \"id\": \"{{walnut-pieces-product-id}}\"\n                    }\n                    },\n                    {\n                    \"name\": \"SKU\",\n                    \"value\": \"walnut-pieces-01\"\n                    },\n                    {\n                    \"name\": \"Quantity\",\n                    \"value\": 3\n                    }\n                ],\n                [\n                    {\n                    \"name\": \"Item\",\n                    \"value\": {\n                        \"typeId\": \"product\",\n                        \"id\": \"{{semi-sweet-chocolate-pieces-product-id}}\"\n                    }\n                    },\n                    {\n                    \"name\": \"SKU\",\n                    \"value\": \"semi-sweet-chocolate-chips-01\"\n                    },\n                    {\n                    \"name\": \"Quantity\",\n                    \"value\": 3\n                    }\n                ],\n                [\n                    {\n                    \"name\": \"Item\",\n                    \"value\": {\n                        \"typeId\": \"product\",\n                        \"id\": \"{{semi-sweet-chocolate-pieces-product-id}}\"\n                    }\n                    },\n                    {\n                    \"name\": \"SKU\",\n                    \"value\": \"semi-sweet-chocolate-chips-02\"\n                    },\n                    {\n                    \"name\": \"Quantity\",\n                    \"value\": 2\n                    }\n                ]\n            ]\n          }\n        ],\n    \"searchKeywords\":{\n        }\n    },\n    \"publish\": true,\n    \"key\":\"nuts-for-chocolate-cookies-recip\",\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    }\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/products",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"products"
							],
							"query": [
								{
									"key": "priceCurrency",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCountry",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCustomerGroup",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceChannel",
									"value": "",
									"disabled": true
								},
								{
									"key": "localeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "storeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "033 Create Product - Fluffy Sugar Cookies Recipe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"fluffy-sugar-cookies-product-id\", data.results[0].id); ",
									"    pm.environment.set(\"fluffy-sugar-cookies-product-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"fluffy-sugar-cookies-product-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"fluffy-sugar-cookies-product-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"fluffy-sugar-cookies-product-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"fluffy-sugar-cookies-product-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"productType\":{\n        \"typeId\":\"product-type\",\n        \"id\":\"{{product-type-id-recipe}}\"\n    },\n    \"name\":{\n        \"de\":\"Fluffy Sugar Cookies Recipe\",\n        \"en\":\"Fluffy Sugar Cookies Recipe\"\n    },\n    \"slug\":{\n        \"de\":\"fluffy-sugar-cookies-recipe\",\n        \"en\":\"fluffy-sugar-cookies-recipe\"\n    },\n    \"metaTitle\":{\n        \"de\":\"fluffy-sugar-cookies-recipe\",\n        \"en\":\"fluffy-sugar-cookies-recipe\"\n    },\n    \"masterVariant\":{\n        \"id\":1,\n        \"sku\":\"fluffy-sugar-cookies-recipe\",\n        \"key\":\"fluffy-sugar-cookies-recipe\",\n        \"prices\":[\n            {\n            \"value\":{\n                \"type\":\"centPrecision\",\n                \"currencyCode\":\"EUR\",\n                \"centAmount\":2000,\n                \"fractionDigits\":2\n            },\n            \"country\":\"DE\"\n            }\n        ],\n        \"images\":[],\n        \"attributes\": [\n          {\n            \"name\": \"ingredient-info\",\n            \"value\": [\n                [\n                    {\n                    \"name\": \"Item\",\n                    \"value\": {\n                        \"typeId\": \"product\",\n                        \"id\": \"{{sugar-cookie-mix-product-id}}\"\n                    }\n                    },\n                    {\n                    \"name\": \"SKU\",\n                    \"value\": \"sugar-cookie-mix-05\"\n                    },\n                    {\n                    \"name\": \"Quantity\",\n                    \"value\": 1\n                    }\n                ]\n            ]\n          }\n        ],\n    \"searchKeywords\":{\n        }\n    },\n    \"publish\": true,\n    \"key\":\"fluffy-sugar-cookies-recipe\",\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    }\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/products",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"products"
							],
							"query": [
								{
									"key": "priceCurrency",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCountry",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCustomerGroup",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceChannel",
									"value": "",
									"disabled": true
								},
								{
									"key": "localeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "storeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Customer Groups (for Case 5)",
			"item": [
				{
					"name": "01 Create CustomerGroup",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"customer-group-id-01\", data.results[0].id); ",
									"    pm.environment.set(\"customer-group-version-01\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"customer-group-key-01\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"customer-group-version-01\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"customer-group-id-01\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"customer-group-key-01\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"groupName\" : \"B2B Group 1\",\n  \"key\" : \"b2b-group1\"\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/customer-groups",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"customer-groups"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Create CustomerGroup"
					},
					"response": []
				},
				{
					"name": "02 Create CustomerGroup",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"customer-group-id-02\", data.results[0].id); ",
									"    pm.environment.set(\"customer-group-version-02\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"customer-group-key-02\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"customer-group-version-02\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"customer-group-id-02\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"customer-group-key-02\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"groupName\" : \"B2B Group 2\",\n  \"key\" : \"b2b-group2\"\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/customer-groups",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"customer-groups"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Create CustomerGroup"
					},
					"response": []
				},
				{
					"name": "03 Create CustomerGroup",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"customer-group-id-03\", data.results[0].id); ",
									"    pm.environment.set(\"customer-group-version-03\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"customer-group-key-03\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"customer-group-version-03\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"customer-group-id-03\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"customer-group-key-03\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"groupName\" : \"B2B Group 3\",\n  \"key\" : \"b2b-group3\"\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/customer-groups",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"customer-groups"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Create CustomerGroup"
					},
					"response": []
				},
				{
					"name": "04 Create CustomerGroup",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"customer-group-id-04\", data.results[0].id); ",
									"    pm.environment.set(\"customer-group-version-04\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"customer-group-key-04\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"customer-group-version-04\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"customer-group-id-04\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"customer-group-key-04\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"groupName\" : \"B2B Group 4\",\n  \"key\" : \"b2b-group4\"\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/customer-groups",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"customer-groups"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Create CustomerGroup"
					},
					"response": []
				}
			]
		},
		{
			"name": "Case 5 - Pricing",
			"item": [
				{
					"name": "01 Create ProductType - Gourmet food",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"product-type-id-food\", data.results[0].id); ",
									"    pm.environment.set(\"product-type-version-food\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"product-type-key-food\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"product-type-version-food\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"product-type-id-food\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"product-type-key-food\", data.key);",
									"}",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\" : \"Gourmet Food\",\n  \"description\" : \"Gourmet food\",\n  \"key\" : \"gourmet-food-product-type\",\n  \"attributes\" : [ \n  {\n    \"type\" : {\n      \"name\" : \"text\"\n    },\n    \"isSearchable\" : true,\n    \"name\" : \"description\",\n    \"label\" : {\n      \"en\" : \"Description\",\n      \"de\" : \"Description\"\n    },\n    \"isRequired\" : true,\n    \"inputHint\": \"MultiLine\"\n  } ]\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/product-types",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"product-types"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Create ProductType"
					},
					"response": []
				},
				{
					"name": "01 Create ProductType - Gourmet coffee",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"product-type-id-coffee\", data.results[0].id); ",
									"    pm.environment.set(\"product-type-version-coffee\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"product-type-key-coffee\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"product-type-version-coffee\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"product-type-id-coffee\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"product-type-key-coffee\", data.key);",
									"}",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\" : \"Gourmet Coffee\",\n  \"description\" : \"Gourmet coffee\",\n  \"key\" : \"gourmet-coffee-product-type\",\n  \"attributes\" : [ \n  {\n    \"type\" : {\n      \"name\" : \"text\"\n    },\n    \"isSearchable\" : true,\n    \"name\" : \"description\",\n    \"label\" : {\n      \"en\" : \"Description\",\n      \"de\" : \"Description\"\n    },\n    \"isRequired\" : true,\n    \"inputHint\": \"MultiLine\"\n  } ]\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/product-types",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"product-types"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Create ProductType"
					},
					"response": []
				},
				{
					"name": "01 Create ProductType - Kitchen utensil",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"product-type-id-utensil\", data.results[0].id); ",
									"    pm.environment.set(\"product-type-version-utensil\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"product-type-key-utensil\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"product-type-version-utensil\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"product-type-id-utensil\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"product-type-key-utensil\", data.key);",
									"}",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\" : \"Kitchen Utensil\",\n  \"description\" : \"Kitchen utensil\",\n  \"key\" : \"kitchen-utensil-product-type\",\n  \"attributes\" : [ \n  {\n    \"type\" : {\n      \"name\" : \"text\"\n    },\n    \"isSearchable\" : true,\n    \"name\" : \"description\",\n    \"label\" : {\n      \"en\" : \"Description\",\n      \"de\" : \"Description\"\n    },\n    \"isRequired\" : true,\n    \"inputHint\": \"MultiLine\"\n  } ]\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/product-types",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"product-types"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Create ProductType"
					},
					"response": []
				},
				{
					"name": "01 Create ProductType - Home decor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"product-type-id-decor\", data.results[0].id); ",
									"    pm.environment.set(\"product-type-version-decor\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"product-type-key-decor\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"product-type-version-decor\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"product-type-id-decor\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"product-type-key-decor\", data.key);",
									"}",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\" : \"Home Decor\",\n  \"description\" : \"Home decor\",\n  \"key\" : \"home-decor-product-type\",\n  \"attributes\" : [ \n  {\n    \"type\" : {\n      \"name\" : \"text\"\n    },\n    \"isSearchable\" : true,\n    \"name\" : \"description\",\n    \"label\" : {\n      \"en\" : \"Description\",\n      \"de\" : \"Description\"\n    },\n    \"isRequired\" : true,\n    \"inputHint\": \"MultiLine\"\n  } ]\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/product-types",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"product-types"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Create ProductType"
					},
					"response": []
				},
				{
					"name": "02 Create Product - Truffle Infused Olive Oil",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"product-id\", data.results[0].id); ",
									"    pm.environment.set(\"product-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"product-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"product-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"product-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"product-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"productType\":{\n        \"typeId\":\"product-type\",\n        \"id\":\"{{product-type-id-food}}\"\n    },\n    \"name\":{\n        \"de\":\"Truffle Infused Olive Oil\",\n        \"en\":\"Truffle Infused Olive Oil\"\n    },\n    \"slug\":{\n        \"de\":\"truffle-infused-olive-oil\",\n        \"en\":\"truffle-infused-olive-oil\"\n    },\n    \"metaTitle\":{\n        \"de\":\"Truffle Infused Olive Oil\",\n        \"en\":\"Truffle Infused Olive Oil\"\n    },\n    \"masterVariant\":{\n        \"id\":1,\n        \"sku\":\"white-truffle-infused-olive-oil\",\n        \"key\":\"white-truffle-infused-olive-oil\",\n        \"images\":[],\n        \"attributes\":[\n            {\n            \"name\":\"description\",\n            \"value\":\"Premium extra virgin olive oil infused with the delicate and earthy flavor of white truffles. Suitable for enhancing the taste of salads, pasta, and other culinary creations.\"\n            }\n        ],\n        \"assets\":[]\n    },\n    \"variants\":[\n        {\n            \"id\":2,\n            \"sku\":\"black-truffle-infused-olive-oil\",\n            \"key\":\"black-truffle-infused-olive-oil\",\n            \"images\":[],\n            \"attributes\":[\n            {\n                \"name\":\"description\",\n                \"value\":\"Cold-pressed extra virgin olive oil infused with the bold and rich flavor of black truffles. Ideal for drizzling over dishes to add a luxurious and aromatic touch.\"\n            }\n            ],\n            \"assets\":[]\n        }\n    ],\n    \"searchKeywords\":{\n        \n    },\n    \"publish\": true,\n    \"key\":\"truffle-infused-olive-oil\",\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    }\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/products",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"products"
							],
							"query": [
								{
									"key": "priceCurrency",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCountry",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCustomerGroup",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceChannel",
									"value": "",
									"disabled": true
								},
								{
									"key": "localeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "storeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "03 Create Product - Premium Coffee Beans",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"product-id\", data.results[0].id); ",
									"    pm.environment.set(\"product-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"product-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"product-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"product-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"product-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"productType\":{\n        \"typeId\":\"product-type\",\n        \"id\":\"{{product-type-id-coffee}}\"\n    },\n    \"name\":{\n        \"de\":\"Premium Coffee Beans\",\n        \"en\":\"Premium Coffee Beans\"\n    },\n    \"slug\":{\n        \"de\":\"premium-coffee-beans\",\n        \"en\":\"premium-coffee-beans\"\n    },\n    \"metaTitle\":{\n        \"de\":\"Premium Coffee Beans\",\n        \"en\":\"Premium Coffee Beans\"\n    },\n    \"masterVariant\":{\n        \"id\":1,\n        \"sku\":\"single-origin-arabica-coffee-beans\",\n        \"key\":\"single-origin-arabica-coffee-beans\",\n        \"images\":[],\n        \"attributes\":[\n            {\n            \"name\":\"description\",\n            \"value\":\"High-quality Arabica coffee beans sourced from a specific region, offering a distinct flavor profile. Suitable for coffee connoisseurs who appreciate the unique characteristics of single-origin beans.\"\n            }\n        ],\n        \"assets\":[]\n    },\n    \"variants\":[\n        {\n            \"id\":2,\n            \"sku\":\"limited-edition-espresso-blend\",\n            \"key\":\"limited-edition-espresso-blend\",\n            \"images\":[],\n            \"attributes\":[\n            {\n                \"name\":\"description\",\n                \"value\":\"A carefully crafted blend of premium coffee beans, specifically designed for espresso enthusiasts. Limited edition to provide a special and exclusive coffee experience.\"\n            }\n            ],\n            \"assets\":[]\n        }\n    ],\n    \"searchKeywords\":{\n        \n    },\n    \"publish\": true,\n    \"key\":\"premium-coffee-beans\",\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    }\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/products",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"products"
							],
							"query": [
								{
									"key": "priceCurrency",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCountry",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCustomerGroup",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceChannel",
									"value": "",
									"disabled": true
								},
								{
									"key": "localeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "storeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "04 Create Product - Premium Copper Kitchen Utensil Set",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"product-id\", data.results[0].id); ",
									"    pm.environment.set(\"product-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"product-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"product-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"product-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"product-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"productType\":{\n        \"typeId\":\"product-type\",\n        \"id\":\"{{product-type-id-utensil}}\"\n    },\n    \"name\":{\n        \"de\":\"Premium Copper Kitchen Utensil Set\",\n        \"en\":\"Premium Copper Kitchen Utensil Set\"\n    },\n    \"slug\":{\n        \"de\":\"premium-copper-kitchen-utensil-set\",\n        \"en\":\"premium-copper-kitchen-utensil-set\"\n    },\n    \"metaTitle\":{\n        \"de\":\"Premium Copper Kitchen Utensil Set\",\n        \"en\":\"Premium Copper Kitchen Utensil Set\"\n    },\n    \"masterVariant\":{\n        \"id\":1,\n        \"sku\":\"copper-coated-stainless-steel-cooking-spoons\",\n        \"key\":\"copper-coated-stainless-steel-cooking-spoons\",\n        \"images\":[],\n        \"attributes\":[\n            {\n            \"name\":\"description\",\n            \"value\":\"A set of cooking spoons made from durable stainless steel with a copper coating. Adds a touch of elegance to the kitchen and provides high-quality utensils for cooking.\"\n            }\n        ],\n        \"assets\":[]\n    },\n    \"variants\":[\n        {\n            \"id\":2,\n            \"sku\":\"copper-handled-silicone-cooking-utensils\",\n            \"key\":\"copper-handled-silicone-cooking-utensils\",\n            \"images\":[],\n            \"attributes\":[\n            {\n                \"name\":\"description\",\n                \"value\":\"Cooking utensils with copper-handled design for a stylish and ergonomic grip. Features silicone heads for non-stick cookware and versatility in the kitchen.\"\n            }\n            ],\n            \"assets\":[]\n        }\n    ],\n    \"searchKeywords\":{\n        \n    },\n    \"publish\": true,\n    \"key\":\"premium-copper-kitchen-utensil-set\",\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    }\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/products",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"products"
							],
							"query": [
								{
									"key": "priceCurrency",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCountry",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCustomerGroup",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceChannel",
									"value": "",
									"disabled": true
								},
								{
									"key": "localeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "storeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "05 Create Product - Gourmet Scented Candle Collection",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"product-id\", data.results[0].id); ",
									"    pm.environment.set(\"product-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"product-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"product-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"product-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"product-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"productType\":{\n        \"typeId\":\"product-type\",\n        \"id\":\"{{product-type-id-decor}}\"\n    },\n    \"name\":{\n        \"de\":\"Gourmet Scented Candle Collection\",\n        \"en\":\"Gourmet Scented Candle Collection\"\n    },\n    \"slug\":{\n        \"de\":\"gourmet-scented-candle-collection\",\n        \"en\":\"gourmet-scented-candle-collection\"\n    },\n    \"metaTitle\":{\n        \"de\":\"Gourmet Scented Candle Collection\",\n        \"en\":\"Gourmet Scented Candle Collection\"\n    },\n    \"masterVariant\":{\n        \"id\":1,\n        \"sku\":\"espresso-vanilla-bean-scented-candle\",\n        \"key\":\"espresso-vanilla-bean-scented-candle\",\n        \"images\":[],\n        \"attributes\":[\n            {\n            \"name\":\"description\",\n            \"value\":\"A scented candle with the rich aroma of espresso and the sweet undertones of vanilla bean. Adds a gourmet touch to home ambiance.\"\n            }\n        ],\n        \"assets\":[]\n    },\n    \"variants\":[\n        {\n            \"id\":2,\n            \"sku\":\"lavender-early-grey-infused-candle\",\n            \"key\":\"lavender-early-grey-infused-candle\",\n            \"images\":[],\n            \"attributes\":[\n            {\n                \"name\":\"description\",\n                \"value\":\"Scented candle infused with the calming fragrance of lavender and the subtle notes of Earl Grey tea. Creates a relaxing and aromatic environment.\"\n            }\n            ],\n            \"assets\":[]\n        }\n    ],\n    \"searchKeywords\":{\n        \n    },\n    \"publish\": true,\n    \"key\":\"gourmet-scented-candle-collection\",\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    }\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/products",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"products"
							],
							"query": [
								{
									"key": "priceCurrency",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCountry",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCustomerGroup",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceChannel",
									"value": "",
									"disabled": true
								},
								{
									"key": "localeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "storeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Case 8 - Shipping",
			"item": [
				{
					"name": "01 Create ProductType - Grill",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"product-type-id-grill\", data.results[0].id); ",
									"    pm.environment.set(\"product-type-version-grill\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"product-type-key-grill\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"product-type-version-grill\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"product-type-id-grill\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"product-type-key-grill\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\" : \"Grill\",\n  \"description\" : \"Grill\",\n  \"key\" : \"grill-product-type\",\n  \"attributes\" : [ {\n    \"type\" : {\n      \"name\" : \"text\"\n    },\n    \"isSearchable\" : true,\n    \"inputHint\" : \"SingleLine\",\n    \"name\" : \"brand\",\n    \"label\" : {\n      \"en\" : \"Brand\",\n      \"de\" : \"Brand\"\n    },\n    \"isRequired\" : true,\n    \"sameForAll\" : true\n  },\n  {\n    \"type\" : {\n      \"name\" : \"text\"\n    },\n    \"isSearchable\" : true,\n    \"inputHint\" : \"SingleLine\",\n    \"name\" : \"model\",\n    \"label\" : {\n      \"en\" : \"Model\",\n      \"de\" : \"Model\"\n    },\n    \"isRequired\" : true,\n    \"sameForAll\" : true\n  },\n  {\n    \"type\" : {\n      \"name\" : \"text\"\n    },\n    \"isSearchable\" : true,\n    \"inputHint\" : \"SingleLine\",\n    \"name\" : \"submodel\",\n    \"label\" : {\n      \"en\" : \"Sub Model\",\n      \"de\" : \"Sub Model\"\n    },\n    \"isRequired\" : true,\n    \"attributeConstraint\" : \"Unique\"\n  },\n  {\n    \"type\" : {\n      \"name\" : \"boolean\"\n    },\n    \"isSearchable\" : true,\n    \"inputHint\" : \"SingleLine\",\n    \"name\" : \"heavy_weight\",\n    \"label\" : {\n      \"en\" : \"Heavy weight\",\n      \"de\" : \"Heavy weight\"\n    },\n    \"isRequired\" : true\n  }\n  ]\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/product-types",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"product-types"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Create ProductType"
					},
					"response": []
				},
				{
					"name": "021 Create Product - Grill",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"product-id-grill\", data.results[0].id); ",
									"    pm.environment.set(\"product-version-grill\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"product-key-grill\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"product-version-grill\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"product-id-grill\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"product-key-grill\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\n{\n    \"productType\":{\n        \"typeId\":\"product-type\",\n        \"id\":\"{{product-type-id-grill}}\"\n    },\n    \"name\":{\n        \"de\":\"Weber 502\",\n        \"en\":\"Weber 502\"\n    },\n    \"slug\":{\n        \"de\":\"weber-502\",\n        \"en\":\"weber-502\"\n    },\n    \"metaTitle\":{\n        \"de\":\"weber-502\",\n        \"en\":\"weber-502\"\n    },\n    \"masterVariant\":{\n        \"id\":1,\n        \"sku\":\"weber-502-x21\",\n        \"key\":\"weber-502-x21\",\n        \"attributes\":[\n            {\n            \"name\":\"brand\",\n            \"value\":\"Weber\"\n            },\n            {\n            \"name\":\"model\",\n            \"value\":\"502\"\n            },\n            {\n            \"name\":\"submodel\",\n            \"value\":\"X21\"\n            },\n            {\n            \"name\":\"heavy_weight\",\n            \"value\":false\n            }\n        ],\n        \"prices\":[\n            {\n            \"value\":{\n                \"type\":\"centPrecision\",\n                \"currencyCode\":\"EUR\",\n                \"centAmount\":12900,\n                \"fractionDigits\":2\n            },\n            \"country\":\"DE\"\n            }\n        ],\n        \"images\":[],\n       \"assets\":[]\n    },\n    \"variants\":[\n        {\n            \"id\":2,\n            \"sku\":\"weber-502-x22\",\n            \"key\":\"weber-502-x22\",\n            \"prices\":[\n            {\n                \"value\":{\n                    \"type\":\"centPrecision\",\n                    \"currencyCode\":\"EUR\",\n                    \"centAmount\":14999,\n                    \"fractionDigits\":2\n                },\n                \"country\":\"DE\"\n            }\n            ],\n            \"images\":[],\n        \"attributes\":[\n            {\n            \"name\":\"brand\",\n            \"value\":\"Weber\"\n            },\n            {\n            \"name\":\"model\",\n            \"value\":\"502\"\n            },\n            {\n            \"name\":\"submodel\",\n            \"value\":\"X22\"\n            },\n            {\n            \"name\":\"heavy_weight\",\n            \"value\":false\n            }\n            ],\n            \"assets\":[]\n        },\n                {\n            \"id\":3,\n            \"sku\":\"weber-502-x23\",\n            \"key\":\"weber-502-x23\",\n            \"prices\":[\n            {\n                \"value\":{\n                    \"type\":\"centPrecision\",\n                    \"currencyCode\":\"EUR\",\n                    \"centAmount\":16999,\n                    \"fractionDigits\":2\n                },\n                \"country\":\"DE\"\n            }\n            ],\n            \"images\":[],\n        \"attributes\":[\n            {\n            \"name\":\"brand\",\n            \"value\":\"Weber\"\n            },\n            {\n            \"name\":\"model\",\n            \"value\":\"502\"\n            },\n            {\n            \"name\":\"submodel\",\n            \"value\":\"X23\"\n            },\n            {\n            \"name\":\"heavy_weight\",\n            \"value\":true\n            }\n            ],\n            \"assets\":[]\n        }\n    ],\n      \"searchKeywords\":{\n    },\n    \"publish\": true,\n    \"key\":\"weber-502\",\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    }\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/products",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"products"
							],
							"query": [
								{
									"key": "priceCurrency",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCountry",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCustomerGroup",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceChannel",
									"value": "",
									"disabled": true
								},
								{
									"key": "localeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "storeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "To create a new product, send a representation that is going to become the initial staged representation\nof the new product in the master catalog. If price selection query parameters are provided,\nthe selected prices will be added to the response.\n"
					},
					"response": []
				}
			]
		},
		{
			"name": "Case 9 - Discounts",
			"item": [
				{
					"name": "01 Create Category - Kitchen Gadgets",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"category-id-gadgets\", data.results[0].id); ",
									"    pm.environment.set(\"category-version-gadgets\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"category-key-gadgets\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"category-version-gadgets\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"category-id-gadgets\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"category-key-gadgets\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\" : {\n    \"en\" : \"Kitchen Gadgets\",\n    \"de\" : \"Kitchen Gadgets\"\n  },\n  \"slug\" : {\n    \"en\" : \"kitchen-gadgets\",\n    \"de\" : \"kitchen-gadgets\"\n  },\n  \"key\" :  \"kitchen-gadgets\",\n  \"orderHint\" : \"0.1\"\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/categories",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"categories"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Creating a category produces the CategoryCreated message."
					},
					"response": []
				},
				{
					"name": "011 Create Product - Pancakebot",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"product-id\", data.results[0].id); ",
									"    pm.environment.set(\"product-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"product-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"product-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"product-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"product-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\n{\n    \"productType\":{\n        \"typeId\":\"product-type\",\n        \"id\":\"{{product-type-id-equipment}}\"\n    },\n    \"categories\" : [ {\n      \"typeId\" : \"category\",\n      \"id\" : \"{{category-id-gadgets}}\"\n    } ],\n    \"name\":{\n        \"de\":\"Pancakebot\",\n        \"en\":\"Pancakebot\"\n    },\n    \"slug\":{\n        \"de\":\"pancakebot\",\n        \"en\":\"pancakebot\"\n    },\n    \"metaTitle\":{\n        \"de\":\"Pancakebot\",\n        \"en\":\"Pancakebot\"\n    },\n    \"masterVariant\":{\n        \"id\":1,\n        \"sku\":\"pancakebot\",\n        \"key\":\"pancakebot\",\n        \"images\":[],\n       \"assets\":[],\n     \"prices\": [\n              {\n                \"key\": \"Pancakebot-USD-US\",\n                \"value\": {\n                  \"type\": \"centPrecision\",\n                  \"currencyCode\": \"USD\",\n                  \"centAmount\": 31200,\n                  \"fractionDigits\": 2\n                },\n                \"country\": \"US\"\n              },\n              {\n                \"key\": \"Pancakebot-EUR-DE\",\n                \"value\": {\n                  \"type\": \"centPrecision\",\n                  \"currencyCode\": \"EUR\",\n                  \"centAmount\": 31200,\n                  \"fractionDigits\": 2\n                },\n                \"country\": \"DE\"\n              }\n            ]\n    },\n    \"searchKeywords\":{\n        \n    },\n    \"publish\": true,\n    \"key\":\"pancakebot\",\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    }\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/products",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"products"
							],
							"query": [
								{
									"key": "priceCurrency",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCountry",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCustomerGroup",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceChannel",
									"value": "",
									"disabled": true
								},
								{
									"key": "localeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "storeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "To create a new product, send a representation that is going to become the initial staged representation\nof the new product in the master catalog. If price selection query parameters are provided,\nthe selected prices will be added to the response.\n"
					},
					"response": []
				},
				{
					"name": "012 Create Product - Egg Separator",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"product-id\", data.results[0].id); ",
									"    pm.environment.set(\"product-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"product-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"product-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"product-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"product-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\n{\n    \"productType\":{\n        \"typeId\":\"product-type\",\n        \"id\":\"{{product-type-id-equipment}}\"\n    },\n    \"categories\" : [ {\n      \"typeId\" : \"category\",\n      \"id\" : \"{{category-id-gadgets}}\"\n    } ],\n    \"name\":{\n        \"de\":\"Egg Separator\",\n        \"en\":\"Egg Separator\"\n    },\n    \"slug\":{\n        \"de\":\"egg-separator\",\n        \"en\":\"egg-separator\"\n    },\n    \"metaTitle\":{\n        \"de\":\"Egg Separator\",\n        \"en\":\"Egg Separator\"\n    },\n    \"masterVariant\":{\n        \"id\":1,\n        \"sku\":\"egg-separator\",\n        \"key\":\"egg-separator\",\n        \"images\":[],\n       \"assets\":[],\n     \"prices\": [\n              {\n                \"key\": \"egg-separator-USD-US\",\n                \"value\": {\n                  \"type\": \"centPrecision\",\n                  \"currencyCode\": \"USD\",\n                  \"centAmount\": 800,\n                  \"fractionDigits\": 2\n                },\n                \"country\": \"US\"\n              },\n              {\n                \"key\": \"egg-separator-EUR-DE\",\n                \"value\": {\n                  \"type\": \"centPrecision\",\n                  \"currencyCode\": \"EUR\",\n                  \"centAmount\": 800,\n                  \"fractionDigits\": 2\n                },\n                \"country\": \"DE\"\n              }\n            ]\n    },\n    \"searchKeywords\":{\n        \n    },\n    \"publish\": true,\n    \"key\":\"egg-separator\",\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    }\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/products",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"products"
							],
							"query": [
								{
									"key": "priceCurrency",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCountry",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCustomerGroup",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceChannel",
									"value": "",
									"disabled": true
								},
								{
									"key": "localeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "storeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "To create a new product, send a representation that is going to become the initial staged representation\nof the new product in the master catalog. If price selection query parameters are provided,\nthe selected prices will be added to the response.\n"
					},
					"response": []
				},
				{
					"name": "013 Create Product - Pocket Sized Nutrition Scale",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"product-id\", data.results[0].id); ",
									"    pm.environment.set(\"product-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"product-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"product-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"product-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"product-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\n{\n    \"productType\":{\n        \"typeId\":\"product-type\",\n        \"id\":\"{{product-type-id-equipment}}\"\n    },\n    \"categories\" : [ {\n      \"typeId\" : \"category\",\n      \"id\" : \"{{category-id-gadgets}}\"\n    } ],\n    \"name\":{\n        \"de\":\"Pocket Sized Nutrition Scale\",\n        \"en\":\"Pocket Sized Nutrition Scale\"\n    },\n    \"slug\":{\n        \"de\":\"pocket-sized-nutrition-scale\",\n        \"en\":\"pocket-sized-nutrition-scale\"\n    },\n    \"metaTitle\":{\n        \"de\":\"Pocket Sized Nutrition Scale\",\n        \"en\":\"Pocket Sized Nutrition Scale\"\n    },\n    \"masterVariant\":{\n        \"id\":1,\n        \"sku\":\"pocket-sized-nutrition-scale\",\n        \"key\":\"pocket-sized-nutrition-scale\",\n        \"images\":[],\n       \"assets\":[],\n     \"prices\": [\n              {\n                \"key\": \"pocket-sized-nutrition-scale-USD-US\",\n                \"value\": {\n                  \"type\": \"centPrecision\",\n                  \"currencyCode\": \"USD\",\n                  \"centAmount\": 1000,\n                  \"fractionDigits\": 2\n                },\n                \"country\": \"US\"\n              },\n              {\n                \"key\": \"pocket-sized-nutrition-scale-EUR-DE\",\n                \"value\": {\n                  \"type\": \"centPrecision\",\n                  \"currencyCode\": \"EUR\",\n                  \"centAmount\": 1000,\n                  \"fractionDigits\": 2\n                },\n                \"country\": \"DE\"\n              }\n            ]\n    },\n    \"searchKeywords\":{\n        \n    },\n    \"publish\": true,\n    \"key\":\"pocket-sized-nutrition-scale\",\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    }\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/products",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"products"
							],
							"query": [
								{
									"key": "priceCurrency",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCountry",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCustomerGroup",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceChannel",
									"value": "",
									"disabled": true
								},
								{
									"key": "localeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "storeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "To create a new product, send a representation that is going to become the initial staged representation\nof the new product in the master catalog. If price selection query parameters are provided,\nthe selected prices will be added to the response.\n"
					},
					"response": []
				},
				{
					"name": "014 Create Product - Accusharp Knife Sharpener",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"product-id\", data.results[0].id); ",
									"    pm.environment.set(\"product-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"product-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"product-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"product-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"product-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\n{\n    \"productType\":{\n        \"typeId\":\"product-type\",\n        \"id\":\"{{product-type-id-equipment}}\"\n    },\n    \"categories\" : [ {\n      \"typeId\" : \"category\",\n      \"id\" : \"{{category-id-gadgets}}\"\n    } ],\n    \"name\":{\n        \"de\":\"Accusharp Knife Sharpener\",\n        \"en\":\"Accusharp Knife Sharpener\"\n    },\n    \"slug\":{\n        \"de\":\"accusharp-knife-sharpener\",\n        \"en\":\"accusharp-knife-sharpener\"\n    },\n    \"metaTitle\":{\n        \"de\":\"Accusharp Knife Sharpener\",\n        \"en\":\"Accusharp Knife Sharpener\"\n    },\n    \"masterVariant\":{\n        \"id\":1,\n        \"sku\":\"accusharp-knife-sharpener\",\n        \"key\":\"accusharp-knife-sharpener\",\n        \"images\":[],\n       \"assets\":[]\n    },\n    \"searchKeywords\":{\n        \n    },\n    \"publish\": true,\n    \"key\":\"accusharp-knife-sharpener\",\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    }\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/products",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"products"
							],
							"query": [
								{
									"key": "priceCurrency",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCountry",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCustomerGroup",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceChannel",
									"value": "",
									"disabled": true
								},
								{
									"key": "localeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "storeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "To create a new product, send a representation that is going to become the initial staged representation\nof the new product in the master catalog. If price selection query parameters are provided,\nthe selected prices will be added to the response.\n"
					},
					"response": []
				},
				{
					"name": "015 Create Product - Garlic Press",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"product-id\", data.results[0].id); ",
									"    pm.environment.set(\"product-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"product-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"product-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"product-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"product-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\n{\n    \"productType\":{\n        \"typeId\":\"product-type\",\n        \"id\":\"{{product-type-id-equipment}}\"\n    },\n    \"categories\" : [ {\n      \"typeId\" : \"category\",\n      \"id\" : \"{{category-id-gadgets}}\"\n    } ],\n    \"name\":{\n        \"de\":\"Garlic Press\",\n        \"en\":\"Garlic Press\"\n    },\n    \"slug\":{\n        \"de\":\"garlic-press\",\n        \"en\":\"garlic-press\"\n    },\n    \"metaTitle\":{\n        \"de\":\"Garlic Press\",\n        \"en\":\"Garlic Press\"\n    },\n    \"masterVariant\":{\n        \"id\":1,\n        \"sku\":\"garlic-press\",\n        \"key\":\"garlic-press\",\n        \"images\":[],\n       \"assets\":[],\n     \"prices\": [\n              {\n                \"key\": \"garlic-press-USD-US\",\n                \"value\": {\n                  \"type\": \"centPrecision\",\n                  \"currencyCode\": \"USD\",\n                  \"centAmount\": 750,\n                  \"fractionDigits\": 2\n                },\n                \"country\": \"US\"\n              },\n              {\n                \"key\": \"garlic-press-EUR-DE\",\n                \"value\": {\n                  \"type\": \"centPrecision\",\n                  \"currencyCode\": \"EUR\",\n                  \"centAmount\": 750,\n                  \"fractionDigits\": 2\n                },\n                \"country\": \"DE\"\n              }\n            ]\n    },\n    \"searchKeywords\":{\n        \n    },\n    \"publish\": true,\n    \"key\":\"garlic-press\",\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    }\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/products",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"products"
							],
							"query": [
								{
									"key": "priceCurrency",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCountry",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCustomerGroup",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceChannel",
									"value": "",
									"disabled": true
								},
								{
									"key": "localeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "storeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "To create a new product, send a representation that is going to become the initial staged representation\nof the new product in the master catalog. If price selection query parameters are provided,\nthe selected prices will be added to the response.\n"
					},
					"response": []
				},
				{
					"name": "016 Create Product - Edible Ink Cartridge",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"product-id\", data.results[0].id); ",
									"    pm.environment.set(\"product-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"product-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"product-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"product-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"product-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\n{\n    \"productType\":{\n        \"typeId\":\"product-type\",\n        \"id\":\"{{product-type-id-equipment}}\"\n    },\n    \"categories\" : [ {\n      \"typeId\" : \"category\",\n      \"id\" : \"{{category-id-gadgets}}\"\n    } ],\n    \"name\":{\n        \"de\":\"Edible Ink Cartridge\",\n        \"en\":\"Edible Ink Cartridge\"\n    },\n    \"slug\":{\n        \"de\":\"edible-ink-cartridge\",\n        \"en\":\"edible-ink-cartridge\"\n    },\n    \"metaTitle\":{\n        \"de\":\"Edible Ink Cartridge\",\n        \"en\":\"Edible Ink Cartridge\"\n    },\n    \"masterVariant\":{\n        \"id\":1,\n        \"sku\":\"edible-ink-cartridge\",\n        \"key\":\"edible-ink-cartridge\",\n        \"images\":[],\n       \"assets\":[],\n     \"prices\": [\n              {\n                \"key\": \"edible-ink-cartridge-USD-US\",\n                \"value\": {\n                  \"type\": \"centPrecision\",\n                  \"currencyCode\": \"USD\",\n                  \"centAmount\": 3750,\n                  \"fractionDigits\": 2\n                },\n                \"country\": \"US\"\n              },\n              {\n                \"key\": \"edible-ink-cartridge-EUR-DE\",\n                \"value\": {\n                  \"type\": \"centPrecision\",\n                  \"currencyCode\": \"EUR\",\n                  \"centAmount\": 3750,\n                  \"fractionDigits\": 2\n                },\n                \"country\": \"DE\"\n              }\n            ]\n    },\n    \"searchKeywords\":{\n        \n    },\n    \"publish\": true,\n    \"key\":\"edible-ink-cartridge\",\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    }\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/products",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"products"
							],
							"query": [
								{
									"key": "priceCurrency",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCountry",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCustomerGroup",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceChannel",
									"value": "",
									"disabled": true
								},
								{
									"key": "localeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "storeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "To create a new product, send a representation that is going to become the initial staged representation\nof the new product in the master catalog. If price selection query parameters are provided,\nthe selected prices will be added to the response.\n"
					},
					"response": []
				},
				{
					"name": "02 Create Category - Chocolate Heaven",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"category-id-heaven\", data.results[0].id); ",
									"    pm.environment.set(\"category-version-heaven\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"category-key-heaven\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"category-version-heaven\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"category-id-heaven\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"category-key-heaven\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\" : {\n    \"en\" : \"Chocolate Heaven\",\n    \"de\" : \"Chocolate Heaven\"\n  },\n  \"key\" :  \"chocolate-heaven\",\n  \"slug\" : {\n    \"en\" : \"chocolate-heaven\",\n    \"de\" : \"chocolate-heaven\"\n  },\n  \"orderHint\" : \"0.2\"\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/categories",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"categories"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Creating a category produces the CategoryCreated message."
					},
					"response": []
				},
				{
					"name": "03 Create ProductType - Designer Chocolate",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"product-type-id-chocolate\", data.results[0].id); ",
									"    pm.environment.set(\"product-type-version-chocolate\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"product-type-key-chocolate\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"product-type-version-chocolate\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"product-type-id-chocolate\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"product-type-key-chocolate\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\" : \"Designer Chocolate\",\n  \"description\" : \"Designer Chocolate\",\n  \"key\" : \"designer-chocolate-product-type\",\n  \"attributes\" : [ {\n    \"type\" : {\n      \"name\" : \"boolean\"\n    },\n    \"isSearchable\" : true,\n    \"inputHint\" : \"SingleLine\",\n    \"name\" : \"limited_edition\",\n    \"label\" : {\n      \"en\" : \"Limited Edition\",\n      \"de\" : \"Limited Edition\"\n    },\n    \"isRequired\" : true\n  } ]\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/product-types",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"product-types"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Create ProductType"
					},
					"response": []
				},
				{
					"name": "031 Create Product - Chocolate scrumptious",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"product-id\", data.results[0].id); ",
									"    pm.environment.set(\"product-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"product-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"product-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"product-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"product-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\n{\n    \"productType\":{\n        \"typeId\":\"product-type\",\n        \"id\":\"{{product-type-id-chocolate}}\"\n    },\n    \"categories\" : [ {\n      \"typeId\" : \"category\",\n      \"id\" : \"{{category-id-heaven}}\"\n    } ],\n    \"name\":{\n        \"de\":\"Chocolate scrumptious\",\n        \"en\":\"Chocolate scrumptious\"\n    },\n    \"slug\":{\n        \"de\":\"chocolate-scrumptious\",\n        \"en\":\"chocolate-scrumptious\"\n    },\n    \"metaTitle\":{\n        \"de\":\"Chocolate scrumptious\",\n        \"en\":\"Chocolate scrumptious\"\n    },\n    \"masterVariant\":{\n        \"id\":1,\n        \"sku\":\"chocolate-scrumptious\",\n        \"key\":\"chocolate-scrumptious\",\n        \"images\":[],\n       \"assets\":[],\n        \"attributes\":[\n            {\n            \"name\":\"limited_edition\",\n            \"value\":true\n            }\n        ],\n     \"prices\": [\n              {\n                \"key\": \"chocolate-scrumptious-USD-US\",\n                \"value\": {\n                  \"type\": \"centPrecision\",\n                  \"currencyCode\": \"USD\",\n                  \"centAmount\": 3750,\n                  \"fractionDigits\": 2\n                },\n                \"country\": \"US\"\n              },\n              {\n                \"key\": \"chocolate-scrumptious-EUR-DE\",\n                \"value\": {\n                  \"type\": \"centPrecision\",\n                  \"currencyCode\": \"EUR\",\n                  \"centAmount\": 3750,\n                  \"fractionDigits\": 2\n                },\n                \"country\": \"DE\"\n              }\n            ]\n    },\n    \"searchKeywords\":{\n        \n    },\n    \"publish\": true,\n    \"key\":\"chocolate-scrumptious\",\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    }\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/products",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"products"
							],
							"query": [
								{
									"key": "priceCurrency",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCountry",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCustomerGroup",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceChannel",
									"value": "",
									"disabled": true
								},
								{
									"key": "localeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "storeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "To create a new product, send a representation that is going to become the initial staged representation\nof the new product in the master catalog. If price selection query parameters are provided,\nthe selected prices will be added to the response.\n"
					},
					"response": []
				},
				{
					"name": "032 Create Product - Chocolate elegant",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"product-id\", data.results[0].id); ",
									"    pm.environment.set(\"product-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"product-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"product-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"product-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"product-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\n{\n    \"productType\":{\n        \"typeId\":\"product-type\",\n        \"id\":\"{{product-type-id-chocolate}}\"\n    },\n    \"categories\" : [ {\n      \"typeId\" : \"category\",\n      \"id\" : \"{{category-id-heaven}}\"\n    } ],\n    \"name\":{\n        \"de\":\"Chocolate elegant\",\n        \"en\":\"Chocolate elegant\"\n    },\n    \"slug\":{\n        \"de\":\"chocolate-elegant\",\n        \"en\":\"chocolate-elegant\"\n    },\n    \"metaTitle\":{\n        \"de\":\"Chocolate elegant\",\n        \"en\":\"Chocolate elegant\"\n    },\n    \"masterVariant\":{\n        \"id\":1,\n        \"sku\":\"chocolate-elegant\",\n        \"key\":\"chocolate-elegant\",\n        \"images\":[],\n       \"assets\":[],\n        \"attributes\":[\n            {\n            \"name\":\"limited_edition\",\n            \"value\":false\n            }\n        ],\n     \"prices\": [\n              {\n                \"key\": \"chocolate-elegant-USD-US\",\n                \"value\": {\n                  \"type\": \"centPrecision\",\n                  \"currencyCode\": \"USD\",\n                  \"centAmount\": 2750,\n                  \"fractionDigits\": 2\n                },\n                \"country\": \"US\"\n              },\n              {\n                \"key\": \"chocolate-elegant-EUR-DE\",\n                \"value\": {\n                  \"type\": \"centPrecision\",\n                  \"currencyCode\": \"EUR\",\n                  \"centAmount\": 2750,\n                  \"fractionDigits\": 2\n                },\n                \"country\": \"DE\"\n              }\n            ]\n    },\n    \"searchKeywords\":{\n        \n    },\n    \"publish\": true,\n    \"key\":\"chocolate-elegant\",\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    }\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/products",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"products"
							],
							"query": [
								{
									"key": "priceCurrency",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCountry",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCustomerGroup",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceChannel",
									"value": "",
									"disabled": true
								},
								{
									"key": "localeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "storeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "To create a new product, send a representation that is going to become the initial staged representation\nof the new product in the master catalog. If price selection query parameters are provided,\nthe selected prices will be added to the response.\n"
					},
					"response": []
				},
				{
					"name": "033 Create Product - Chocolate marvel",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"product-id\", data.results[0].id); ",
									"    pm.environment.set(\"product-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"product-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"product-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"product-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"product-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\n{\n    \"productType\":{\n        \"typeId\":\"product-type\",\n        \"id\":\"{{product-type-id-chocolate}}\"\n    },\n    \"categories\" : [ {\n      \"typeId\" : \"category\",\n      \"id\" : \"{{category-id-heaven}}\"\n    } ],\n    \"name\":{\n        \"de\":\"Chocolate marvel\",\n        \"en\":\"Chocolate marvel\"\n    },\n    \"slug\":{\n        \"de\":\"chocolate-marvel\",\n        \"en\":\"chocolate-marvel\"\n    },\n    \"metaTitle\":{\n        \"de\":\"Chocolate marvel\",\n        \"en\":\"Chocolate marvel\"\n    },\n    \"masterVariant\":{\n        \"id\":1,\n        \"sku\":\"chocolate-marvel\",\n        \"key\":\"chocolate-marvel\",\n        \"images\":[],\n       \"assets\":[],\n        \"attributes\":[\n            {\n            \"name\":\"limited_edition\",\n            \"value\":false\n            }\n        ],\n     \"prices\": [\n              {\n                \"key\": \"chocolate-marvel-USD-US\",\n                \"value\": {\n                  \"type\": \"centPrecision\",\n                  \"currencyCode\": \"USD\",\n                  \"centAmount\": 2750,\n                  \"fractionDigits\": 2\n                },\n                \"country\": \"US\"\n              },\n              {\n                \"key\": \"chocolate-marvel-EUR-DE\",\n                \"value\": {\n                  \"type\": \"centPrecision\",\n                  \"currencyCode\": \"EUR\",\n                  \"centAmount\": 2750,\n                  \"fractionDigits\": 2\n                },\n                \"country\": \"DE\"\n              }\n            ]\n    },\n    \"searchKeywords\":{\n        \n    },\n    \"publish\": true,\n    \"key\":\"chocolate-marvel\",\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    }\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/products",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"products"
							],
							"query": [
								{
									"key": "priceCurrency",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCountry",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCustomerGroup",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceChannel",
									"value": "",
									"disabled": true
								},
								{
									"key": "localeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "storeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "To create a new product, send a representation that is going to become the initial staged representation\nof the new product in the master catalog. If price selection query parameters are provided,\nthe selected prices will be added to the response.\n"
					},
					"response": []
				},
				{
					"name": "034 Create Product - Chocolate exquisite",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"product-id\", data.results[0].id); ",
									"    pm.environment.set(\"product-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"product-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"product-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"product-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"product-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\n{\n    \"productType\":{\n        \"typeId\":\"product-type\",\n        \"id\":\"{{product-type-id-chocolate}}\"\n    },\n    \"categories\" : [ {\n      \"typeId\" : \"category\",\n      \"id\" : \"{{category-id-heaven}}\"\n    } ],\n    \"name\":{\n        \"de\":\"Chocolate exquisite\",\n        \"en\":\"Chocolate exquisite\"\n    },\n    \"slug\":{\n        \"de\":\"chocolate-exquisite\",\n        \"en\":\"chocolate-exquisite\"\n    },\n    \"metaTitle\":{\n        \"de\":\"Chocolate exquisite\",\n        \"en\":\"Chocolate exquisite\"\n    },\n    \"masterVariant\":{\n        \"id\":1,\n        \"sku\":\"chocolate-exquisite\",\n        \"key\":\"chocolate-exquisite\",\n        \"images\":[],\n       \"assets\":[],\n        \"attributes\":[\n            {\n            \"name\":\"limited_edition\",\n            \"value\":true\n            }\n        ],\n     \"prices\": [\n              {\n                \"key\": \"chocolate-exquisite-USD-US\",\n                \"value\": {\n                  \"type\": \"centPrecision\",\n                  \"currencyCode\": \"USD\",\n                  \"centAmount\": 3750,\n                  \"fractionDigits\": 2\n                },\n                \"country\": \"US\"\n              },\n              {\n                \"key\": \"chocolate-exquisite-EUR-DE\",\n                \"value\": {\n                  \"type\": \"centPrecision\",\n                  \"currencyCode\": \"EUR\",\n                  \"centAmount\": 3750,\n                  \"fractionDigits\": 2\n                },\n                \"country\": \"DE\"\n              }\n            ]\n    },\n    \"searchKeywords\":{\n        \n    },\n    \"publish\": true,\n    \"key\":\"chocolate-exquisite\",\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    }\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/products",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"products"
							],
							"query": [
								{
									"key": "priceCurrency",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCountry",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCustomerGroup",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceChannel",
									"value": "",
									"disabled": true
								},
								{
									"key": "localeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "storeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "To create a new product, send a representation that is going to become the initial staged representation\nof the new product in the master catalog. If price selection query parameters are provided,\nthe selected prices will be added to the response.\n"
					},
					"response": []
				}
			]
		},
		{
			"name": "Misc Demos",
			"item": [
				{
					"name": "Create Custom Type",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"type-id\", data.results[0].id); ",
									"    pm.environment.set(\"type-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"type-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"type-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"type-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"type-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{  \n    \"key\": \"customer-info\",\n    \"name\": {\n        \"de\": \"Customer Info\",\n        \"en\": \"Customer Info\"\n    },\n    \"resourceTypeIds\": [\n        \"customer\"\n    ],\n    \"fieldDefinitions\": [\n    {\n        \"name\": \"shoesize\",\n        \"label\": {\n            \"de\": \"Shoe Size\",\n            \"en\": \"Shoe Size\"\n        },\n        \"required\": false,\n        \"type\": {\n        \"name\": \"Number\"\n        },\n        \"inputHint\": \"SingleLine\"\n    },\n    {\n        \"name\": \"shirtsize\",\n        \"label\": {\n        \"de\": \"Shirt Size\",\n        \"en\": \"Shirt Size\"\n        },\n        \"required\": false,\n        \"type\": {\n        \"name\": \"Number\"\n        },\n        \"inputHint\": \"SingleLine\"\n    }\n    ]\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/types",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"types"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Create Type"
					},
					"response": []
				},
				{
					"name": "Create CustomObject - External Prices 01",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"custom-object-id\", data.results[0].id); ",
									"    pm.environment.set(\"custom-object-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"custom-object-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"custom-object-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"custom-object-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"custom-object-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"container\":\"ExternalPrices\",\n   \"key\":\"cust0001prod0001\",\n   \"value\":[{\n      \"VariantID\":\"1\",\n      \"MinQuantity\":\"5\",\n      \"Price\":\"15.99 USD\"\n   },\n   {\n      \"VariantID\":\"1\",\n      \"MinQuantity\":\"10\",\n      \"Price\":\"14.99 USD\"\n   },\n   {\n      \"VariantID\":\"1\",\n      \"MinQuantity\":\"15\",\n      \"Price\":\"13.99 USD\"\n   }\n   ]\n\n}\n"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/custom-objects",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"custom-objects"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Creates a new custom object or updates an existing custom object.\nIf an object with the given container/key exists,\nthe object will be replaced with the new value and the version is incremented.\nIf the request contains a version and an object with the given container/key exists then the version\nmust match the version of the existing object. Concurrent updates for the same custom object still can result\nin a Conflict (409) even if the version is not provided.\nFields with null values will not be saved.\n"
					},
					"response": []
				},
				{
					"name": "Create CustomObject - External Prices 02",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"custom-object-id\", data.results[0].id); ",
									"    pm.environment.set(\"custom-object-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"custom-object-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"custom-object-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"custom-object-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"custom-object-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"container\":\"ExternalPrices\",\n   \"key\":\"cust0002prod0001\",\n   \"value\":[{\n      \"VariantID\":\"1\",\n      \"MinQuantity\":\"5\",\n      \"Price\":\"16.99 USD\"\n   },\n   {\n      \"VariantID\":\"1\",\n      \"MinQuantity\":\"10\",\n      \"Price\":\"15.99 USD\"\n   },\n   {\n      \"VariantID\":\"1\",\n      \"MinQuantity\":\"15\",\n      \"Price\":\"14.99 USD\"\n   }\n   ]\n\n}\n"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/custom-objects",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"custom-objects"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Creates a new custom object or updates an existing custom object.\nIf an object with the given container/key exists,\nthe object will be replaced with the new value and the version is incremented.\nIf the request contains a version and an object with the given container/key exists then the version\nmust match the version of the existing object. Concurrent updates for the same custom object still can result\nin a Conflict (409) even if the version is not provided.\nFields with null values will not be saved.\n"
					},
					"response": []
				},
				{
					"name": "Query Custom Objects for ExternalPrices",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"custom-object-id\", data.results[0].id); ",
									"    pm.environment.set(\"custom-object-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"custom-object-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"custom-object-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"custom-object-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"custom-object-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/custom-objects/ExternalPrices",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"custom-objects",
								"ExternalPrices"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								},
								{
									"key": "sort",
									"value": "",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "",
									"disabled": true
								},
								{
									"key": "offset",
									"value": "",
									"disabled": true
								},
								{
									"key": "withTotal",
									"value": "",
									"disabled": true
								},
								{
									"key": "where",
									"value": "",
									"disabled": true
								},
								{
									"key": "/^var[.][a-zA-Z0-9]+$/",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "The query endpoint allows to retrieve custom objects in a specific container or all custom objects.\nFor performance reasons, it is highly advisable to query only for custom objects in a container by using\nthe container field in the where predicate.\n"
					},
					"response": []
				}
			]
		},
		{
			"name": "Obtain access token",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"var data = JSON.parse(responseBody);",
							"if(data.access_token){",
							"    pm.environment.set(\"ctp_access_token\", data.access_token);",
							"}",
							"if (data.scope) {",
							"    parts = data.scope.split(\" \");",
							"    parts = parts.filter(scope => scope.includes(\":\")).map(scope => scope.split(\":\"))",
							"    if (parts.length > 0) {",
							"        scopeParts = parts[0];",
							"        pm.environment.set(\"project-key\", scopeParts[1]);",
							"        parts = parts.filter(scope => scope.length >= 3)",
							"        if (parts.length > 0) {",
							"            scopeParts = parts[0];",
							"            pm.environment.set(\"store-key\", scopeParts[2]);",
							"        }",
							"    }",
							"}"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{client_id}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{client_secret}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{auth_url}}/oauth/token?grant_type=client_credentials",
					"host": [
						"{{auth_url}}"
					],
					"path": [
						"oauth",
						"token"
					],
					"query": [
						{
							"key": "grant_type",
							"value": "client_credentials"
						}
					]
				},
				"description": "Use this request to obtain an access token for your commercetools platform project via Client Credentials Flow. As a prerequisite you must have filled out environment variables in Postman for projectKey, client_id and client_secret to use this."
			},
			"response": []
		},
		{
			"name": "Get TaxCategory",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
							"var data = JSON.parse(responseBody);",
							"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
							"    pm.environment.set(\"tax-category-id\", data.results[0].id); ",
							"    pm.environment.set(\"tax-category-version\", data.results[0].version);",
							"}",
							"if(data.results && data.results[0] && data.results[0].key){",
							"    pm.environment.set(\"tax-category-key\", data.results[0].key); ",
							"}",
							"if(data.version){",
							"    pm.environment.set(\"tax-category-version\", data.version);",
							"}",
							"if(data.id){",
							"    pm.environment.set(\"tax-category-id\", data.id); ",
							"}",
							"if(data.key){",
							"    pm.environment.set(\"tax-category-key\", data.key);",
							"}",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "accessToken",
							"value": "{{ctp_access_token}}",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						},
						{
							"key": "tokenType",
							"value": "Bearer",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/{{project-key}}/tax-categories",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{project-key}}",
						"tax-categories"
					],
					"query": [
						{
							"key": "expand",
							"value": "",
							"disabled": true
						}
					]
				},
				"description": "Get TaxCategory by key"
			},
			"response": []
		}
	]
}