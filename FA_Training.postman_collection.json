{
	"info": {
		"_postman_id": "66e11f61-5a20-4695-9880-dca8e82a8727",
		"name": "FA_Training",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "11897687"
	},
	"item": [
		{
			"name": "00 Authorization",
			"item": [
				{
					"name": "01 Obtain Access Token",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"auth-host\", pm.environment.get(\"auth_url\"));",
									"pm.environment.set(\"api-host\", pm.environment.get(\"host\"));",
									"pm.environment.set(\"project-key\", pm.environment.get(\"project-key\"));",
									"pm.environment.set(\"client-id\", pm.environment.get(\"client_id\"));",
									"pm.environment.set(\"client-secret\", pm.environment.get(\"client_secret\"));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"const res = pm.response.json();",
									"",
									"pm.environment.set(\"ctp-access-token\", res.access_token);",
									"pm.environment.set(\"ctp-scopes\", res.scope);",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{client-secret}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{client-id}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{auth-host}}/oauth/token?grant_type=client_credentials",
							"host": [
								"{{auth-host}}"
							],
							"path": [
								"oauth",
								"token"
							],
							"query": [
								{
									"key": "grant_type",
									"value": "client_credentials"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "02 Get TaxCategory",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"const res = pm.response.json();",
									"",
									"pm.environment.set(\"tax-category-id\", res.results[0].id);",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-host}}/{{project-key}}/tax-categories?limit=1",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"{{project-key}}",
								"tax-categories"
							],
							"query": [
								{
									"key": "limit",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "01 Case 1 - Product Modeling Basic",
			"item": [
				{
					"name": "01 Create ProductType - Online Offerings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"const res = pm.response.json();",
									"",
									"pm.environment.set(\"product-type-id-online-classes\", res.id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Online Offerings\",\n  \"description\": \"Online Offerings\",\n  \"key\": \"online-offerings-product-type\",\n  \"attributes\": [\n    {\n      \"type\": {\n        \"name\": \"text\"\n      },\n      \"isSearchable\": true,\n      \"inputHint\": \"SingleLine\",\n      \"name\": \"name\",\n      \"label\": {\n        \"en\": \"Name of offering\",\n        \"de\": \"Name of offering\"\n      },\n      \"isRequired\": true,\n      \"attributeConstraint\": \"Unique\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/{{project-key}}/product-types",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"{{project-key}}",
								"product-types"
							]
						}
					},
					"response": []
				},
				{
					"name": "02 Create Product - Online Classes -5 variants-",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"const res = pm.response.json();",
									"",
									"pm.environment.set(\"product-id\", res.id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"productType\": {\n    \"typeId\": \"product-type\",\n    \"id\": \"{{product-type-id-online-classes}}\"\n  },\n  \"name\": {\n    \"de\": \"Online Classes\",\n    \"en\": \"Online Classes\"\n  },\n  \"slug\": {\n    \"de\": \"online-classes\",\n    \"en\": \"online-classes\"\n  },\n  \"metaTitle\": {\n    \"de\": \"online-classes\",\n    \"en\": \"online-classes\"\n  },\n  \"masterVariant\": {\n    \"id\": 1,\n    \"sku\": \"french-cooking-class\",\n    \"key\": \"french-cooking-class\",\n    \"prices\": [\n      {\n        \"value\": {\n          \"type\": \"centPrecision\",\n          \"currencyCode\": \"EUR\",\n          \"centAmount\": 3999,\n          \"fractionDigits\": 2\n        },\n        \"country\": \"DE\"\n      }\n    ],\n    \"images\": [],\n    \"attributes\": [\n      {\n        \"name\": \"name\",\n        \"value\": \"Online French Cooking Class\"\n      }\n    ],\n    \"assets\": []\n  },\n  \"variants\": [\n    {\n      \"id\": 2,\n      \"sku\": \"italian-cooking-class\",\n      \"key\": \"italian-cooking-class\",\n      \"prices\": [\n        {\n          \"value\": {\n            \"type\": \"centPrecision\",\n            \"currencyCode\": \"EUR\",\n            \"centAmount\": 3999,\n            \"fractionDigits\": 2\n          },\n          \"country\": \"DE\"\n        }\n      ],\n      \"images\": [],\n      \"attributes\": [\n        {\n          \"name\": \"name\",\n          \"value\": \"Online Italian Cooking Class\"\n        }\n      ],\n      \"assets\": []\n    },\n    {\n      \"id\": 3,\n      \"sku\": \"middle-eastern-cooking-class\",\n      \"key\": \"middle-eastern-cooking-class\",\n      \"prices\": [\n        {\n          \"value\": {\n            \"type\": \"centPrecision\",\n            \"currencyCode\": \"EUR\",\n            \"centAmount\": 3999,\n            \"fractionDigits\": 2\n          },\n          \"country\": \"DE\"\n        }\n      ],\n      \"images\": [],\n      \"attributes\": [\n        {\n          \"name\": \"name\",\n          \"value\": \"Middle Eastern Cooking Class\"\n        }\n      ],\n      \"assets\": []\n    },\n    {\n      \"id\": 4,\n      \"sku\": \"Soup cooking class\",\n      \"key\": \"Soup cooking class\",\n      \"prices\": [\n        {\n          \"value\": {\n            \"type\": \"centPrecision\",\n            \"currencyCode\": \"EUR\",\n            \"centAmount\": 2599,\n            \"fractionDigits\": 2\n          },\n          \"country\": \"DE\"\n        }\n      ],\n      \"images\": [],\n      \"attributes\": [\n        {\n          \"name\": \"name\",\n          \"value\": \"Online Soup Cooking Class\"\n        }\n      ],\n      \"assets\": []\n    },\n    {\n      \"id\": 5,\n      \"sku\": \"grilling-class\",\n      \"key\": \"grilling-class\",\n      \"prices\": [\n        {\n          \"value\": {\n            \"type\": \"centPrecision\",\n            \"currencyCode\": \"EUR\",\n            \"centAmount\": 2299,\n            \"fractionDigits\": 2\n          },\n          \"country\": \"DE\"\n        }\n      ],\n      \"images\": [],\n      \"attributes\": [\n        {\n          \"name\": \"name\",\n          \"value\": \"Online Grilling Class\"\n        }\n      ],\n      \"assets\": []\n    }\n  ],\n  \"searchKeywords\": {},\n  \"publish\": true,\n  \"key\": \"online-classes\",\n  \"taxCategory\": {\n    \"typeId\": \"tax-category\",\n    \"id\": \"{{tax-category-id}}\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/{{project-key}}/products",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"{{project-key}}",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "03 Create Product - French Cooking Class",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"const res = pm.response.json();",
									"",
									"pm.environment.set(\"product-id-french-class\", res.id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"productType\": {\n    \"typeId\": \"product-type\",\n    \"id\": \"{{product-type-id-online-classes}}\"\n  },\n  \"name\": {\n    \"de\": \"French Cooking Class\",\n    \"en\": \"French Cooking Class\"\n  },\n  \"slug\": {\n    \"de\": \"french-cooking-online-class\",\n    \"en\": \"french-cooking-online-class\"\n  },\n  \"metaTitle\": {\n    \"de\": \"french-cooking-online-class\",\n    \"en\": \"french-cooking-online-class\"\n  },\n  \"masterVariant\": {\n    \"id\": 1,\n    \"sku\": \"french-cooking-online-class\",\n    \"key\": \"french-cooking-online-class\",\n    \"prices\": [\n      {\n        \"value\": {\n          \"type\": \"centPrecision\",\n          \"currencyCode\": \"EUR\",\n          \"centAmount\": 3999,\n          \"fractionDigits\": 2\n        },\n        \"country\": \"DE\"\n      }\n    ],\n    \"images\": [],\n    \"attributes\": [\n      {\n        \"name\": \"name\",\n        \"value\": \"French cooking class\"\n      }\n    ],\n    \"assets\": []\n  },\n  \"searchKeywords\": {},\n  \"publish\": true,\n  \"key\": \"french-cooking-online-class\",\n  \"taxCategory\": {\n    \"typeId\": \"tax-category\",\n    \"id\": \"{{tax-category-id}}\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/{{project-key}}/products",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"{{project-key}}",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "04 Create Product - Italian Cooking Class",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"const res = pm.response.json();",
									"",
									"pm.environment.set(\"product-id-italian-class\", res.id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"productType\": {\n    \"typeId\": \"product-type\",\n    \"id\": \"{{product-type-id-online-classes}}\"\n  },\n  \"name\": {\n    \"de\": \"Italian Cooking Class\",\n    \"en\": \"Italian Cooking Class\"\n  },\n  \"slug\": {\n    \"de\": \"italian-cooking-online-class\",\n    \"en\": \"italian-cooking-online-class\"\n  },\n  \"metaTitle\": {\n    \"de\": \"italian-cooking-online-class\",\n    \"en\": \"italian-cooking-online-class\"\n  },\n  \"masterVariant\": {\n    \"id\": 1,\n    \"sku\": \"italian-cooking-online-class\",\n    \"key\": \"italian-cooking-online-class\",\n    \"prices\": [\n      {\n        \"value\": {\n          \"type\": \"centPrecision\",\n          \"currencyCode\": \"EUR\",\n          \"centAmount\": 3999,\n          \"fractionDigits\": 2\n        },\n        \"country\": \"DE\"\n      }\n    ],\n    \"images\": [],\n    \"attributes\": [\n      {\n        \"name\": \"name\",\n        \"value\": \"Italian cooking class\"\n      }\n    ],\n    \"assets\": []\n  },\n  \"searchKeywords\": {},\n  \"publish\": true,\n  \"key\": \"italian-cooking-online-class\",\n  \"taxCategory\": {\n    \"typeId\": \"tax-category\",\n    \"id\": \"{{tax-category-id}}\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/{{project-key}}/products",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"{{project-key}}",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "05 Create Product - Middle Eastern Cooking Class",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"const res = pm.response.json();",
									"",
									"pm.environment.set(\"product-id-middle-eastern-class\", res.id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"productType\": {\n    \"typeId\": \"product-type\",\n    \"id\": \"{{product-type-id-online-classes}}\"\n  },\n  \"name\": {\n    \"de\": \"Middle Eastern Cooking Class\",\n    \"en\": \"Middle Eastern Cooking Class\"\n  },\n  \"slug\": {\n    \"de\": \"middle-eastern-cooking-online-class\",\n    \"en\": \"middle-eastern-cooking-online-class\"\n  },\n  \"metaTitle\": {\n    \"de\": \"middle-eastern-cooking-online-class\",\n    \"en\": \"middle-eastern-cooking-online-class\"\n  },\n  \"masterVariant\": {\n    \"id\": 1,\n    \"sku\": \"middle-eastern-cooking-online-class\",\n    \"key\": \"middle-eastern-cooking-online-class\",\n    \"prices\": [\n      {\n        \"value\": {\n          \"type\": \"centPrecision\",\n          \"currencyCode\": \"EUR\",\n          \"centAmount\": 3999,\n          \"fractionDigits\": 2\n        },\n        \"country\": \"DE\"\n      }\n    ],\n    \"images\": [],\n    \"attributes\": [\n      {\n        \"name\": \"name\",\n        \"value\": \"Middle Eastern cooking class\"\n      }\n    ],\n    \"assets\": []\n  },\n  \"searchKeywords\": {},\n  \"publish\": true,\n  \"key\": \"middle-eastern-cooking-online-class\",\n  \"taxCategory\": {\n    \"typeId\": \"tax-category\",\n    \"id\": \"{{tax-category-id}}\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/{{project-key}}/products",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"{{project-key}}",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "06 Create Product - Soup Cooking Class",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"const res = pm.response.json();",
									"",
									"pm.environment.set(\"product-id-soup-class\", res.id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"productType\": {\n    \"typeId\": \"product-type\",\n    \"id\": \"{{product-type-id-online-classes}}\"\n  },\n  \"name\": {\n    \"de\": \"Soup Cooking Class\",\n    \"en\": \"Soup Cooking Class\"\n  },\n  \"slug\": {\n    \"de\": \"soup-cooking-online-class\",\n    \"en\": \"soup-cooking-online-class\"\n  },\n  \"metaTitle\": {\n    \"de\": \"soup-cooking-online-class\",\n    \"en\": \"soup-cooking-online-class\"\n  },\n  \"masterVariant\": {\n    \"id\": 1,\n    \"sku\": \"soup-cooking-online-class\",\n    \"key\": \"soup-cooking-online-class\",\n    \"prices\": [\n      {\n        \"value\": {\n          \"type\": \"centPrecision\",\n          \"currencyCode\": \"EUR\",\n          \"centAmount\": 2599,\n          \"fractionDigits\": 2\n        },\n        \"country\": \"DE\"\n      }\n    ],\n    \"images\": [],\n    \"attributes\": [\n      {\n        \"name\": \"name\",\n        \"value\": \"Soup cooking class\"\n      }\n    ],\n    \"assets\": []\n  },\n  \"searchKeywords\": {},\n  \"publish\": true,\n  \"key\": \"soup-cooking-online-class\",\n  \"taxCategory\": {\n    \"typeId\": \"tax-category\",\n    \"id\": \"{{tax-category-id}}\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/{{project-key}}/products",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"{{project-key}}",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "07 Create Product - Grilling Class",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"const res = pm.response.json();",
									"",
									"pm.environment.set(\"product-id-grilling-class\", res.id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"productType\": {\n    \"typeId\": \"product-type\",\n    \"id\": \"{{product-type-id-online-classes}}\"\n  },\n  \"name\": {\n    \"de\": \"Grilling Class\",\n    \"en\": \"Grilling Class\"\n  },\n  \"slug\": {\n    \"de\": \"grilling-online-class\",\n    \"en\": \"grilling-online-class\"\n  },\n  \"metaTitle\": {\n    \"de\": \"grilling-online-class\",\n    \"en\": \"grilling-online-class\"\n  },\n  \"masterVariant\": {\n    \"id\": 1,\n    \"sku\": \"grilling-online-class\",\n    \"key\": \"grilling-online-class\",\n    \"prices\": [\n      {\n        \"value\": {\n          \"type\": \"centPrecision\",\n          \"currencyCode\": \"EUR\",\n          \"centAmount\": 2299,\n          \"fractionDigits\": 2\n        },\n        \"country\": \"DE\"\n      }\n    ],\n    \"images\": [],\n    \"attributes\": [\n      {\n        \"name\": \"name\",\n        \"value\": \"Grilling class\"\n      }\n    ],\n    \"assets\": []\n  },\n  \"searchKeywords\": {},\n  \"publish\": true,\n  \"key\": \"grilling-online-class\",\n  \"taxCategory\": {\n    \"typeId\": \"tax-category\",\n    \"id\": \"{{tax-category-id}}\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/{{project-key}}/products",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"{{project-key}}",
								"products"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "02 Case 2 - Product Modeling Intermediate",
			"item": [
				{
					"name": "01 Create ProductType - Equipment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"const res = pm.response.json();",
									"",
									"pm.environment.set(\"product-type-id-equipment\", res.id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Equipment\",\n  \"description\": \"Equipment\",\n  \"key\": \"equipment-product-type\",\n  \"attributes\": [\n    {\n      \"type\": {\n        \"name\": \"text\"\n      },\n      \"isSearchable\": true,\n      \"inputHint\": \"SingleLine\",\n      \"name\": \"size\",\n      \"label\": {\n        \"en\": \"Size\",\n        \"de\": \"Size\"\n      },\n      \"isRequired\": false,\n      \"attributeConstraint\": \"Unique\"\n    },\n    {\n      \"type\": {\n        \"name\": \"text\"\n      },\n      \"isSearchable\": true,\n      \"inputHint\": \"SingleLine\",\n      \"name\": \"style\",\n      \"label\": {\n        \"en\": \"Style\",\n        \"de\": \"Style\"\n      },\n      \"isRequired\": false,\n      \"attributeConstraint\": \"Unique\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/{{project-key}}/product-types",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"{{project-key}}",
								"product-types"
							]
						}
					},
					"response": []
				},
				{
					"name": "02 Create ProductType - Dinnerware",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"const res = pm.response.json();",
									"",
									"pm.environment.set(\"product-type-id-dinnerware\", res.id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Dinnerware\",\n  \"description\": \"Dinnerware\",\n  \"key\": \"dinnerware-product-type\",\n  \"attributes\": [\n    {\n      \"type\": {\n        \"name\": \"text\"\n      },\n      \"isSearchable\": true,\n      \"inputHint\": \"SingleLine\",\n      \"name\": \"material\",\n      \"label\": {\n        \"en\": \"Material\",\n        \"de\": \"Material\"\n      },\n      \"isRequired\": true,\n      \"attributeConstraint\": \"Unique\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/{{project-key}}/product-types",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"{{project-key}}",
								"product-types"
							]
						}
					},
					"response": []
				},
				{
					"name": "03 Create Product - Creme Brule Torch",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"const res = pm.response.json();",
									"",
									"pm.environment.set(\"product-id-torch\", res.id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"productType\": {\n    \"typeId\": \"product-type\",\n    \"id\": \"{{product-type-id-equipment}}\"\n  },\n  \"name\": {\n    \"de\": \"Crème Brûlée Torch\",\n    \"en\": \"Crème Brûlée Torch\"\n  },\n  \"slug\": {\n    \"de\": \"creme-brulee-torch\",\n    \"en\": \"creme-brulee-torch\"\n  },\n  \"metaTitle\": {\n    \"de\": \"Crème Brûlée Torch\",\n    \"en\": \"Crème Brûlée Torch\"\n  },\n  \"masterVariant\": {\n    \"id\": 1,\n    \"sku\": \"creme-brulee-torch\",\n    \"key\": \"creme-brulee-torch\",\n    \"prices\": [\n      {\n        \"value\": {\n          \"type\": \"centPrecision\",\n          \"currencyCode\": \"EUR\",\n          \"centAmount\": 12900,\n          \"fractionDigits\": 2\n        },\n        \"country\": \"DE\"\n      }\n    ],\n    \"images\": [],\n    \"assets\": []\n  },\n  \"searchKeywords\": {},\n  \"publish\": true,\n  \"key\": \"creme-brulee-torch\",\n  \"taxCategory\": {\n    \"typeId\": \"tax-category\",\n    \"id\": \"{{tax-category-id}}\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/{{project-key}}/products",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"{{project-key}}",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "04 Create Product - Ceramic Ramekins",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"const res = pm.response.json();",
									"",
									"pm.environment.set(\"product-id-ceramic-ramekins\", res.id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"productType\": {\n    \"typeId\": \"product-type\",\n    \"id\": \"{{product-type-id-dinnerware}}\"\n  },\n  \"name\": {\n    \"de\": \"Ceramic Ramekins\",\n    \"en\": \"Ceramic Ramekins\"\n  },\n  \"slug\": {\n    \"de\": \"ceramic-ramekins\",\n    \"en\": \"ceramic-ramekins\"\n  },\n  \"metaTitle\": {\n    \"de\": \"Ceramic Ramekins\",\n    \"en\": \"Ceramic Ramekins\"\n  },\n  \"masterVariant\": {\n    \"id\": 1,\n    \"sku\": \"ramekin-01\",\n    \"key\": \"ramekin-01\",\n    \"prices\": [\n      {\n        \"value\": {\n          \"type\": \"centPrecision\",\n          \"currencyCode\": \"EUR\",\n          \"centAmount\": 1999,\n          \"fractionDigits\": 2\n        },\n        \"country\": \"DE\"\n      }\n    ],\n    \"images\": [],\n    \"attributes\": [\n      {\n        \"name\": \"material\",\n        \"value\": \"ceramic\"\n      }\n    ],\n    \"assets\": []\n  },\n  \"searchKeywords\": {},\n  \"publish\": true,\n  \"key\": \"ceramic-ramekins\",\n  \"taxCategory\": {\n    \"typeId\": \"tax-category\",\n    \"id\": \"{{tax-category-id}}\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/{{project-key}}/products",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"{{project-key}}",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "05 Create Product - Glass Ramekins",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"const res = pm.response.json();",
									"",
									"pm.environment.set(\"product-id-glass-ramekins\", res.id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"productType\": {\n    \"typeId\": \"product-type\",\n    \"id\": \"{{product-type-id-dinnerware}}\"\n  },\n  \"name\": {\n    \"de\": \"Glass Ramekins\",\n    \"en\": \"Glass Ramekins\"\n  },\n  \"slug\": {\n    \"de\": \"glass-ramekins\",\n    \"en\": \"glass-ramekins\"\n  },\n  \"metaTitle\": {\n    \"de\": \"Glass Ramekins\",\n    \"en\": \"Glass Ramekins\"\n  },\n  \"masterVariant\": {\n    \"id\": 1,\n    \"sku\": \"ramekin-02\",\n    \"key\": \"ramekin-02\",\n    \"prices\": [\n      {\n        \"value\": {\n          \"type\": \"centPrecision\",\n          \"currencyCode\": \"EUR\",\n          \"centAmount\": 2999,\n          \"fractionDigits\": 2\n        },\n        \"country\": \"DE\"\n      }\n    ],\n    \"images\": [],\n    \"attributes\": [\n      {\n        \"name\": \"material\",\n        \"value\": \"glass\"\n      }\n    ],\n    \"assets\": []\n  },\n  \"searchKeywords\": {},\n  \"publish\": true,\n  \"key\": \"glass-ramekins\",\n  \"taxCategory\": {\n    \"typeId\": \"tax-category\",\n    \"id\": \"{{tax-category-id}}\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/{{project-key}}/products",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"{{project-key}}",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "06 Create Product - Steel Ramekins",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"const res = pm.response.json();",
									"",
									"pm.environment.set(\"product-id-steel-ramekins\", res.id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"productType\": {\n    \"typeId\": \"product-type\",\n    \"id\": \"{{product-type-id-dinnerware}}\"\n  },\n  \"name\": {\n    \"de\": \"Steel Ramekins\",\n    \"en\": \"Steel Ramekins\"\n  },\n  \"slug\": {\n    \"de\": \"steel-ramekins\",\n    \"en\": \"steel-ramekins\"\n  },\n  \"metaTitle\": {\n    \"de\": \"Steel Ramekins\",\n    \"en\": \"Steel Ramekins\"\n  },\n  \"masterVariant\": {\n    \"id\": 1,\n    \"sku\": \"ramekin-03\",\n    \"key\": \"ramekin-03\",\n    \"prices\": [\n      {\n        \"value\": {\n          \"type\": \"centPrecision\",\n          \"currencyCode\": \"EUR\",\n          \"centAmount\": 1999,\n          \"fractionDigits\": 2\n        },\n        \"country\": \"DE\"\n      }\n    ],\n    \"images\": [],\n    \"attributes\": [\n      {\n        \"name\": \"material\",\n        \"value\": \"steel\"\n      }\n    ],\n    \"assets\": []\n  },\n  \"searchKeywords\": {},\n  \"publish\": true,\n  \"key\": \"steel-ramekins\",\n  \"taxCategory\": {\n    \"typeId\": \"tax-category\",\n    \"id\": \"{{tax-category-id}}\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/{{project-key}}/products",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"{{project-key}}",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "07 Create Product - Classic Pasta Pot",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"const res = pm.response.json();",
									"",
									"pm.environment.set(\"product-id-classic-pasta-pot\", res.id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"productType\": {\n    \"typeId\": \"product-type\",\n    \"id\": \"{{product-type-id-equipment}}\"\n  },\n  \"name\": {\n    \"de\": \"Classic Pasta Pot\",\n    \"en\": \"Classic Pasta Pot\"\n  },\n  \"slug\": {\n    \"de\": \"classic-pasta-pot\",\n    \"en\": \"classic-pasta-pot\"\n  },\n  \"metaTitle\": {\n    \"de\": \"Classic Pasta Pot\",\n    \"en\": \"Classic Pasta Pot\"\n  },\n  \"masterVariant\": {\n    \"id\": 1,\n    \"sku\": \"pasta-pot-01\",\n    \"key\": \"pasta-pot-01\",\n    \"prices\": [\n      {\n        \"value\": {\n          \"type\": \"centPrecision\",\n          \"currencyCode\": \"EUR\",\n          \"centAmount\": 1999,\n          \"fractionDigits\": 2\n        },\n        \"country\": \"DE\"\n      }\n    ],\n    \"images\": [],\n    \"attributes\": [\n      {\n        \"name\": \"size\",\n        \"value\": \"2 qt.\"\n      },\n      {\n        \"name\": \"style\",\n        \"value\": \"classic\"\n      }\n    ],\n    \"assets\": []\n  },\n  \"searchKeywords\": {},\n  \"publish\": true,\n  \"key\": \"classic-pasta-pot\",\n  \"taxCategory\": {\n    \"typeId\": \"tax-category\",\n    \"id\": \"{{tax-category-id}}\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/{{project-key}}/products",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"{{project-key}}",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "08 Create Product - Rustic Pasta Pot",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"const res = pm.response.json();",
									"",
									"pm.environment.set(\"product-id-rustic-pasta-pot\", res.id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"productType\": {\n    \"typeId\": \"product-type\",\n    \"id\": \"{{product-type-id-equipment}}\"\n  },\n  \"name\": {\n    \"de\": \"Rustic Pasta Pot\",\n    \"en\": \"Rustic Pasta Pot\"\n  },\n  \"slug\": {\n    \"de\": \"rustic-pasta-pot\",\n    \"en\": \"rustic-pasta-pot\"\n  },\n  \"metaTitle\": {\n    \"de\": \"Rustic pasta pot\",\n    \"en\": \"Rustic pasta pot\"\n  },\n  \"masterVariant\": {\n    \"id\": 1,\n    \"sku\": \"pasta-pot-02\",\n    \"key\": \"pasta-pot-02\",\n    \"prices\": [\n      {\n        \"value\": {\n          \"type\": \"centPrecision\",\n          \"currencyCode\": \"EUR\",\n          \"centAmount\": 2999,\n          \"fractionDigits\": 2\n        },\n        \"country\": \"DE\"\n      }\n    ],\n    \"images\": [],\n    \"attributes\": [\n      {\n        \"name\": \"size\",\n        \"value\": \"2 qt.\"\n      },\n      {\n        \"name\": \"style\",\n        \"value\": \"rustic\"\n      }\n    ],\n    \"assets\": []\n  },\n  \"searchKeywords\": {},\n  \"publish\": true,\n  \"key\": \"rustic-pasta-pot\",\n  \"taxCategory\": {\n    \"typeId\": \"tax-category\",\n    \"id\": \"{{tax-category-id}}\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/{{project-key}}/products",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"{{project-key}}",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "09 Create Product - Industrial Pasta Pot",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"const res = pm.response.json();",
									"",
									"pm.environment.set(\"product-id-industrial-pasta-pot\", res.id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"productType\": {\n    \"typeId\": \"product-type\",\n    \"id\": \"{{product-type-id-equipment}}\"\n  },\n  \"name\": {\n    \"de\": \"Industrial Pasta Pot\",\n    \"en\": \"Industrial Pasta Pot\"\n  },\n  \"slug\": {\n    \"de\": \"industrial-pasta-pot\",\n    \"en\": \"industrial-pasta-pot\"\n  },\n  \"metaTitle\": {\n    \"de\": \"Industrial Pasta Pot\",\n    \"en\": \"Industrial Pasta Pot\"\n  },\n  \"masterVariant\": {\n    \"id\": 1,\n    \"sku\": \"pasta-pot-03\",\n    \"key\": \"pasta-pot-03\",\n    \"prices\": [\n      {\n        \"value\": {\n          \"type\": \"centPrecision\",\n          \"currencyCode\": \"EUR\",\n          \"centAmount\": 1599,\n          \"fractionDigits\": 2\n        },\n        \"country\": \"DE\"\n      }\n    ],\n    \"images\": [],\n    \"attributes\": [\n      {\n        \"name\": \"size\",\n        \"value\": \"2 qt.\"\n      },\n      {\n        \"name\": \"style\",\n        \"value\": \"industrial\"\n      }\n    ],\n    \"assets\": []\n  },\n  \"searchKeywords\": {},\n  \"publish\": true,\n  \"key\": \"industrial-pasta-pot\",\n  \"taxCategory\": {\n    \"typeId\": \"tax-category\",\n    \"id\": \"{{tax-category-id}}\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/{{project-key}}/products",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"{{project-key}}",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "10 optional demo Create ProductType - Bundle",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"const res = pm.response.json();",
									"",
									"pm.environment.set(\"product-type-id-bundle\", res.id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Bundle ProductType\",\n  \"description\": \"AllForFoodies Bundle ProductType\",\n  \"classifier\": \"Complex\",\n  \"attributes\": [\n    {\n      \"name\": \"items\",\n      \"label\": {\n        \"de\": \"Items\",\n        \"en\": \"Items\"\n      },\n      \"inputTip\": {\n        \"de\": \"Bundle item\",\n        \"en\": \"Bundle item\"\n      },\n      \"isRequired\": false,\n      \"type\": {\n        \"name\": \"set\",\n        \"elementType\": {\n          \"name\": \"reference\",\n          \"referenceTypeId\": \"product\"\n        }\n      },\n      \"attributeConstraint\": \"None\",\n      \"isSearchable\": true,\n      \"inputHint\": \"SingleLine\"\n    }\n  ],\n  \"key\": \"bundle-producttype\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/{{project-key}}/product-types",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"{{project-key}}",
								"product-types"
							]
						}
					},
					"response": []
				},
				{
					"name": "11 optional demo Create Product - French Bundle",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"const res = pm.response.json();",
									"",
									"pm.environment.set(\"product-id-french-bundle\", res.id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"productType\": {\n    \"typeId\": \"product-type\",\n    \"id\": \"{{product-type-id-bundle}}\"\n  },\n  \"name\": {\n    \"en\": \"French Cooking Bundle\"\n  },\n  \"slug\": {\n    \"en\": \"french-cooking-bundle\"\n  },\n  \"masterVariant\": {\n    \"id\": 1,\n    \"sku\": \"french-ceramic-cooking-bundle\",\n    \"key\": \"french-ceramic-cooking-bundle\",\n    \"prices\": [\n      {\n        \"value\": {\n          \"type\": \"centPrecision\",\n          \"currencyCode\": \"EUR\",\n          \"centAmount\": 12900,\n          \"fractionDigits\": 2\n        },\n        \"country\": \"DE\"\n      }\n    ],\n    \"images\": [],\n    \"attributes\": [\n      {\n        \"name\": \"items\",\n        \"value\": [\n          {\n            \"typeId\": \"product\",\n            \"id\": \"{{product-id-french-class}}\"\n          },\n          {\n            \"typeId\": \"product\",\n            \"id\": \"{{product-id-torch}}\"\n          },\n          {\n            \"typeId\": \"product\",\n            \"id\": \"{{product-id-ceramic-ramekins}}\"\n          }\n        ]\n      }\n    ],\n    \"assets\": []\n  },\n  \"variants\": [],\n  \"searchKeywords\": {},\n  \"publish\": true,\n  \"key\": \"french-cooking-bundle\",\n  \"taxCategory\": {\n    \"typeId\": \"tax-category\",\n    \"id\": \"{{tax-category-id}}\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/{{project-key}}/products",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"{{project-key}}",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "12 optional demo Create Product - Italian Bundle",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"const res = pm.response.json();",
									"",
									"pm.environment.set(\"product-id-italian-bundle\", res.id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"productType\": {\n    \"typeId\": \"product-type\",\n    \"id\": \"{{product-type-id-bundle}}\"\n  },\n  \"name\": {\n    \"en\": \"Italian Cooking Bundle\"\n  },\n  \"slug\": {\n    \"en\": \"italian-cooking-bundle\"\n  },\n  \"masterVariant\": {\n    \"id\": 1,\n    \"sku\": \"italian-industrial-cooking-bundle\",\n    \"key\": \"italian-industrial-cooking-bundle\",\n    \"prices\": [\n      {\n        \"value\": {\n          \"type\": \"centPrecision\",\n          \"currencyCode\": \"EUR\",\n          \"centAmount\": 12900,\n          \"fractionDigits\": 2\n        },\n        \"country\": \"DE\"\n      }\n    ],\n    \"images\": [],\n    \"attributes\": [\n      {\n        \"name\": \"items\",\n        \"value\": [\n          {\n            \"typeId\": \"product\",\n            \"id\": \"{{product-id-italian-class}}\"\n          },\n          {\n            \"typeId\": \"product\",\n            \"id\": \"{{product-id-industrial-pasta-pot}}\"\n          }\n        ]\n      }\n    ],\n    \"assets\": []\n  },\n  \"variants\": [],\n  \"searchKeywords\": {},\n  \"publish\": true,\n  \"key\": \"italian-cooking-bundle\",\n  \"taxCategory\": {\n    \"typeId\": \"tax-category\",\n    \"id\": \"{{tax-category-id}}\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/{{project-key}}/products",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"{{project-key}}",
								"products"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "03 Case 3 - Product Modeling Bonus",
			"item": [
				{
					"name": "01 Create ProductType - Ingredient",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"const res = pm.response.json();",
									"",
									"pm.environment.set(\"product-type-id-ingredient\", res.id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Ingredients\",\n  \"description\": \"Ingredients\",\n  \"key\": \"ingredient-product-type\",\n  \"attributes\": [\n    {\n      \"type\": {\n        \"name\": \"text\"\n      },\n      \"isSearchable\": true,\n      \"inputHint\": \"SingleLine\",\n      \"name\": \"package\",\n      \"label\": {\n        \"en\": \"Package Type\",\n        \"de\": \"Package Type\"\n      },\n      \"isRequired\": true,\n      \"attributeConstraint\": \"CombinationUnique\"\n    },\n    {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"name\": \"weight_in_lb\",\n      \"label\": {\n        \"en\": \"Weight in lb\",\n        \"de\": \"Weight in lb\"\n      },\n      \"isRequired\": true,\n      \"attributeConstraint\": \"CombinationUnique\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/{{project-key}}/product-types",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"{{project-key}}",
								"product-types"
							]
						}
					},
					"response": []
				},
				{
					"name": "02 Create Product - Gluten-free Brownie Mix",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"const res = pm.response.json();",
									"",
									"pm.environment.set(\"product-id-gluten-free-brownie-mix\", res.id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"productType\": {\n    \"typeId\": \"product-type\",\n    \"id\": \"{{product-type-id-ingredient}}\"\n  },\n  \"name\": {\n    \"de\": \"Gluten-free Brownie Mix\",\n    \"en\": \"Gluten-free Brownie Mix\"\n  },\n  \"slug\": {\n    \"de\": \"gluten-free-brownie-mix\",\n    \"en\": \"gluten-free-brownie-mix\"\n  },\n  \"metaTitle\": {\n    \"de\": \"Gluten-free Brownie Mix\",\n    \"en\": \"Gluten-free Brownie Mix\"\n  },\n  \"masterVariant\": {\n    \"id\": 1,\n    \"sku\": \"gluten-free-brownie-mix-01\",\n    \"key\": \"gluten-free-brownie-mix-01\",\n    \"prices\": [\n      {\n        \"value\": {\n          \"type\": \"centPrecision\",\n          \"currencyCode\": \"EUR\",\n          \"centAmount\": 399,\n          \"fractionDigits\": 2\n        },\n        \"country\": \"DE\"\n      }\n    ],\n    \"images\": [],\n    \"attributes\": [\n      {\n        \"name\": \"package\",\n        \"value\": \"bag\"\n      },\n      {\n        \"name\": \"weight_in_lb\",\n        \"value\": 1\n      }\n    ],\n    \"assets\": []\n  },\n  \"variants\": [\n    {\n      \"id\": 2,\n      \"sku\": \"gluten-free-brownie-mix-05\",\n      \"key\": \"gluten-free-brownie-mix-05\",\n      \"prices\": [\n        {\n          \"value\": {\n            \"type\": \"centPrecision\",\n            \"currencyCode\": \"EUR\",\n            \"centAmount\": 1935,\n            \"fractionDigits\": 2\n          },\n          \"country\": \"DE\"\n        }\n      ],\n      \"images\": [],\n      \"attributes\": [\n        {\n          \"name\": \"package\",\n          \"value\": \"bag\"\n        },\n        {\n          \"name\": \"weight_in_lb\",\n          \"value\": 5\n        }\n      ],\n      \"assets\": []\n    },\n    {\n      \"id\": 3,\n      \"sku\": \"gluten-free-brownie-mix-25\",\n      \"key\": \"gluten-free-brownie-mix-25\",\n      \"prices\": [\n        {\n          \"value\": {\n            \"type\": \"centPrecision\",\n            \"currencyCode\": \"EUR\",\n            \"centAmount\": 6725,\n            \"fractionDigits\": 2\n          },\n          \"country\": \"DE\"\n        }\n      ],\n      \"images\": [],\n      \"attributes\": [\n        {\n          \"name\": \"package\",\n          \"value\": \"case\"\n        },\n        {\n          \"name\": \"weight_in_lb\",\n          \"value\": 25\n        }\n      ],\n      \"assets\": []\n    }\n  ],\n  \"searchKeywords\": {},\n  \"publish\": true,\n  \"key\": \"gluten-free-brownie-mix\",\n  \"taxCategory\": {\n    \"typeId\": \"tax-category\",\n    \"id\": \"{{tax-category-id}}\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/{{project-key}}/products",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"{{project-key}}",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "03 Create Product - Sugar Cookie Mix",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"const res = pm.response.json();",
									"",
									"pm.environment.set(\"product-id-sugar-cookie-mix\", res.id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"productType\": {\n    \"typeId\": \"product-type\",\n    \"id\": \"{{product-type-id-ingredient}}\"\n  },\n  \"name\": {\n    \"de\": \"Sugar Cookie Mix\",\n    \"en\": \"Sugar Cookie Mix\"\n  },\n  \"slug\": {\n    \"de\": \"sugar-cookie-mix\",\n    \"en\": \"sugar-cookie-mix\"\n  },\n  \"metaTitle\": {\n    \"de\": \"Sugar Cookie Mix\",\n    \"en\": \"Sugar Cookie Mix\"\n  },\n  \"masterVariant\": {\n    \"id\": 1,\n    \"sku\": \"sugar-cookie-mix-01\",\n    \"key\": \"sugar-cookie-mix-01\",\n    \"prices\": [\n      {\n        \"value\": {\n          \"type\": \"centPrecision\",\n          \"currencyCode\": \"EUR\",\n          \"centAmount\": 299,\n          \"fractionDigits\": 2\n        },\n        \"country\": \"DE\"\n      }\n    ],\n    \"images\": [],\n    \"attributes\": [\n      {\n        \"name\": \"package\",\n        \"value\": \"bag\"\n      },\n      {\n        \"name\": \"weight_in_lb\",\n        \"value\": 1\n      }\n    ],\n    \"assets\": []\n  },\n  \"variants\": [\n    {\n      \"id\": 2,\n      \"sku\": \"sugar-cookie-mix-05\",\n      \"key\": \"sugar-cookie-mix-05\",\n      \"prices\": [\n        {\n          \"value\": {\n            \"type\": \"centPrecision\",\n            \"currencyCode\": \"EUR\",\n            \"centAmount\": 1499,\n            \"fractionDigits\": 2\n          },\n          \"country\": \"DE\"\n        }\n      ],\n      \"images\": [],\n      \"attributes\": [\n        {\n          \"name\": \"package\",\n          \"value\": \"bag\"\n        },\n        {\n          \"name\": \"weight_in_lb\",\n          \"value\": 5\n        }\n      ],\n      \"assets\": []\n    },\n    {\n      \"id\": 3,\n      \"sku\": \"sugar-cookie-mix-25\",\n      \"key\": \"sugar-cookie-mix-25\",\n      \"prices\": [\n        {\n          \"value\": {\n            \"type\": \"centPrecision\",\n            \"currencyCode\": \"EUR\",\n            \"centAmount\": 4975,\n            \"fractionDigits\": 2\n          },\n          \"country\": \"DE\"\n        }\n      ],\n      \"images\": [],\n      \"attributes\": [\n        {\n          \"name\": \"package\",\n          \"value\": \"case\"\n        },\n        {\n          \"name\": \"weight_in_lb\",\n          \"value\": 25\n        }\n      ],\n      \"assets\": []\n    }\n  ],\n  \"searchKeywords\": {},\n  \"publish\": true,\n  \"key\": \"sugar-cookie-mix\",\n  \"taxCategory\": {\n    \"typeId\": \"tax-category\",\n    \"id\": \"{{tax-category-id}}\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/{{project-key}}/products",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"{{project-key}}",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "04 Create Product - Walnut Pieces",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"const res = pm.response.json();",
									"",
									"pm.environment.set(\"product-id-walnut-pieces\", res.id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"productType\": {\n    \"typeId\": \"product-type\",\n    \"id\": \"{{product-type-id-ingredient}}\"\n  },\n  \"name\": {\n    \"de\": \"Walnut Pieces\",\n    \"en\": \"Walnut Pieces\"\n  },\n  \"slug\": {\n    \"de\": \"walnut-pieces\",\n    \"en\": \"walnut-pieces\"\n  },\n  \"metaTitle\": {\n    \"de\": \"Walnut Pieces\",\n    \"en\": \"Walnut Pieces\"\n  },\n  \"masterVariant\": {\n    \"id\": 1,\n    \"sku\": \"walnut-pieces-01\",\n    \"key\": \"walnut-pieces-01\",\n    \"prices\": [\n      {\n        \"value\": {\n          \"type\": \"centPrecision\",\n          \"currencyCode\": \"EUR\",\n          \"centAmount\": 899,\n          \"fractionDigits\": 2\n        },\n        \"country\": \"DE\"\n      }\n    ],\n    \"images\": [],\n    \"attributes\": [\n      {\n        \"name\": \"package\",\n        \"value\": \"bag\"\n      },\n      {\n        \"name\": \"weight_in_lb\",\n        \"value\": 1\n      }\n    ],\n    \"assets\": []\n  },\n  \"variants\": [\n    {\n      \"id\": 2,\n      \"sku\": \"walnut-pieces-05\",\n      \"key\": \"walnut-pieces-05\",\n      \"prices\": [\n        {\n          \"value\": {\n            \"type\": \"centPrecision\",\n            \"currencyCode\": \"EUR\",\n            \"centAmount\": 4360,\n            \"fractionDigits\": 2\n          },\n          \"country\": \"DE\"\n        }\n      ],\n      \"images\": [],\n      \"attributes\": [\n        {\n          \"name\": \"package\",\n          \"value\": \"bag\"\n        },\n        {\n          \"name\": \"weight_in_lb\",\n          \"value\": 5\n        }\n      ],\n      \"assets\": []\n    },\n    {\n      \"id\": 3,\n      \"sku\": \"walnut-pieces-30\",\n      \"key\": \"walnut-pieces-30\",\n      \"prices\": [\n        {\n          \"value\": {\n            \"type\": \"centPrecision\",\n            \"currencyCode\": \"EUR\",\n            \"centAmount\": 20970,\n            \"fractionDigits\": 2\n          },\n          \"country\": \"DE\"\n        }\n      ],\n      \"images\": [],\n      \"attributes\": [\n        {\n          \"name\": \"package\",\n          \"value\": \"case\"\n        },\n        {\n          \"name\": \"weight_in_lb\",\n          \"value\": 30\n        }\n      ],\n      \"assets\": []\n    }\n  ],\n  \"searchKeywords\": {},\n  \"publish\": true,\n  \"key\": \"walnut-pieces\",\n  \"taxCategory\": {\n    \"typeId\": \"tax-category\",\n    \"id\": \"{{tax-category-id}}\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/{{project-key}}/products",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"{{project-key}}",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "05 Create Product - Semi-sweet Chocolate Chips",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"const res = pm.response.json();",
									"",
									"pm.environment.set(\"product-id-semi-sweet-chocolate-pieces\", res.id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"productType\": {\n    \"typeId\": \"product-type\",\n    \"id\": \"{{product-type-id-ingredient}}\"\n  },\n  \"name\": {\n    \"de\": \"Semi-sweet Chocolate Chips\",\n    \"en\": \"Semi-sweet Chocolate Chips\"\n  },\n  \"slug\": {\n    \"de\": \"semi-sweet-chocolate-chips\",\n    \"en\": \"semi-sweet-chocolate-chips\"\n  },\n  \"metaTitle\": {\n    \"de\": \"Semi-sweet Chocolate Chips\",\n    \"en\": \"Semi-sweet Chocolate Chips\"\n  },\n  \"masterVariant\": {\n    \"id\": 1,\n    \"sku\": \"semi-sweet-chocolate-chips-01\",\n    \"key\": \"semi-sweet-chocolate-chips-01\",\n    \"prices\": [\n      {\n        \"value\": {\n          \"type\": \"centPrecision\",\n          \"currencyCode\": \"EUR\",\n          \"centAmount\": 599,\n          \"fractionDigits\": 2\n        },\n        \"country\": \"DE\"\n      }\n    ],\n    \"images\": [],\n    \"attributes\": [\n      {\n        \"name\": \"package\",\n        \"value\": \"bag\"\n      },\n      {\n        \"name\": \"weight_in_lb\",\n        \"value\": 1\n      }\n    ],\n    \"assets\": []\n  },\n  \"variants\": [\n    {\n      \"id\": 2,\n      \"sku\": \"semi-sweet-chocolate-chips-05\",\n      \"key\": \"semi-sweet-chocolate-chips-05\",\n      \"prices\": [\n        {\n          \"value\": {\n            \"type\": \"centPrecision\",\n            \"currencyCode\": \"EUR\",\n            \"centAmount\": 2905,\n            \"fractionDigits\": 2\n          },\n          \"country\": \"DE\"\n        }\n      ],\n      \"images\": [],\n      \"attributes\": [\n        {\n          \"name\": \"package\",\n          \"value\": \"bag\"\n        },\n        {\n          \"name\": \"weight_in_lb\",\n          \"value\": 5\n        }\n      ],\n      \"assets\": []\n    },\n    {\n      \"id\": 3,\n      \"sku\": \"semi-sweet-chocolate-chips-25\",\n      \"key\": \"semi-sweet-chocolate-chips-25\",\n      \"prices\": [\n        {\n          \"value\": {\n            \"type\": \"centPrecision\",\n            \"currencyCode\": \"EUR\",\n            \"centAmount\": 12475,\n            \"fractionDigits\": 2\n          },\n          \"country\": \"DE\"\n        }\n      ],\n      \"images\": [],\n      \"attributes\": [\n        {\n          \"name\": \"package\",\n          \"value\": \"case\"\n        },\n        {\n          \"name\": \"weight_in_lb\",\n          \"value\": 25\n        }\n      ],\n      \"assets\": []\n    }\n  ],\n  \"searchKeywords\": {},\n  \"publish\": true,\n  \"key\": \"semi-sweet-chocolate-chips\",\n  \"taxCategory\": {\n    \"typeId\": \"tax-category\",\n    \"id\": \"{{tax-category-id}}\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/{{project-key}}/products",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"{{project-key}}",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "06 Create ProductType - Ingredient Info",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"const res = pm.response.json();",
									"",
									"pm.environment.set(\"product-type-id-ingredient-info\", res.id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Ingredient Info\",\n  \"description\": \"Ingredient info to be used as a nested type in recipe product type\",\n  \"classifier\": \"Complex\",\n  \"attributes\": [\n    {\n      \"name\": \"SKU\",\n      \"label\": {\n        \"de\": \"SKU\",\n        \"en\": \"SKU\"\n      },\n      \"isRequired\": true,\n      \"type\": {\n        \"name\": \"text\"\n      },\n      \"attributeConstraint\": \"None\",\n      \"isSearchable\": false,\n      \"inputHint\": \"SingleLine\"\n    },\n    {\n      \"name\": \"Quantity\",\n      \"label\": {\n        \"de\": \"\",\n        \"en\": \"quantity\"\n      },\n      \"isRequired\": true,\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"attributeConstraint\": \"None\",\n      \"isSearchable\": false,\n      \"inputHint\": \"SingleLine\"\n    },\n    {\n      \"name\": \"Item\",\n      \"label\": {\n        \"de\": \"\",\n        \"en\": \"item\"\n      },\n      \"isRequired\": true,\n      \"type\": {\n        \"name\": \"reference\",\n        \"referenceTypeId\": \"product\"\n      },\n      \"attributeConstraint\": \"None\",\n      \"isSearchable\": false,\n      \"inputHint\": \"SingleLine\"\n    }\n  ],\n  \"key\": \"ingredient-info\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/{{project-key}}/product-types",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"{{project-key}}",
								"product-types"
							]
						}
					},
					"response": []
				},
				{
					"name": "07 Create ProductType - Recipe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"const res = pm.response.json();",
									"",
									"pm.environment.set(\"product-type-id-recipe\", res.id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Recipe\",\n  \"key\": \"recipe-product-type\",\n  \"description\": \"Nested recipe product type.\",\n  \"attributes\": [\n    {\n      \"type\": {\n        \"name\": \"set\",\n        \"elementType\": {\n          \"name\": \"nested\",\n          \"typeReference\": {\n            \"typeId\": \"product-type\",\n            \"id\": \"{{product-type-id-ingredient-info}}\"\n          }\n        }\n      },\n      \"isSearchable\": false,\n      \"name\": \"ingredient-info\",\n      \"label\": {\n        \"en\": \"Ingredient Info\",\n        \"de\": \"Ingredient Info\"\n      },\n      \"isRequired\": false,\n      \"attributeConstraint\": \"None\",\n      \"displayGroup\": \"Other\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/{{project-key}}/product-types",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"{{project-key}}",
								"product-types"
							]
						}
					},
					"response": []
				},
				{
					"name": "08 Create Product - Fudgy Walnut Brownie Recipe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"const res = pm.response.json();",
									"",
									"pm.environment.set(\"product-id-fuggy-walnut-brownie-recipe\", res.id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"productType\": {\n    \"typeId\": \"product-type\",\n    \"id\": \"{{product-type-id-recipe}}\"\n  },\n  \"name\": {\n    \"de\": \"Fudgy Walnut Brownie Recipe\",\n    \"en\": \"Fudgy Walnut Brownie Recipe\"\n  },\n  \"slug\": {\n    \"de\": \"fudgy-walnut-brownie-recipe\",\n    \"en\": \"fudgy-walnut-brownie-recipe\"\n  },\n  \"metaTitle\": {\n    \"de\": \"Fudgy Walnut Brownie Recipe\",\n    \"en\": \"Fudgy Walnut Brownie Recipe\"\n  },\n  \"masterVariant\": {\n    \"id\": 1,\n    \"sku\": \"fudgy-walnut-brownie-recipe\",\n    \"key\": \"fudgy-walnut-brownie-recipe\",\n    \"prices\": [\n      {\n        \"value\": {\n          \"type\": \"centPrecision\",\n          \"currencyCode\": \"EUR\",\n          \"centAmount\": 2000,\n          \"fractionDigits\": 2\n        },\n        \"country\": \"DE\"\n      }\n    ],\n    \"images\": [],\n    \"attributes\": [\n      {\n        \"name\": \"ingredient-info\",\n        \"value\": [\n          [\n            {\n              \"name\": \"Item\",\n              \"value\": {\n                \"typeId\": \"product\",\n                \"id\": \"{{product-id-gluten-free-brownie-mix}}\"\n              }\n            },\n            {\n              \"name\": \"SKU\",\n              \"value\": \"gluten-free-brownie-mix-01\"\n            },\n            {\n              \"name\": \"Quantity\",\n              \"value\": 2\n            }\n          ],\n          [\n            {\n              \"name\": \"Item\",\n              \"value\": {\n                \"typeId\": \"product\",\n                \"id\": \"{{product-id-walnut-pieces}}\"\n              }\n            },\n            {\n              \"name\": \"SKU\",\n              \"value\": \"walnut-pieces-01\"\n            },\n            {\n              \"name\": \"Quantity\",\n              \"value\": 1\n            }\n          ],\n          [\n            {\n              \"name\": \"Item\",\n              \"value\": {\n                \"typeId\": \"product\",\n                \"id\": \"{{product-id-semi-sweet-chocolate-pieces}}\"\n              }\n            },\n            {\n              \"name\": \"SKU\",\n              \"value\": \"semi-sweet-chocolate-chips-01\"\n            },\n            {\n              \"name\": \"Quantity\",\n              \"value\": 1\n            }\n          ]\n        ]\n      }\n    ]\n  },\n  \"searchKeywords\": {},\n  \"publish\": true,\n  \"key\": \"fudgy-walnut-brownie-recipe\",\n  \"taxCategory\": {\n    \"typeId\": \"tax-category\",\n    \"id\": \"{{tax-category-id}}\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/{{project-key}}/products",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"{{project-key}}",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "09 Create Product - Nuts For Chocolate Cookies Recipe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"const res = pm.response.json();",
									"",
									"pm.environment.set(\"product-id-nuts-for-chocolate-cookies-recipe\", res.id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"productType\": {\n    \"typeId\": \"product-type\",\n    \"id\": \"{{product-type-id-recipe}}\"\n  },\n  \"name\": {\n    \"de\": \"Nuts For Chocolate Cookies Recipe\",\n    \"en\": \"Nuts For Chocolate Cookies Recipe\"\n  },\n  \"slug\": {\n    \"de\": \"nuts-for-chocolate-cookies-recipe\",\n    \"en\": \"nuts-for-chocolate-cookies-recipe\"\n  },\n  \"metaTitle\": {\n    \"de\": \"Nuts For Chocolate Cookies Recipe\",\n    \"en\": \"Nuts For Chocolate Cookies Recipe\"\n  },\n  \"masterVariant\": {\n    \"id\": 1,\n    \"sku\": \"nuts-for-chocolate-cookies-recipe\",\n    \"key\": \"nuts-for-chocolate-cookies-recipe\",\n    \"prices\": [\n      {\n        \"value\": {\n          \"type\": \"centPrecision\",\n          \"currencyCode\": \"EUR\",\n          \"centAmount\": 2000,\n          \"fractionDigits\": 2\n        },\n        \"country\": \"DE\"\n      }\n    ],\n    \"images\": [],\n    \"attributes\": [\n      {\n        \"name\": \"ingredient-info\",\n        \"value\": [\n          [\n            {\n              \"name\": \"Item\",\n              \"value\": {\n                \"typeId\": \"product\",\n                \"id\": \"{{product-id-sugar-cookie-mix}}\"\n              }\n            },\n            {\n              \"name\": \"SKU\",\n              \"value\": \"sugar-cookie-mix-01\"\n            },\n            {\n              \"name\": \"Quantity\",\n              \"value\": 1\n            }\n          ],\n          [\n            {\n              \"name\": \"Item\",\n              \"value\": {\n                \"typeId\": \"product\",\n                \"id\": \"{{product-id-walnut-pieces}}\"\n              }\n            },\n            {\n              \"name\": \"SKU\",\n              \"value\": \"walnut-pieces-01\"\n            },\n            {\n              \"name\": \"Quantity\",\n              \"value\": 3\n            }\n          ],\n          [\n            {\n              \"name\": \"Item\",\n              \"value\": {\n                \"typeId\": \"product\",\n                \"id\": \"{{product-id-semi-sweet-chocolate-pieces}}\"\n              }\n            },\n            {\n              \"name\": \"SKU\",\n              \"value\": \"semi-sweet-chocolate-chips-01\"\n            },\n            {\n              \"name\": \"Quantity\",\n              \"value\": 3\n            }\n          ],\n          [\n            {\n              \"name\": \"Item\",\n              \"value\": {\n                \"typeId\": \"product\",\n                \"id\": \"{{product-id-semi-sweet-chocolate-pieces}}\"\n              }\n            },\n            {\n              \"name\": \"SKU\",\n              \"value\": \"semi-sweet-chocolate-chips-02\"\n            },\n            {\n              \"name\": \"Quantity\",\n              \"value\": 2\n            }\n          ]\n        ]\n      }\n    ],\n    \"searchKeywords\": {}\n  },\n  \"publish\": true,\n  \"key\": \"nuts-for-chocolate-cookies-recip\",\n  \"taxCategory\": {\n    \"typeId\": \"tax-category\",\n    \"id\": \"{{tax-category-id}}\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/{{project-key}}/products",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"{{project-key}}",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "10 Create Product - Fluffy Sugar Cookies Recipe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"const res = pm.response.json();",
									"",
									"pm.environment.set(\"product-id-fluffy-sugar-cookies-recipe\", res.id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"productType\": {\n    \"typeId\": \"product-type\",\n    \"id\": \"{{product-type-id-recipe}}\"\n  },\n  \"name\": {\n    \"de\": \"Fluffy Sugar Cookies Recipe\",\n    \"en\": \"Fluffy Sugar Cookies Recipe\"\n  },\n  \"slug\": {\n    \"de\": \"fluffy-sugar-cookies-recipe\",\n    \"en\": \"fluffy-sugar-cookies-recipe\"\n  },\n  \"metaTitle\": {\n    \"de\": \"Fluffy Sugar Cookies Recipe\",\n    \"en\": \"Fluffy Sugar Cookies Recipe\"\n  },\n  \"masterVariant\": {\n    \"id\": 1,\n    \"sku\": \"fluffy-sugar-cookies-recipe\",\n    \"key\": \"fluffy-sugar-cookies-recipe\",\n    \"prices\": [\n      {\n        \"value\": {\n          \"type\": \"centPrecision\",\n          \"currencyCode\": \"EUR\",\n          \"centAmount\": 2000,\n          \"fractionDigits\": 2\n        },\n        \"country\": \"DE\"\n      }\n    ],\n    \"images\": [],\n    \"attributes\": [\n      {\n        \"name\": \"ingredient-info\",\n        \"value\": [\n          [\n            {\n              \"name\": \"Item\",\n              \"value\": {\n                \"typeId\": \"product\",\n                \"id\": \"{{product-id-sugar-cookie-mix}}\"\n              }\n            },\n            {\n              \"name\": \"SKU\",\n              \"value\": \"sugar-cookie-mix-05\"\n            },\n            {\n              \"name\": \"Quantity\",\n              \"value\": 1\n            }\n          ]\n        ]\n      }\n    ],\n    \"searchKeywords\": {}\n  },\n  \"publish\": true,\n  \"key\": \"fluffy-sugar-cookies-recipe\",\n  \"taxCategory\": {\n    \"typeId\": \"tax-category\",\n    \"id\": \"{{tax-category-id}}\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/{{project-key}}/products",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"{{project-key}}",
								"products"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "05 Case 5a - Pricing",
			"item": [
				{
					"name": "01 Customer Groups",
					"item": [
						{
							"name": "01 Create CustomerGroup - Premium",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"const res = pm.response.json();",
											"",
											"pm.environment.set(\"customer-group-id-01\", res.id);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"groupName\": \"Premium Customer Group\",\n  \"key\": \"premium-group\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/{{project-key}}/customer-groups",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"{{project-key}}",
										"customer-groups"
									]
								}
							},
							"response": []
						},
						{
							"name": "02 Create CustomerGroup - Platinum",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"const res = pm.response.json();",
											"",
											"pm.environment.set(\"customer-group-id-02\", res.id);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"groupName\": \"Platinum Customer Group\",\n  \"key\": \"platinum-group\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/{{project-key}}/customer-groups",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"{{project-key}}",
										"customer-groups"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "02 Add Products",
					"item": [
						{
							"name": "01 Create ProductType - Gourmet Food",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"const res = pm.response.json();",
											"",
											"pm.environment.set(\"product-type-id-food\", res.id);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Gourmet Food\",\n  \"description\": \"Gourmet food\",\n  \"key\": \"gourmet-food-product-type\",\n  \"attributes\": [\n    {\n      \"type\": {\n        \"name\": \"text\"\n      },\n      \"isSearchable\": true,\n      \"name\": \"description\",\n      \"label\": {\n        \"en\": \"Description\",\n        \"de\": \"Description\"\n      },\n      \"isRequired\": true,\n      \"inputHint\": \"MultiLine\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/{{project-key}}/product-types",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"{{project-key}}",
										"product-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "02 Create ProductType - Gourmet Coffee",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"const res = pm.response.json();",
											"",
											"pm.environment.set(\"product-type-id-coffee\", res.id);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Gourmet Coffee\",\n  \"description\": \"Gourmet coffee\",\n  \"key\": \"gourmet-coffee-product-type\",\n  \"attributes\": [\n    {\n      \"type\": {\n        \"name\": \"text\"\n      },\n      \"isSearchable\": true,\n      \"name\": \"description\",\n      \"label\": {\n        \"en\": \"Description\",\n        \"de\": \"Description\"\n      },\n      \"isRequired\": true,\n      \"inputHint\": \"MultiLine\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/{{project-key}}/product-types",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"{{project-key}}",
										"product-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "03 Create ProductType - Kitchen Utensil",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"const res = pm.response.json();",
											"",
											"pm.environment.set(\"product-type-id-utensil\", res.id);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Kitchen Utensil\",\n  \"description\": \"Kitchen utensil\",\n  \"key\": \"kitchen-utensil-product-type\",\n  \"attributes\": [\n    {\n      \"type\": {\n        \"name\": \"text\"\n      },\n      \"isSearchable\": true,\n      \"name\": \"description\",\n      \"label\": {\n        \"en\": \"Description\",\n        \"de\": \"Description\"\n      },\n      \"isRequired\": true,\n      \"inputHint\": \"MultiLine\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/{{project-key}}/product-types",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"{{project-key}}",
										"product-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "03 Create ProductType - Home Decor",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"const res = pm.response.json();",
											"",
											"pm.environment.set(\"product-type-id-decor\", res.id);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Home Decor\",\n  \"description\": \"Home decor\",\n  \"key\": \"home-decor-product-type\",\n  \"attributes\": [\n    {\n      \"type\": {\n        \"name\": \"text\"\n      },\n      \"isSearchable\": true,\n      \"name\": \"description\",\n      \"label\": {\n        \"en\": \"Description\",\n        \"de\": \"Description\"\n      },\n      \"isRequired\": true,\n      \"inputHint\": \"MultiLine\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/{{project-key}}/product-types",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"{{project-key}}",
										"product-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "04 Create Product - Truffle Infused Olive Oil",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"const res = pm.response.json();",
											"",
											"pm.environment.set(\"product-id-truffle-infused-olive-oil\", res.id);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"productType\": {\n    \"typeId\": \"product-type\",\n    \"id\": \"{{product-type-id-food}}\"\n  },\n  \"name\": {\n    \"de\": \"Truffle Infused Olive Oil\",\n    \"en\": \"Truffle Infused Olive Oil\"\n  },\n  \"slug\": {\n    \"de\": \"truffle-infused-olive-oil\",\n    \"en\": \"truffle-infused-olive-oil\"\n  },\n  \"metaTitle\": {\n    \"de\": \"Truffle Infused Olive Oil\",\n    \"en\": \"Truffle Infused Olive Oil\"\n  },\n  \"masterVariant\": {\n    \"id\": 1,\n    \"sku\": \"white-truffle-infused-olive-oil\",\n    \"key\": \"white-truffle-infused-olive-oil\",\n    \"images\": [],\n    \"attributes\": [\n      {\n        \"name\": \"description\",\n        \"value\": \"Premium extra virgin olive oil infused with the delicate and earthy flavor of white truffles. Suitable for enhancing the taste of salads, pasta, and other culinary creations.\"\n      }\n    ],\n    \"assets\": []\n  },\n  \"variants\": [\n    {\n      \"id\": 2,\n      \"sku\": \"black-truffle-infused-olive-oil\",\n      \"key\": \"black-truffle-infused-olive-oil\",\n      \"images\": [],\n      \"attributes\": [\n        {\n          \"name\": \"description\",\n          \"value\": \"Cold-pressed extra virgin olive oil infused with the bold and rich flavor of black truffles. Ideal for drizzling over dishes to add a luxurious and aromatic touch.\"\n        }\n      ],\n      \"assets\": []\n    }\n  ],\n  \"searchKeywords\": {},\n  \"publish\": true,\n  \"key\": \"truffle-infused-olive-oil\",\n  \"taxCategory\": {\n    \"typeId\": \"tax-category\",\n    \"id\": \"{{tax-category-id}}\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/{{project-key}}/products",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"{{project-key}}",
										"products"
									]
								}
							},
							"response": []
						},
						{
							"name": "05 Create Product - Premium Coffee Beans",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"const res = pm.response.json();",
											"",
											"pm.environment.set(\"product-id-premium-coffee-beans\", res.id);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"productType\": {\n    \"typeId\": \"product-type\",\n    \"id\": \"{{product-type-id-coffee}}\"\n  },\n  \"name\": {\n    \"de\": \"Premium Coffee Beans\",\n    \"en\": \"Premium Coffee Beans\"\n  },\n  \"slug\": {\n    \"de\": \"premium-coffee-beans\",\n    \"en\": \"premium-coffee-beans\"\n  },\n  \"metaTitle\": {\n    \"de\": \"Premium Coffee Beans\",\n    \"en\": \"Premium Coffee Beans\"\n  },\n  \"masterVariant\": {\n    \"id\": 1,\n    \"sku\": \"single-origin-arabica-coffee-beans\",\n    \"key\": \"single-origin-arabica-coffee-beans\",\n    \"images\": [],\n    \"attributes\": [\n      {\n        \"name\": \"description\",\n        \"value\": \"High-quality Arabica coffee beans sourced from a specific region, offering a distinct flavor profile. Suitable for coffee connoisseurs who appreciate the unique characteristics of single-origin beans.\"\n      }\n    ],\n    \"assets\": []\n  },\n  \"variants\": [\n    {\n      \"id\": 2,\n      \"sku\": \"limited-edition-espresso-blend\",\n      \"key\": \"limited-edition-espresso-blend\",\n      \"images\": [],\n      \"attributes\": [\n        {\n          \"name\": \"description\",\n          \"value\": \"A carefully crafted blend of premium coffee beans, specifically designed for espresso enthusiasts. Limited edition to provide a special and exclusive coffee experience.\"\n        }\n      ],\n      \"assets\": []\n    }\n  ],\n  \"searchKeywords\": {},\n  \"publish\": true,\n  \"key\": \"premium-coffee-beans\",\n  \"taxCategory\": {\n    \"typeId\": \"tax-category\",\n    \"id\": \"{{tax-category-id}}\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/{{project-key}}/products",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"{{project-key}}",
										"products"
									]
								}
							},
							"response": []
						},
						{
							"name": "06 Create Product - Premium Copper Kitchen Utensil Set",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"const res = pm.response.json();",
											"",
											"pm.environment.set(\"product-id-premium-copper-kitchen-utensil-set\", res.id);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"productType\": {\n    \"typeId\": \"product-type\",\n    \"id\": \"{{product-type-id-utensil}}\"\n  },\n  \"name\": {\n    \"de\": \"Premium Copper Kitchen Utensil Set\",\n    \"en\": \"Premium Copper Kitchen Utensil Set\"\n  },\n  \"slug\": {\n    \"de\": \"premium-copper-kitchen-utensil-set\",\n    \"en\": \"premium-copper-kitchen-utensil-set\"\n  },\n  \"metaTitle\": {\n    \"de\": \"Premium Copper Kitchen Utensil Set\",\n    \"en\": \"Premium Copper Kitchen Utensil Set\"\n  },\n  \"masterVariant\": {\n    \"id\": 1,\n    \"sku\": \"copper-coated-stainless-steel-cooking-spoons\",\n    \"key\": \"copper-coated-stainless-steel-cooking-spoons\",\n    \"images\": [],\n    \"attributes\": [\n      {\n        \"name\": \"description\",\n        \"value\": \"A set of cooking spoons made from durable stainless steel with a copper coating. Adds a touch of elegance to the kitchen and provides high-quality utensils for cooking.\"\n      }\n    ],\n    \"assets\": []\n  },\n  \"variants\": [\n    {\n      \"id\": 2,\n      \"sku\": \"copper-handled-silicone-cooking-utensils\",\n      \"key\": \"copper-handled-silicone-cooking-utensils\",\n      \"images\": [],\n      \"attributes\": [\n        {\n          \"name\": \"description\",\n          \"value\": \"Cooking utensils with copper-handled design for a stylish and ergonomic grip. Features silicone heads for non-stick cookware and versatility in the kitchen.\"\n        }\n      ],\n      \"assets\": []\n    }\n  ],\n  \"searchKeywords\": {},\n  \"publish\": true,\n  \"key\": \"premium-copper-kitchen-utensil-set\",\n  \"taxCategory\": {\n    \"typeId\": \"tax-category\",\n    \"id\": \"{{tax-category-id}}\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/{{project-key}}/products",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"{{project-key}}",
										"products"
									]
								}
							},
							"response": []
						},
						{
							"name": "07 Create Product - Gourmet Scented Candle Collection",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"const res = pm.response.json();",
											"",
											"pm.environment.set(\"product-id-gourmet-scented-candle-collection\", res.id);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"productType\": {\n    \"typeId\": \"product-type\",\n    \"id\": \"{{product-type-id-decor}}\"\n  },\n  \"name\": {\n    \"de\": \"Gourmet Scented Candle Collection\",\n    \"en\": \"Gourmet Scented Candle Collection\"\n  },\n  \"slug\": {\n    \"de\": \"gourmet-scented-candle-collection\",\n    \"en\": \"gourmet-scented-candle-collection\"\n  },\n  \"metaTitle\": {\n    \"de\": \"Gourmet Scented Candle Collection\",\n    \"en\": \"Gourmet Scented Candle Collection\"\n  },\n  \"masterVariant\": {\n    \"id\": 1,\n    \"sku\": \"espresso-vanilla-bean-scented-candle\",\n    \"key\": \"espresso-vanilla-bean-scented-candle\",\n    \"images\": [],\n    \"attributes\": [\n      {\n        \"name\": \"description\",\n        \"value\": \"A scented candle with the rich aroma of espresso and the sweet undertones of vanilla bean. Adds a gourmet touch to home ambiance.\"\n      }\n    ],\n    \"assets\": []\n  },\n  \"variants\": [\n    {\n      \"id\": 2,\n      \"sku\": \"lavender-early-grey-infused-candle\",\n      \"key\": \"lavender-early-grey-infused-candle\",\n      \"images\": [],\n      \"attributes\": [\n        {\n          \"name\": \"description\",\n          \"value\": \"Scented candle infused with the calming fragrance of lavender and the subtle notes of Earl Grey tea. Creates a relaxing and aromatic environment.\"\n        }\n      ],\n      \"assets\": []\n    }\n  ],\n  \"searchKeywords\": {},\n  \"publish\": true,\n  \"key\": \"gourmet-scented-candle-collection\",\n  \"taxCategory\": {\n    \"typeId\": \"tax-category\",\n    \"id\": \"{{tax-category-id}}\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/{{project-key}}/products",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"{{project-key}}",
										"products"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "08 Case 8 - Shipping",
			"item": [
				{
					"name": "01 Create ProductType - Grill",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"const res = pm.response.json();",
									"",
									"pm.environment.set(\"product-type-id-grill\", res.id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Grill\",\n  \"description\": \"Grill\",\n  \"key\": \"grill-product-type\",\n  \"attributes\": [\n    {\n      \"type\": {\n        \"name\": \"text\"\n      },\n      \"isSearchable\": true,\n      \"inputHint\": \"SingleLine\",\n      \"name\": \"brand\",\n      \"label\": {\n        \"en\": \"Brand\",\n        \"de\": \"Brand\"\n      },\n      \"isRequired\": true,\n      \"sameForAll\": true\n    },\n    {\n      \"type\": {\n        \"name\": \"text\"\n      },\n      \"isSearchable\": true,\n      \"inputHint\": \"SingleLine\",\n      \"name\": \"model\",\n      \"label\": {\n        \"en\": \"Model\",\n        \"de\": \"Model\"\n      },\n      \"isRequired\": true,\n      \"sameForAll\": true\n    },\n    {\n      \"type\": {\n        \"name\": \"text\"\n      },\n      \"isSearchable\": true,\n      \"inputHint\": \"SingleLine\",\n      \"name\": \"submodel\",\n      \"label\": {\n        \"en\": \"Sub Model\",\n        \"de\": \"Sub Model\"\n      },\n      \"isRequired\": true,\n      \"attributeConstraint\": \"Unique\"\n    },\n    {\n      \"type\": {\n        \"name\": \"boolean\"\n      },\n      \"isSearchable\": true,\n      \"inputHint\": \"SingleLine\",\n      \"name\": \"heavy_weight\",\n      \"label\": {\n        \"en\": \"Heavy weight\",\n        \"de\": \"Heavy weight\"\n      },\n      \"isRequired\": true\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/{{project-key}}/product-types",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"{{project-key}}",
								"product-types"
							]
						}
					},
					"response": []
				},
				{
					"name": "02 Create Product - Grill",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"const res = pm.response.json();",
									"",
									"pm.environment.set(\"product-id-grill\", res.id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"productType\": {\n    \"typeId\": \"product-type\",\n    \"id\": \"{{product-type-id-grill}}\"\n  },\n  \"name\": {\n    \"de\": \"Weber 502\",\n    \"en\": \"Weber 502\"\n  },\n  \"slug\": {\n    \"de\": \"weber-502\",\n    \"en\": \"weber-502\"\n  },\n  \"metaTitle\": {\n    \"de\": \"weber-502\",\n    \"en\": \"weber-502\"\n  },\n  \"masterVariant\": {\n    \"id\": 1,\n    \"sku\": \"weber-502-x21\",\n    \"key\": \"weber-502-x21\",\n    \"attributes\": [\n      {\n        \"name\": \"brand\",\n        \"value\": \"Weber\"\n      },\n      {\n        \"name\": \"model\",\n        \"value\": \"502\"\n      },\n      {\n        \"name\": \"submodel\",\n        \"value\": \"X21\"\n      },\n      {\n        \"name\": \"heavy_weight\",\n        \"value\": false\n      }\n    ],\n    \"prices\": [\n      {\n        \"value\": {\n          \"type\": \"centPrecision\",\n          \"currencyCode\": \"EUR\",\n          \"centAmount\": 12900,\n          \"fractionDigits\": 2\n        },\n        \"country\": \"DE\"\n      }\n    ],\n    \"images\": [],\n    \"assets\": []\n  },\n  \"variants\": [\n    {\n      \"id\": 2,\n      \"sku\": \"weber-502-x22\",\n      \"key\": \"weber-502-x22\",\n      \"prices\": [\n        {\n          \"value\": {\n            \"type\": \"centPrecision\",\n            \"currencyCode\": \"EUR\",\n            \"centAmount\": 14999,\n            \"fractionDigits\": 2\n          },\n          \"country\": \"DE\"\n        }\n      ],\n      \"images\": [],\n      \"attributes\": [\n        {\n          \"name\": \"brand\",\n          \"value\": \"Weber\"\n        },\n        {\n          \"name\": \"model\",\n          \"value\": \"502\"\n        },\n        {\n          \"name\": \"submodel\",\n          \"value\": \"X22\"\n        },\n        {\n          \"name\": \"heavy_weight\",\n          \"value\": false\n        }\n      ],\n      \"assets\": []\n    },\n    {\n      \"id\": 3,\n      \"sku\": \"weber-502-x23\",\n      \"key\": \"weber-502-x23\",\n      \"prices\": [\n        {\n          \"value\": {\n            \"type\": \"centPrecision\",\n            \"currencyCode\": \"EUR\",\n            \"centAmount\": 16999,\n            \"fractionDigits\": 2\n          },\n          \"country\": \"DE\"\n        }\n      ],\n      \"images\": [],\n      \"attributes\": [\n        {\n          \"name\": \"brand\",\n          \"value\": \"Weber\"\n        },\n        {\n          \"name\": \"model\",\n          \"value\": \"502\"\n        },\n        {\n          \"name\": \"submodel\",\n          \"value\": \"X23\"\n        },\n        {\n          \"name\": \"heavy_weight\",\n          \"value\": true\n        }\n      ],\n      \"assets\": []\n    }\n  ],\n  \"searchKeywords\": {},\n  \"publish\": true,\n  \"key\": \"weber-502\",\n  \"taxCategory\": {\n    \"typeId\": \"tax-category\",\n    \"id\": \"{{tax-category-id}}\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/{{project-key}}/products",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"{{project-key}}",
								"products"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "09 Case 9 - Discounts",
			"item": [
				{
					"name": "01 Case 9A",
					"item": [
						{
							"name": "01 Create Category - Kitchen Gadgets",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"const res = pm.response.json();",
											"",
											"pm.environment.set(\"category-id-gadgets\", res.id);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": {\n    \"en\": \"Kitchen Gadgets\",\n    \"de\": \"Kitchen Gadgets\"\n  },\n  \"slug\": {\n    \"en\": \"kitchen-gadgets\",\n    \"de\": \"kitchen-gadgets\"\n  },\n  \"key\": \"kitchen-gadgets\",\n  \"orderHint\": \"0.1\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/{{project-key}}/categories",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"{{project-key}}",
										"categories"
									]
								}
							},
							"response": []
						},
						{
							"name": "02 Create Product - Pancakebot",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"const res = pm.response.json();",
											"",
											"pm.environment.set(\"product-id-pancakebot\", res.id);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"productType\": {\n    \"typeId\": \"product-type\",\n    \"id\": \"{{product-type-id-equipment}}\"\n  },\n  \"categories\": [\n    {\n      \"typeId\": \"category\",\n      \"id\": \"{{category-id-gadgets}}\"\n    }\n  ],\n  \"name\": {\n    \"de\": \"Pancakebot\",\n    \"en\": \"Pancakebot\"\n  },\n  \"slug\": {\n    \"de\": \"pancakebot\",\n    \"en\": \"pancakebot\"\n  },\n  \"metaTitle\": {\n    \"de\": \"Pancakebot\",\n    \"en\": \"Pancakebot\"\n  },\n  \"masterVariant\": {\n    \"id\": 1,\n    \"sku\": \"pancakebot\",\n    \"key\": \"pancakebot\",\n    \"images\": [],\n    \"assets\": [],\n    \"prices\": [\n      {\n        \"key\": \"Pancakebot-USD-US\",\n        \"value\": {\n          \"type\": \"centPrecision\",\n          \"currencyCode\": \"USD\",\n          \"centAmount\": 31200,\n          \"fractionDigits\": 2\n        },\n        \"country\": \"US\"\n      },\n      {\n        \"key\": \"Pancakebot-EUR-DE\",\n        \"value\": {\n          \"type\": \"centPrecision\",\n          \"currencyCode\": \"EUR\",\n          \"centAmount\": 31200,\n          \"fractionDigits\": 2\n        },\n        \"country\": \"DE\"\n      }\n    ]\n  },\n  \"searchKeywords\": {},\n  \"publish\": true,\n  \"key\": \"pancakebot\",\n  \"taxCategory\": {\n    \"typeId\": \"tax-category\",\n    \"id\": \"{{tax-category-id}}\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/{{project-key}}/products",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"{{project-key}}",
										"products"
									]
								}
							},
							"response": []
						},
						{
							"name": "03 Create Product - Egg Separator",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"const res = pm.response.json();",
											"",
											"pm.environment.set(\"product-id-egg-separator\", res.id);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"productType\": {\n    \"typeId\": \"product-type\",\n    \"id\": \"{{product-type-id-equipment}}\"\n  },\n  \"categories\": [\n    {\n      \"typeId\": \"category\",\n      \"id\": \"{{category-id-gadgets}}\"\n    }\n  ],\n  \"name\": {\n    \"de\": \"Egg Separator\",\n    \"en\": \"Egg Separator\"\n  },\n  \"slug\": {\n    \"de\": \"egg-separator\",\n    \"en\": \"egg-separator\"\n  },\n  \"metaTitle\": {\n    \"de\": \"Egg Separator\",\n    \"en\": \"Egg Separator\"\n  },\n  \"masterVariant\": {\n    \"id\": 1,\n    \"sku\": \"egg-separator\",\n    \"key\": \"egg-separator\",\n    \"images\": [],\n    \"assets\": [],\n    \"prices\": [\n      {\n        \"key\": \"egg-separator-USD-US\",\n        \"value\": {\n          \"type\": \"centPrecision\",\n          \"currencyCode\": \"USD\",\n          \"centAmount\": 800,\n          \"fractionDigits\": 2\n        },\n        \"country\": \"US\"\n      },\n      {\n        \"key\": \"egg-separator-EUR-DE\",\n        \"value\": {\n          \"type\": \"centPrecision\",\n          \"currencyCode\": \"EUR\",\n          \"centAmount\": 800,\n          \"fractionDigits\": 2\n        },\n        \"country\": \"DE\"\n      }\n    ]\n  },\n  \"searchKeywords\": {},\n  \"publish\": true,\n  \"key\": \"egg-separator\",\n  \"taxCategory\": {\n    \"typeId\": \"tax-category\",\n    \"id\": \"{{tax-category-id}}\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/{{project-key}}/products",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"{{project-key}}",
										"products"
									]
								}
							},
							"response": []
						},
						{
							"name": "04 Create Product - Pocket Sized Nutrition Scale",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"const res = pm.response.json();",
											"",
											"pm.environment.set(\"product-id-pocket-size-nutrition-scale\", res.id);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"productType\": {\n    \"typeId\": \"product-type\",\n    \"id\": \"{{product-type-id-equipment}}\"\n  },\n  \"categories\": [\n    {\n      \"typeId\": \"category\",\n      \"id\": \"{{category-id-gadgets}}\"\n    }\n  ],\n  \"name\": {\n    \"de\": \"Pocket Sized Nutrition Scale\",\n    \"en\": \"Pocket Sized Nutrition Scale\"\n  },\n  \"slug\": {\n    \"de\": \"pocket-sized-nutrition-scale\",\n    \"en\": \"pocket-sized-nutrition-scale\"\n  },\n  \"metaTitle\": {\n    \"de\": \"Pocket Sized Nutrition Scale\",\n    \"en\": \"Pocket Sized Nutrition Scale\"\n  },\n  \"masterVariant\": {\n    \"id\": 1,\n    \"sku\": \"pocket-sized-nutrition-scale\",\n    \"key\": \"pocket-sized-nutrition-scale\",\n    \"images\": [],\n    \"assets\": [],\n    \"prices\": [\n      {\n        \"key\": \"pocket-sized-nutrition-scale-USD-US\",\n        \"value\": {\n          \"type\": \"centPrecision\",\n          \"currencyCode\": \"USD\",\n          \"centAmount\": 1000,\n          \"fractionDigits\": 2\n        },\n        \"country\": \"US\"\n      },\n      {\n        \"key\": \"pocket-sized-nutrition-scale-EUR-DE\",\n        \"value\": {\n          \"type\": \"centPrecision\",\n          \"currencyCode\": \"EUR\",\n          \"centAmount\": 1000,\n          \"fractionDigits\": 2\n        },\n        \"country\": \"DE\"\n      }\n    ]\n  },\n  \"searchKeywords\": {},\n  \"publish\": true,\n  \"key\": \"pocket-sized-nutrition-scale\",\n  \"taxCategory\": {\n    \"typeId\": \"tax-category\",\n    \"id\": \"{{tax-category-id}}\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/{{project-key}}/products",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"{{project-key}}",
										"products"
									]
								}
							},
							"response": []
						},
						{
							"name": "05 Create Product - Accusharp Knife Sharpener",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"const res = pm.response.json();",
											"",
											"pm.environment.set(\"product-id-accusharp-knife-sharpener\", res.id);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"productType\": {\n    \"typeId\": \"product-type\",\n    \"id\": \"{{product-type-id-equipment}}\"\n  },\n  \"categories\": [\n    {\n      \"typeId\": \"category\",\n      \"id\": \"{{category-id-gadgets}}\"\n    }\n  ],\n  \"name\": {\n    \"de\": \"Accusharp Knife Sharpener\",\n    \"en\": \"Accusharp Knife Sharpener\"\n  },\n  \"slug\": {\n    \"de\": \"accusharp-knife-sharpener\",\n    \"en\": \"accusharp-knife-sharpener\"\n  },\n  \"metaTitle\": {\n    \"de\": \"Accusharp Knife Sharpener\",\n    \"en\": \"Accusharp Knife Sharpener\"\n  },\n  \"masterVariant\": {\n    \"id\": 1,\n    \"sku\": \"accusharp-knife-sharpener\",\n    \"key\": \"accusharp-knife-sharpener\",\n    \"images\": [],\n    \"assets\": []\n  },\n  \"searchKeywords\": {},\n  \"publish\": true,\n  \"key\": \"accusharp-knife-sharpener\",\n  \"taxCategory\": {\n    \"typeId\": \"tax-category\",\n    \"id\": \"{{tax-category-id}}\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/{{project-key}}/products",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"{{project-key}}",
										"products"
									]
								}
							},
							"response": []
						},
						{
							"name": "06 Create Product - Garlic Press",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"const res = pm.response.json();",
											"",
											"pm.environment.set(\"product-id-garlic-press\", res.id);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"productType\": {\n    \"typeId\": \"product-type\",\n    \"id\": \"{{product-type-id-equipment}}\"\n  },\n  \"categories\": [\n    {\n      \"typeId\": \"category\",\n      \"id\": \"{{category-id-gadgets}}\"\n    }\n  ],\n  \"name\": {\n    \"de\": \"Garlic Press\",\n    \"en\": \"Garlic Press\"\n  },\n  \"slug\": {\n    \"de\": \"garlic-press\",\n    \"en\": \"garlic-press\"\n  },\n  \"metaTitle\": {\n    \"de\": \"Garlic Press\",\n    \"en\": \"Garlic Press\"\n  },\n  \"masterVariant\": {\n    \"id\": 1,\n    \"sku\": \"garlic-press\",\n    \"key\": \"garlic-press\",\n    \"images\": [],\n    \"assets\": [],\n    \"prices\": [\n      {\n        \"key\": \"garlic-press-USD-US\",\n        \"value\": {\n          \"type\": \"centPrecision\",\n          \"currencyCode\": \"USD\",\n          \"centAmount\": 750,\n          \"fractionDigits\": 2\n        },\n        \"country\": \"US\"\n      },\n      {\n        \"key\": \"garlic-press-EUR-DE\",\n        \"value\": {\n          \"type\": \"centPrecision\",\n          \"currencyCode\": \"EUR\",\n          \"centAmount\": 750,\n          \"fractionDigits\": 2\n        },\n        \"country\": \"DE\"\n      }\n    ]\n  },\n  \"searchKeywords\": {},\n  \"publish\": true,\n  \"key\": \"garlic-press\",\n  \"taxCategory\": {\n    \"typeId\": \"tax-category\",\n    \"id\": \"{{tax-category-id}}\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/{{project-key}}/products",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"{{project-key}}",
										"products"
									]
								}
							},
							"response": []
						},
						{
							"name": "07 Create Product - Edible Ink Cartridge",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"const res = pm.response.json();",
											"",
											"pm.environment.set(\"product-id-edible-ink-cartrige\", res.id);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"productType\": {\n    \"typeId\": \"product-type\",\n    \"id\": \"{{product-type-id-equipment}}\"\n  },\n  \"categories\": [\n    {\n      \"typeId\": \"category\",\n      \"id\": \"{{category-id-gadgets}}\"\n    }\n  ],\n  \"name\": {\n    \"de\": \"Edible Ink Cartridge\",\n    \"en\": \"Edible Ink Cartridge\"\n  },\n  \"slug\": {\n    \"de\": \"edible-ink-cartridge\",\n    \"en\": \"edible-ink-cartridge\"\n  },\n  \"metaTitle\": {\n    \"de\": \"Edible Ink Cartridge\",\n    \"en\": \"Edible Ink Cartridge\"\n  },\n  \"masterVariant\": {\n    \"id\": 1,\n    \"sku\": \"edible-ink-cartridge\",\n    \"key\": \"edible-ink-cartridge\",\n    \"images\": [],\n    \"assets\": [],\n    \"prices\": [\n      {\n        \"key\": \"edible-ink-cartridge-USD-US\",\n        \"value\": {\n          \"type\": \"centPrecision\",\n          \"currencyCode\": \"USD\",\n          \"centAmount\": 3750,\n          \"fractionDigits\": 2\n        },\n        \"country\": \"US\"\n      },\n      {\n        \"key\": \"edible-ink-cartridge-EUR-DE\",\n        \"value\": {\n          \"type\": \"centPrecision\",\n          \"currencyCode\": \"EUR\",\n          \"centAmount\": 3750,\n          \"fractionDigits\": 2\n        },\n        \"country\": \"DE\"\n      }\n    ]\n  },\n  \"searchKeywords\": {},\n  \"publish\": true,\n  \"key\": \"edible-ink-cartridge\",\n  \"taxCategory\": {\n    \"typeId\": \"tax-category\",\n    \"id\": \"{{tax-category-id}}\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/{{project-key}}/products",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"{{project-key}}",
										"products"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "02 Case 9B",
					"item": [
						{
							"name": "01 Create Category - Chocolate Heaven",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"const res = pm.response.json();",
											"",
											"pm.environment.set(\"category-id-heaven\", res.id);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": {\n    \"en\": \"Chocolate Heaven\",\n    \"de\": \"Chocolate Heaven\"\n  },\n  \"key\": \"chocolate-heaven\",\n  \"slug\": {\n    \"en\": \"chocolate-heaven\",\n    \"de\": \"chocolate-heaven\"\n  },\n  \"orderHint\": \"0.2\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/{{project-key}}/categories",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"{{project-key}}",
										"categories"
									]
								}
							},
							"response": []
						},
						{
							"name": "02 Create ProductType - Designer Chocolate",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"const res = pm.response.json();",
											"",
											"pm.environment.set(\"product-type-id-chocolate\", res.id);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Designer Chocolate\",\n  \"description\": \"Designer Chocolate\",\n  \"key\": \"designer-chocolate-product-type\",\n  \"attributes\": [\n    {\n      \"type\": {\n        \"name\": \"boolean\"\n      },\n      \"isSearchable\": true,\n      \"inputHint\": \"SingleLine\",\n      \"name\": \"limited_edition\",\n      \"label\": {\n        \"en\": \"Limited Edition\",\n        \"de\": \"Limited Edition\"\n      },\n      \"isRequired\": true\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/{{project-key}}/product-types",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"{{project-key}}",
										"product-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "03 Create Product - Chocolate Scrumptious",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"const res = pm.response.json();",
											"",
											"pm.environment.set(\"product-id-chocolate-scrumptious\", res.id);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"productType\": {\n    \"typeId\": \"product-type\",\n    \"id\": \"{{product-type-id-chocolate}}\"\n  },\n  \"categories\": [\n    {\n      \"typeId\": \"category\",\n      \"id\": \"{{category-id-heaven}}\"\n    }\n  ],\n  \"name\": {\n    \"de\": \"Chocolate Scrumptious\",\n    \"en\": \"Chocolate Scrumptious\"\n  },\n  \"slug\": {\n    \"de\": \"chocolate-scrumptious\",\n    \"en\": \"chocolate-scrumptious\"\n  },\n  \"metaTitle\": {\n    \"de\": \"Chocolate Scrumptious\",\n    \"en\": \"Chocolate Scrumptious\"\n  },\n  \"masterVariant\": {\n    \"id\": 1,\n    \"sku\": \"chocolate-scrumptious\",\n    \"key\": \"chocolate-scrumptious\",\n    \"images\": [],\n    \"assets\": [],\n    \"attributes\": [\n      {\n        \"name\": \"limited_edition\",\n        \"value\": true\n      }\n    ],\n    \"prices\": [\n      {\n        \"key\": \"chocolate-scrumptious-USD-US\",\n        \"value\": {\n          \"type\": \"centPrecision\",\n          \"currencyCode\": \"USD\",\n          \"centAmount\": 3750,\n          \"fractionDigits\": 2\n        },\n        \"country\": \"US\"\n      },\n      {\n        \"key\": \"chocolate-scrumptious-EUR-DE\",\n        \"value\": {\n          \"type\": \"centPrecision\",\n          \"currencyCode\": \"EUR\",\n          \"centAmount\": 3750,\n          \"fractionDigits\": 2\n        },\n        \"country\": \"DE\"\n      }\n    ]\n  },\n  \"searchKeywords\": {},\n  \"publish\": true,\n  \"key\": \"chocolate-scrumptious\",\n  \"taxCategory\": {\n    \"typeId\": \"tax-category\",\n    \"id\": \"{{tax-category-id}}\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/{{project-key}}/products",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"{{project-key}}",
										"products"
									]
								}
							},
							"response": []
						},
						{
							"name": "04 Create Product - Chocolate Elegant",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"const res = pm.response.json();",
											"",
											"pm.environment.set(\"product-id-chocolate-elegant\", res.id);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\n{\n    \"productType\":{\n        \"typeId\":\"product-type\",\n        \"id\":\"{{product-type-id-chocolate}}\"\n    },\n    \"categories\" : [ {\n      \"typeId\" : \"category\",\n      \"id\" : \"{{category-id-heaven}}\"\n    } ],\n    \"name\":{\n        \"de\":\"Chocolate Elegant\",\n        \"en\":\"Chocolate Elegant\"\n    },\n    \"slug\":{\n        \"de\":\"chocolate-elegant\",\n        \"en\":\"chocolate-elegant\"\n    },\n    \"metaTitle\":{\n        \"de\":\"Chocolate Elegant\",\n        \"en\":\"Chocolate Elegant\"\n    },\n    \"masterVariant\":{\n        \"id\":1,\n        \"sku\":\"chocolate-elegant\",\n        \"key\":\"chocolate-elegant\",\n        \"images\":[],\n       \"assets\":[],\n        \"attributes\":[\n            {\n            \"name\":\"limited_edition\",\n            \"value\":false\n            }\n        ],\n     \"prices\": [\n              {\n                \"key\": \"chocolate-elegant-USD-US\",\n                \"value\": {\n                  \"type\": \"centPrecision\",\n                  \"currencyCode\": \"USD\",\n                  \"centAmount\": 2750,\n                  \"fractionDigits\": 2\n                },\n                \"country\": \"US\"\n              },\n              {\n                \"key\": \"chocolate-elegant-EUR-DE\",\n                \"value\": {\n                  \"type\": \"centPrecision\",\n                  \"currencyCode\": \"EUR\",\n                  \"centAmount\": 2750,\n                  \"fractionDigits\": 2\n                },\n                \"country\": \"DE\"\n              }\n            ]\n    },\n    \"searchKeywords\":{\n        \n    },\n    \"publish\": true,\n    \"key\":\"chocolate-elegant\",\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/{{project-key}}/products",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"{{project-key}}",
										"products"
									]
								}
							},
							"response": []
						},
						{
							"name": "05 Create Product - Chocolate Marvel",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"const res = pm.response.json();",
											"",
											"pm.environment.set(\"product-id-chocolate-marvel\", res.id);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"productType\": {\n    \"typeId\": \"product-type\",\n    \"id\": \"{{product-type-id-chocolate}}\"\n  },\n  \"categories\": [\n    {\n      \"typeId\": \"category\",\n      \"id\": \"{{category-id-heaven}}\"\n    }\n  ],\n  \"name\": {\n    \"de\": \"Chocolate Marvel\",\n    \"en\": \"Chocolate Marvel\"\n  },\n  \"slug\": {\n    \"de\": \"chocolate-marvel\",\n    \"en\": \"chocolate-marvel\"\n  },\n  \"metaTitle\": {\n    \"de\": \"Chocolate Marvel\",\n    \"en\": \"Chocolate Marvel\"\n  },\n  \"masterVariant\": {\n    \"id\": 1,\n    \"sku\": \"chocolate-marvel\",\n    \"key\": \"chocolate-marvel\",\n    \"images\": [],\n    \"assets\": [],\n    \"attributes\": [\n      {\n        \"name\": \"limited_edition\",\n        \"value\": false\n      }\n    ],\n    \"prices\": [\n      {\n        \"key\": \"chocolate-marvel-USD-US\",\n        \"value\": {\n          \"type\": \"centPrecision\",\n          \"currencyCode\": \"USD\",\n          \"centAmount\": 2750,\n          \"fractionDigits\": 2\n        },\n        \"country\": \"US\"\n      },\n      {\n        \"key\": \"chocolate-marvel-EUR-DE\",\n        \"value\": {\n          \"type\": \"centPrecision\",\n          \"currencyCode\": \"EUR\",\n          \"centAmount\": 2750,\n          \"fractionDigits\": 2\n        },\n        \"country\": \"DE\"\n      }\n    ]\n  },\n  \"searchKeywords\": {},\n  \"publish\": true,\n  \"key\": \"chocolate-marvel\",\n  \"taxCategory\": {\n    \"typeId\": \"tax-category\",\n    \"id\": \"{{tax-category-id}}\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/{{project-key}}/products",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"{{project-key}}",
										"products"
									]
								}
							},
							"response": []
						},
						{
							"name": "06 Create Product - Chocolate Exquisite",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"const res = pm.response.json();",
											"",
											"pm.environment.set(\"product-id-chocolate-exquisite\", res.id);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"productType\": {\n    \"typeId\": \"product-type\",\n    \"id\": \"{{product-type-id-chocolate}}\"\n  },\n  \"categories\": [\n    {\n      \"typeId\": \"category\",\n      \"id\": \"{{category-id-heaven}}\"\n    }\n  ],\n  \"name\": {\n    \"de\": \"Chocolate Exquisite\",\n    \"en\": \"Chocolate Exquisite\"\n  },\n  \"slug\": {\n    \"de\": \"chocolate-exquisite\",\n    \"en\": \"chocolate-exquisite\"\n  },\n  \"metaTitle\": {\n    \"de\": \"Chocolate Exquisite\",\n    \"en\": \"Chocolate Exquisite\"\n  },\n  \"masterVariant\": {\n    \"id\": 1,\n    \"sku\": \"chocolate-exquisite\",\n    \"key\": \"chocolate-exquisite\",\n    \"images\": [],\n    \"assets\": [],\n    \"attributes\": [\n      {\n        \"name\": \"limited_edition\",\n        \"value\": true\n      }\n    ],\n    \"prices\": [\n      {\n        \"key\": \"chocolate-exquisite-USD-US\",\n        \"value\": {\n          \"type\": \"centPrecision\",\n          \"currencyCode\": \"USD\",\n          \"centAmount\": 3750,\n          \"fractionDigits\": 2\n        },\n        \"country\": \"US\"\n      },\n      {\n        \"key\": \"chocolate-exquisite-EUR-DE\",\n        \"value\": {\n          \"type\": \"centPrecision\",\n          \"currencyCode\": \"EUR\",\n          \"centAmount\": 3750,\n          \"fractionDigits\": 2\n        },\n        \"country\": \"DE\"\n      }\n    ]\n  },\n  \"searchKeywords\": {},\n  \"publish\": true,\n  \"key\": \"chocolate-exquisite\",\n  \"taxCategory\": {\n    \"typeId\": \"tax-category\",\n    \"id\": \"{{tax-category-id}}\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/{{project-key}}/products",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"{{project-key}}",
										"products"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "20 Misc Demos",
			"item": [
				{
					"name": "01 Create Custom Type",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"const res = pm.response.json();",
									"",
									"pm.environment.set(\"type-id\", res.id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"key\": \"customer-info\",\n  \"name\": {\n    \"de\": \"Customer Info\",\n    \"en\": \"Customer Info\"\n  },\n  \"resourceTypeIds\": [\n    \"customer\"\n  ],\n  \"fieldDefinitions\": [\n    {\n      \"name\": \"shoesize\",\n      \"label\": {\n        \"de\": \"Shoe Size\",\n        \"en\": \"Shoe Size\"\n      },\n      \"required\": false,\n      \"type\": {\n        \"name\": \"Number\"\n      },\n      \"inputHint\": \"SingleLine\"\n    },\n    {\n      \"name\": \"shirtsize\",\n      \"label\": {\n        \"de\": \"Shirt Size\",\n        \"en\": \"Shirt Size\"\n      },\n      \"required\": false,\n      \"type\": {\n        \"name\": \"Number\"\n      },\n      \"inputHint\": \"SingleLine\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/{{project-key}}/types",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"{{project-key}}",
								"types"
							]
						}
					},
					"response": []
				},
				{
					"name": "02 Create CustomObject - External Prices 01",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"const res = pm.response.json();",
									"",
									"pm.environment.set(\"custom-object-id-01\", res.id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"container\": \"ExternalPrices\",\n  \"key\": \"cust0001prod0001\",\n  \"value\": [\n    {\n      \"VariantID\": \"1\",\n      \"MinQuantity\": \"5\",\n      \"Price\": \"15.99 USD\"\n    },\n    {\n      \"VariantID\": \"1\",\n      \"MinQuantity\": \"10\",\n      \"Price\": \"14.99 USD\"\n    },\n    {\n      \"VariantID\": \"1\",\n      \"MinQuantity\": \"15\",\n      \"Price\": \"13.99 USD\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/{{project-key}}/custom-objects",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"{{project-key}}",
								"custom-objects"
							]
						}
					},
					"response": []
				},
				{
					"name": "03 Create CustomObject - External Prices 02",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"const res = pm.response.json();",
									"",
									"pm.environment.set(\"custom-object-id-02\", res.id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"container\": \"ExternalPrices\",\n  \"key\": \"cust0002prod0001\",\n  \"value\": [\n    {\n      \"VariantID\": \"1\",\n      \"MinQuantity\": \"5\",\n      \"Price\": \"16.99 USD\"\n    },\n    {\n      \"VariantID\": \"1\",\n      \"MinQuantity\": \"10\",\n      \"Price\": \"15.99 USD\"\n    },\n    {\n      \"VariantID\": \"1\",\n      \"MinQuantity\": \"15\",\n      \"Price\": \"14.99 USD\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/{{project-key}}/custom-objects",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"{{project-key}}",
								"custom-objects"
							]
						}
					},
					"response": []
				},
				{
					"name": "04 Query CustomObjects for External Prices",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-host}}/{{project-key}}/custom-objects/ExternalPrices",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"{{project-key}}",
								"custom-objects",
								"ExternalPrices"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{ctp-access-token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	]
}