{
	"info": {
		"_postman_id": "7613b8c8-5c84-4f42-be23-0f20f19e2099",
		"name": "Training",
		"description": "## How-to Use\n\nTo be used for quick data creation in the trainings.\nBefore sending any request, please make sure that you have a valid token.\n\n- Import the environment file from https://github.com/commercetools/commercetools-postman-collection/blob/master/api/template.json into postman. \n- Create an api client (use admin template) for your project in the Merchant Center.\n- Set the `client_id` and `client_secret` in the `Commercetools template` environment from top-right (eye icon).\n- Send the request `Obtain access token`.\n- Send the request Get TaxCategory",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "14511321"
	},
	"item": [
		{
			"name": "Happy Garden",
			"item": [
				{
					"name": "00 Get TaxCategory",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"tax-category-id\", data.results[0].id); ",
									"    pm.environment.set(\"tax-category-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"tax-category-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"tax-category-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"tax-category-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"tax-category-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/tax-categories",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"tax-categories"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Get TaxCategory by key"
					},
					"response": []
				},
				{
					"name": "00 Create Category - seeds",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"category-id-seeds\", data.results[0].id); ",
									"    pm.environment.set(\"category-version-seeds\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"category-key-seeds\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"category-version-seeds\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"category-id-seeds\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"category-key-seeds\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"key\":\"plant-seeds\",\n    \"name\" : {\n        \"en\" : \"Seeds\",\n        \"de\" : \"Seeds\"\n    },\n    \"slug\" : {\n        \"en\" : \"plant-seeds\",\n        \"de\" : \"plant-seeds\"\n    },\n    \"orderHint\" : \"0.1\"\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/categories",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"categories"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Creating a category produces the CategoryCreated message."
					},
					"response": []
				},
				{
					"name": "00 Create Category - veg seeds",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"category-id-veg-seeds\", data.results[0].id); ",
									"    pm.environment.set(\"category-version-veg-seeds\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"category-key-veg-seeds\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"category-version-veg-seeds\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"category-id-veg-seeds\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"category-key-veg-seeds\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"key\":\"veg-seeds\",\n    \"name\" : {\n        \"en\" : \"Vegetable Seeds\",\n        \"de\" : \"Vegetable Seeds\"\n    },\n    \"slug\" : {\n        \"en\" : \"vegetable-seeds\",\n        \"de\" : \"vegetable-seeds\"\n    },\n    \"orderHint\" : \"0.2\"\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/categories",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"categories"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Creating a category produces the CategoryCreated message."
					},
					"response": []
				},
				{
					"name": "01 Create ProductType - flower seeds",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"product-type-id-flower\", data.results[0].id); ",
									"    pm.environment.set(\"product-type-version-flower\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"product-type-key-flower\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"product-type-version-flower\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"product-type-id-flower\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"product-type-key-flower\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Flower seeds\",\n  \"description\": \"Flower seeds\",\n  \"key\": \"flower-seeds-producttype\",\n  \"attributes\": [\n    {\n      \"name\": \"size\",\n      \"label\": {\n        \"de\": \"Size\",\n        \"en\": \"Size\"\n      },\n      \"type\": {\n        \"name\": \"text\"\n      },\n      \"attributeConstraint\": \"CombinationUnique\",\n      \"isRequired\": true,\n      \"isSearchable\": true,\n      \"inputTip\": {\n        \"en\": \"\",\n        \"de\": \"\"\n      },\n      \"inputHint\": \"SingleLine\"\n    },\n    {\n      \"name\": \"weight_in_kg\",\n      \"label\": {\n        \"de\": \"Weight in Kg\",\n        \"en\": \"Weight in Kg\"\n      },\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"attributeConstraint\": \"CombinationUnique\",\n      \"isRequired\": true,\n      \"isSearchable\": true,\n      \"inputTip\": {\n        \"en\": \"\",\n        \"de\": \"\"\n      }\n    }\n  ]\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/product-types",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"product-types"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Create ProductType"
					},
					"response": []
				},
				{
					"name": "02 Create ProductType - veg seeds",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"product-type-id-veg\", data.results[0].id); ",
									"    pm.environment.set(\"product-type-version-veg\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"product-type-key-veg\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"product-type-version-veg\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"product-type-id-veg\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"product-type-key-veg\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Vegetable seeds\",\n  \"description\": \"Vegetable seeds\",\n  \"key\": \"veg-seeds-producttype\",\n  \"attributes\": [\n    {\n      \"name\": \"size\",\n      \"label\": {\n        \"de\": \"Size\",\n        \"en\": \"Size\"\n      },\n      \"type\": {\n        \"name\": \"text\"\n      },\n      \"attributeConstraint\": \"CombinationUnique\",\n      \"isRequired\": true,\n      \"isSearchable\": true,\n      \"inputTip\": {\n        \"en\": \"\",\n        \"de\": \"\"\n      },\n      \"inputHint\": \"SingleLine\"\n    },\n    {\n      \"name\": \"weight_in_kg\",\n      \"label\": {\n        \"de\": \"Weight in Kg\",\n        \"en\": \"Weight in Kg\"\n      },\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"attributeConstraint\": \"CombinationUnique\",\n      \"isRequired\": true,\n      \"isSearchable\": true,\n      \"inputTip\": {\n        \"en\": \"\",\n        \"de\": \"\"\n      }\n    }\n  ]\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/product-types",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"product-types"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Create ProductType"
					},
					"response": []
				},
				{
					"name": "03 Create ProductType - herbs seeds",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"product-type-id-herb\", data.results[0].id); ",
									"    pm.environment.set(\"product-type-version-herb\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"product-type-key-herb\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"product-type-version-herb\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"product-type-id-herb\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"product-type-key-herb\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Herb seeds\",\n  \"description\": \"Herb seeds\",\n  \"key\": \"herb-seeds-producttype\",\n  \"attributes\": [\n    {\n      \"name\": \"size\",\n      \"label\": {\n        \"de\": \"Size\",\n        \"en\": \"Size\"\n      },\n      \"type\": {\n        \"name\": \"text\"\n      },\n      \"attributeConstraint\": \"CombinationUnique\",\n      \"isRequired\": true,\n      \"isSearchable\": true,\n      \"inputTip\": {\n        \"en\": \"\",\n        \"de\": \"\"\n      },\n      \"inputHint\": \"SingleLine\"\n    },\n    {\n      \"name\": \"weight_in_kg\",\n      \"label\": {\n        \"de\": \"Weight in Kg\",\n        \"en\": \"Weight in Kg\"\n      },\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"attributeConstraint\": \"CombinationUnique\",\n      \"isRequired\": true,\n      \"isSearchable\": true,\n      \"inputTip\": {\n        \"en\": \"\",\n        \"de\": \"\"\n      }\n    }\n  ]\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/product-types",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"product-types"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Create ProductType"
					},
					"response": []
				},
				{
					"name": "04 Create Product - tulip",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"product-id\", data.results[0].id); ",
									"    pm.environment.set(\"product-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"product-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"product-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"product-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"product-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"productType\":{\n        \"typeId\":\"product-type\",\n        \"id\":\"{{product-type-id-flower}}\"\n    },\n    \"name\":{\n        \"en\":\"Tulip seeds\",\n        \"de\":\"Tulip seeds\"\n    },\n    \"description\":{\n        \"en\":\"Tulip seeds\"\n    },\n    \"categories\":[\n        {\n            \"typeId\":\"category\",\n            \"id\":\"{{category-id-seeds}}\"\n        }\n    ],\n    \"categoryOrderHints\":{\n        \n    },\n    \"slug\":{\n        \"en\":\"tulip-seeds\",\n        \"de\":\"tulip-seed\"\n    },\n    \"metaDescription\":{\n        \"en\":\"Tulip seeds\",\n        \"de\":\"Tulip seeds\"\n    },\n    \"masterVariant\":{\n        \"id\":1,\n        \"sku\":\"TULIPSEED01\",\n        \"key\":\"TULIPSEED01\",\n        \"prices\":[\n            {\n            \"key\":\"TulipSeed01Price01\",\n            \"value\":{\n                \"type\":\"centPrecision\",\n                \"currencyCode\":\"EUR\",\n                \"centAmount\":2710,\n                \"fractionDigits\":2\n            },\n            \"country\":\"DE\"\n            },\n            {\n           \"key\":\"TulipSeed01Price02\",\n            \"value\":{\n                \"type\":\"centPrecision\",\n                \"currencyCode\":\"EUR\",\n                \"centAmount\":5900,\n                \"fractionDigits\":2\n            }\n            }\n        ],\n        \"images\":[\n            \n        ],\n        \"attributes\":[\n            {\n            \"name\":\"size\",\n            \"value\":\"package\"\n            },\n            {\n            \"name\":\"weight_in_kg\",\n            \"value\":0.5\n            }\n        ],\n        \"assets\":[\n            \n        ],\n        \"availability\":{\n            \"isOnStock\":true,\n            \"restockableInDays\":4,\n            \"availableQuantity\":10\n            }\n        },\n    \"variants\":[\n        {\n            \"id\":2,\n            \"sku\":\"TULIPSEED02\",\n            \"key\":\"TULIPSEED02\",\n            \"prices\":[\n            {\n                \"key\":\"TulipSeed02Price01\",\n               \"value\":{\n                    \"type\":\"centPrecision\",\n                    \"currencyCode\":\"EUR\",\n                    \"centAmount\":3000,\n                    \"fractionDigits\":2\n                },\n                \"country\":\"DE\"\n            }\n            ],\n            \"images\":[\n            \n            ],\n            \"attributes\":[\n            {\n                \"name\":\"size\",\n                \"value\":\"box\"\n            },\n            {\n                \"name\":\"weight_in_kg\",\n                \"value\":1.5\n            }\n            ],\n            \"assets\":[\n            \n            ],\n            \"availability\":{\n            \"isOnStock\":true,\n            \"restockableInDays\":2,\n            \"availableQuantity\":10\n            }\n        },\n        {\n            \"id\":3,\n            \"sku\":\"TULIPSEED03\",\n            \"key\":\"TULIPSEED03\",\n            \"prices\":[\n            {\n                \"key\":\"TulipSeed03Price01\",\n                \"value\":{\n                    \"type\":\"centPrecision\",\n                    \"currencyCode\":\"EUR\",\n                    \"centAmount\":1337,\n                    \"fractionDigits\":2\n                },\n                \"country\":\"DE\"\n            }\n            ],\n            \"images\":[\n            \n            ],\n            \"attributes\":[\n            {\n                \"name\":\"size\",\n                \"value\":\"sack\"\n            },\n            {\n                \"name\":\"weight_in_kg\",\n                \"value\":10\n            }\n            ],\n            \"assets\":[\n            \n            ]\n        }\n    ],\n    \"searchKeywords\":{\n        \"en\":[\n            {\n            \"text\":\"tulip\"\n            },\n            {\n            \"text\":\"flower\"\n            },\n            {\n            \"text\":\"seeds\"\n            }\n        ]\n    },\n    \"hasStagedChanges\":false,\n    \"published\":true,\n    \"key\":\"tulip-seed-product\",\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    }\n}\n"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/products",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"products"
							],
							"query": [
								{
									"key": "priceCurrency",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCountry",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCustomerGroup",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceChannel",
									"value": "",
									"disabled": true
								},
								{
									"key": "localeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "storeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "To create a new product, send a representation that is going to become the initial staged representation\nof the new product in the master catalog. If price selection query parameters are provided,\nthe selected prices will be added to the response.\n"
					},
					"response": []
				},
				{
					"name": "04 Create Product - basil",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"product-id\", data.results[0].id); ",
									"    pm.environment.set(\"product-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"product-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"product-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"product-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"product-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"productType\":{\n        \"typeId\":\"product-type\",\n        \"id\":\"{{product-type-id-herb}}\"    },\n    \"name\":{\n        \"en\":\"Basil seeds\",\n        \"de\":\"Basil seeds\"\n    },\n    \"description\":{\n        \"en\":\"Basil seeds\",\n        \"de\":\"Basil seeds\"\n    },\n    \"categories\":[\n        {\n            \"typeId\":\"category\",\n            \"id\":\"{{category-id-seeds}}\"\n        }\n    ],\n    \"categoryOrderHints\":{\n        \n    },\n    \"slug\":{\n        \"en\":\"basil-seeds\",\n        \"de\":\"basil-seed\"\n    },\n    \"metaDescription\":{\n        \"en\":\"Basil seeds\",\n        \"de\":\"Basil seeds\"\n    },\n    \"masterVariant\":{\n        \"id\":1,\n        \"sku\":\"BASILSEED01\",\n        \"key\":\"BASILSEED01\",\n        \"prices\":[\n            {\n           \"key\":\"BasilSeed01Price01\",\n           \"value\":{\n                \"type\":\"centPrecision\",\n                \"currencyCode\":\"EUR\",\n                \"centAmount\":2088,\n                \"fractionDigits\":2\n            },\n            \"country\":\"DE\"\n            }\n        ],\n        \"images\":[\n            \n        ],\n        \"attributes\":[\n            {\n            \"name\":\"size\",\n            \"value\":\"package\"\n            },\n            {\n            \"name\":\"weight_in_kg\",\n            \"value\":1\n            }\n        ],\n        \"assets\":[\n            \n        ]\n    },\n    \"variants\":[\n        {\n            \"id\":2,\n            \"sku\":\"BASILSEED02\",\n            \"key\":\"BASILSEED02\",\n            \"prices\":[\n            {\n                \"key\":\"BasilSeed02Price01\",\n                \"value\":{\n                    \"type\":\"centPrecision\",\n                    \"currencyCode\":\"EUR\",\n                    \"centAmount\":18000,\n                    \"fractionDigits\":2\n                },\n                \"country\":\"DE\"\n            }\n            ],\n            \"images\":[\n            \n            ],\n            \"attributes\":[\n            {\n                \"name\":\"size\",\n                \"value\":\"box\"\n            },\n            {\n                \"name\":\"weight_in_kg\",\n                \"value\":10\n            }\n            ],\n            \"assets\":[\n            \n            ]\n        }\n    ],\n    \"searchKeywords\":{\n        \"de\":[\n            \n        ],\n        \"en\":[\n            {\n            \"text\":\"basil\"\n            },\n            {\n            \"text\":\"seeds\"\n            },\n            {\n            \"text\":\"herbs\"\n            }\n        ]\n    },\n    \"hasStagedChanges\":false,\n    \"published\":true,\n    \"key\":\"basil-seed-product\",\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    }\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/products",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"products"
							],
							"query": [
								{
									"key": "priceCurrency",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCountry",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCustomerGroup",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceChannel",
									"value": "",
									"disabled": true
								},
								{
									"key": "localeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "storeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "To create a new product, send a representation that is going to become the initial staged representation\nof the new product in the master catalog. If price selection query parameters are provided,\nthe selected prices will be added to the response.\n"
					},
					"response": []
				},
				{
					"name": "04 Create Product - carrot",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"product-id\", data.results[0].id); ",
									"    pm.environment.set(\"product-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"product-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"product-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"product-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"product-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\":\"caba3bb9-5a59-4a8d-85b2-80bb763b29da\",\n    \"version\":11,\n    \"productType\":{\n        \"typeId\":\"product-type\",\n        \"id\":\"{{product-type-id-veg}}\"\n    },\n    \"name\":{\n        \"en\":\"Carrot seeds\",\n        \"de\":\"Carrot seeds\"\n    },\n    \"description\":{\n        \"en\":\"Carrot seeds\",\n        \"de\":\"Carrot seeds\"\n    },\n    \"categories\":[\n        {\n            \"typeId\":\"category\",\n            \"id\":\"{{category-id-seeds}}\"\n        },\n        {\n            \"typeId\":\"category\",\n            \"id\":\"{{category-id-veg-seeds}}\"\n        }\n    ],\n    \"categoryOrderHints\":{\n        \n    },\n    \"slug\":{\n        \"en\":\"carrot-seeds\",\n        \"de\":\"carrot-seed\"\n    },\n    \"metaDescription\":{\n        \"en\":\"Carrot seeds\",\n        \"de\":\"Carrot seeds\"\n    },\n    \"masterVariant\":{\n        \"id\":1,\n        \"sku\":\"CARROTSEEDS01\",\n        \"key\":\"CARROTSEEDS01\",\n        \"prices\":[\n            {\n            \"key\":\"CarrotSeed01Price01\",\n            \"value\":{\n                \"type\":\"centPrecision\",\n                \"currencyCode\":\"EUR\",\n                \"centAmount\":3200,\n                \"fractionDigits\":2\n            },\n            \"country\":\"DE\"\n            }\n        ],\n        \"images\":[\n            \n        ],\n        \"attributes\":[\n            {\n            \"name\":\"size\",\n            \"value\":\"package\"\n            },\n            {\n            \"name\":\"weight_in_kg\",\n            \"value\":1.5\n            }\n        ],\n        \"assets\":[\n            \n        ]\n    },\n    \"variants\":[\n        {\n            \"id\":2,\n            \"sku\":\"CARROTSEEDS02\",\n            \"key\":\"CARROTSEEDS02\",\n            \"prices\":[\n            {\n                \"key\":\"CarrotSeed02Price01\",\n                \"value\":{\n                    \"type\":\"centPrecision\",\n                    \"currencyCode\":\"EUR\",\n                    \"centAmount\":10000,\n                    \"fractionDigits\":2\n                },\n                \"country\":\"DE\"\n            }\n            ],\n            \"images\":[\n            \n            ],\n            \"attributes\":[\n            {\n                \"name\":\"size\",\n                \"value\":\"sack\"\n            },\n            {\n                \"name\":\"weight_in_kg\",\n                \"value\":5\n            }\n            ],\n            \"assets\":[\n            \n            ]\n        }\n    ],\n    \"searchKeywords\":{\n        \"en\":[\n            {\n            \"text\":\"seeds\"\n            },\n            {\n            \"text\":\"carrot\"\n            },\n            {\n            \"text\":\"vegetable\"\n            }\n        ]\n    },\n    \"hasStagedChanges\":false,\n    \"published\":true,\n    \"key\":\"carrot-seed-product\",\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    }\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/products",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"products"
							],
							"query": [
								{
									"key": "priceCurrency",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCountry",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCustomerGroup",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceChannel",
									"value": "",
									"disabled": true
								},
								{
									"key": "localeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "storeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "To create a new product, send a representation that is going to become the initial staged representation\nof the new product in the master catalog. If price selection query parameters are provided,\nthe selected prices will be added to the response.\n"
					},
					"response": []
				},
				{
					"name": "04 Create Product - celery",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"product-id\", data.results[0].id); ",
									"    pm.environment.set(\"product-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"product-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"product-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"product-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"product-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"productType\":{\n        \"typeId\":\"product-type\",\n        \"id\":\"{{product-type-id-veg}}\"\n    },\n    \"name\":{\n        \"en\":\"Celery seeds\",\n        \"de\":\"Celery seeds\"\n    },\n    \"description\":{\n        \"en\":\"Celery seeds\",\n        \"de\":\"Celery seeds\"\n    },\n    \"categories\":[\n        {\n            \"typeId\":\"category\",\n            \"id\":\"{{category-id-seeds}}\"\n        },\n        {\n            \"typeId\":\"category\",\n            \"id\":\"{{category-id-veg-seeds}}\"\n        }\n    ],\n    \"categoryOrderHints\":{\n        \n    },\n    \"slug\":{\n        \"en\":\"celery-seeds\"\n    },\n    \"metaDescription\":{\n        \"en\":\"Celery seeds\",\n        \"de\":\"Celery seeds\"\n    },\n    \"masterVariant\":{\n        \"id\":1,\n        \"sku\":\"CELERYSEEDS01\",\n        \"key\":\"CELERYSEEDS01\",\n        \"prices\":[\n            {\n            \"key\":\"CelerySeed01Price01\",\n            \"value\":{\n                \"type\":\"centPrecision\",\n                \"currencyCode\":\"EUR\",\n                \"centAmount\":2800,\n                \"fractionDigits\":2\n            },\n            \"country\":\"DE\"\n            }\n        ],\n        \"images\":[\n            \n        ],\n        \"attributes\":[\n            {\n            \"name\":\"size\",\n            \"value\":\"box\"\n            },\n            {\n            \"name\":\"weight_in_kg\",\n            \"value\":3\n            }\n        ],\n        \"assets\":[\n            \n        ]\n    },\n    \"variants\":[\n        \n    ],\n    \"searchKeywords\":{\n        \"en\":[\n            {\n            \"text\":\"seeds\"\n            },\n            {\n            \"text\":\"celery\"\n            },\n            {\n            \"text\":\"vegetable\"\n            }\n        ]\n    },\n    \"hasStagedChanges\":false,\n    \"published\":true,\n    \"key\":\"celery-seed-product\",\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    }\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/products",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"products"
							],
							"query": [
								{
									"key": "priceCurrency",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCountry",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceCustomerGroup",
									"value": "",
									"disabled": true
								},
								{
									"key": "priceChannel",
									"value": "",
									"disabled": true
								},
								{
									"key": "localeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "storeProjection",
									"value": "",
									"disabled": true
								},
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "To create a new product, send a representation that is going to become the initial staged representation\nof the new product in the master catalog. If price selection query parameters are provided,\nthe selected prices will be added to the response.\n"
					},
					"response": []
				}
			],
			"description": "## Dev training \nUse this to quickly create the tulip seeds product-type and product.\n\n## Demo of facets and filters\nThis was mainly created to get some products in the catalog to demo the facets and filters functionality.\nCreate all the product-types and products and you should be able to create facets on:\n\n- variants.attributes.size\n- variants.attributes.weight_in_kg\n\nFilter (facets) on:\nvariants.attributes.size: \"box\""
		},
		{
			"name": "FA Training",
			"item": [
				{
					"name": "Case 1 - Product Modeling Basic",
					"item": [
						{
							"name": "01 Create ProductType - Online Offerings",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"product-type-id-online-classes\", data.results[0].id); ",
											"    pm.environment.set(\"product-type-version-online-classes\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"product-type-key-online-classes\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"product-type-version-online-classes\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"product-type-id-online-classes\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"product-type-key-online-classes\", data.key);",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\" : \"Online Offerings\",\n  \"description\" : \"Online Offerings\",\n  \"key\" : \"online-offerings-product-type\",\n  \"attributes\" : [ {\n    \"type\" : {\n      \"name\" : \"text\"\n    },\n    \"isSearchable\" : true,\n    \"inputHint\" : \"SingleLine\",\n    \"name\" : \"name\",\n    \"label\" : {\n      \"en\" : \"Name of offering\",\n      \"de\" : \"Name of offering\"\n    },\n    \"isRequired\" : true,\n    \"attributeConstraint\" : \"Unique\"\n  } ]\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/product-types",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"product-types"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "Create ProductType"
							},
							"response": []
						},
						{
							"name": "02 Create Product - Online Classes (5 variants)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"product-id\", data.results[0].id); ",
											"    pm.environment.set(\"product-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"product-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"product-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"product-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"product-key\", data.key);",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"productType\":{\n        \"typeId\":\"product-type\",\n        \"id\":\"{{product-type-id-online-classes}}\"\n    },\n    \"name\":{\n        \"de\":\"Online classes\",\n        \"en\":\"Online classes\"\n    },\n    \"slug\":{\n        \"de\":\"online-classes\",\n        \"en\":\"online-classes\"\n    },\n    \"metaTitle\":{\n        \"de\":\"online-classes\",\n        \"en\":\"online-classes\"\n    },\n    \"masterVariant\":{\n        \"id\":1,\n        \"sku\":\"french-cooking-class\",\n        \"key\":\"french-cooking-class\",\n        \"prices\":[\n            {\n            \"value\":{\n                \"type\":\"centPrecision\",\n                \"currencyCode\":\"EUR\",\n                \"centAmount\":3999,\n                \"fractionDigits\":2\n            },\n            \"country\":\"DE\"\n            }\n        ],\n        \"images\":[],\n        \"attributes\":[\n            {\n            \"name\":\"name\",\n            \"value\":\"Online French cooking class\"\n            }\n        ],\n        \"assets\":[]\n    },\n    \"variants\":[\n        {\n            \"id\":2,\n            \"sku\":\"italian-cooking-class\",\n            \"key\":\"italian-cooking-class\",\n            \"prices\":[\n            {\n                \"value\":{\n                    \"type\":\"centPrecision\",\n                    \"currencyCode\":\"EUR\",\n                    \"centAmount\":3999,\n                    \"fractionDigits\":2\n                },\n                \"country\":\"DE\"\n            }\n            ],\n            \"images\":[],\n            \"attributes\":[\n            {\n                \"name\":\"name\",\n                \"value\":\"Online Italian cooking class\"\n            }\n            ],\n            \"assets\":[]\n        },\n        {\n            \"id\":3,\n            \"sku\":\"middle-eastern-cooking-class\",\n            \"key\":\"middle-eastern-cooking-class\",\n            \"prices\":[\n            {\n                \"value\":{\n                    \"type\":\"centPrecision\",\n                    \"currencyCode\":\"EUR\",\n                    \"centAmount\":3999,\n                    \"fractionDigits\":2\n                },\n                \"country\":\"DE\"\n            }\n            ],\n            \"images\":[],\n            \"attributes\":[\n            {\n                \"name\":\"name\",\n                \"value\":\"Middle Eastern cooking class\"\n            }\n            ],\n            \"assets\":[]\n        },\n        {\n            \"id\":4,\n            \"sku\":\"Soup cooking class\",\n            \"key\":\"Soup cooking class\",\n            \"prices\":[\n            {\n                \"value\":{\n                    \"type\":\"centPrecision\",\n                    \"currencyCode\":\"EUR\",\n                    \"centAmount\":2599,\n                    \"fractionDigits\":2\n                },\n                \"country\":\"DE\"\n            }\n            ],\n            \"images\":[],\n            \"attributes\":[\n            {\n                \"name\":\"name\",\n                \"value\":\"Online Soup cooking class\"\n            }\n            ],\n            \"assets\":[]\n        },\n        {\n            \"id\":5,\n            \"sku\":\"grilling-class\",\n            \"key\":\"grilling-class\",\n            \"prices\":[\n            {\n                \"value\":{\n                    \"type\":\"centPrecision\",\n                    \"currencyCode\":\"EUR\",\n                    \"centAmount\":2299,\n                    \"fractionDigits\":2\n                },\n                \"country\":\"DE\"\n            }\n            ],\n            \"images\":[],\n            \"attributes\":[\n            {\n                \"name\":\"name\",\n                \"value\":\"Online Grilling class\"\n            }\n            ],\n            \"assets\":[]\n        }\n    ],\n    \"searchKeywords\":{\n        \n    },\n    \"publish\": true,\n    \"key\":\"online-classes\",\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/products",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"products"
									],
									"query": [
										{
											"key": "priceCurrency",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCountry",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCustomerGroup",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceChannel",
											"value": "",
											"disabled": true
										},
										{
											"key": "localeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "storeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "To create a new product, send a representation that is going to become the initial staged representation\nof the new product in the master catalog. If price selection query parameters are provided,\nthe selected prices will be added to the response.\n"
							},
							"response": []
						},
						{
							"name": "021 Create Product - French cooking class",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"product-id\", data.results[0].id); ",
											"    pm.environment.set(\"product-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"product-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"product-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"product-id\", data.id);",
											"    pm.environment.set(\"product-id-french-class\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"product-key\", data.key);",
											"    pm.environment.set(\"product-key-french-class\", data.key); ",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\n{\n    \"productType\":{\n        \"typeId\":\"product-type\",\n        \"id\":\"{{product-type-id-online-classes}}\"\n    },\n    \"name\":{\n        \"de\":\"French Cooking class\",\n        \"en\":\"French Cooking class\"\n    },\n    \"slug\":{\n        \"de\":\"french-cooking-online-class\",\n        \"en\":\"french-cooking-online-class\"\n    },\n    \"metaTitle\":{\n        \"de\":\"french-cooking-online-class\",\n        \"en\":\"french-cooking-online-class\"\n    },\n    \"masterVariant\":{\n        \"id\":1,\n        \"sku\":\"french-cooking-online-class\",\n        \"key\":\"french-cooking-online-class\",\n        \"prices\":[\n            {\n            \"value\":{\n                \"type\":\"centPrecision\",\n                \"currencyCode\":\"EUR\",\n                \"centAmount\":3999,\n                \"fractionDigits\":2\n            },\n            \"country\":\"DE\"\n            }\n        ],\n        \"images\":[],\n        \"attributes\":[\n            {\n            \"name\":\"name\",\n            \"value\":\"French Cooking class\"\n            }\n        ],\n        \"assets\":[]\n    },\n    \n    \"searchKeywords\":{\n        \n    },\n    \"publish\": true,\n    \"key\":\"french-cooking-online-class\",\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/products",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"products"
									],
									"query": [
										{
											"key": "priceCurrency",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCountry",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCustomerGroup",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceChannel",
											"value": "",
											"disabled": true
										},
										{
											"key": "localeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "storeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "022 Create Product - Italian cooking class",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"product-id\", data.results[0].id); ",
											"    pm.environment.set(\"product-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"product-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"product-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"product-id\", data.id); ",
											"    pm.environment.set(\"product-id-italian-class\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"product-key\", data.key);",
											"    pm.environment.set(\"product-key-italian-class\", data.key); ",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\n{\n    \"productType\":{\n        \"typeId\":\"product-type\",\n        \"id\":\"{{product-type-id-online-classes}}\"\n    },\n    \"name\":{\n        \"de\":\"Italian Cooking class\",\n        \"en\":\"Italian Cooking class\"\n    },\n    \"slug\":{\n        \"de\":\"italian-cooking-online-class\",\n        \"en\":\"italian-cooking-online-class\"\n    },\n    \"metaTitle\":{\n        \"de\":\"italian-cooking-online-class\",\n        \"en\":\"italian-cooking-online-class\"\n    },\n    \"masterVariant\":{\n        \"id\":1,\n        \"sku\":\"italian-cooking-online-class\",\n        \"key\":\"italian-cooking-online-class\",\n        \"prices\":[\n            {\n            \"value\":{\n                \"type\":\"centPrecision\",\n                \"currencyCode\":\"EUR\",\n                \"centAmount\":3999,\n                \"fractionDigits\":2\n            },\n            \"country\":\"DE\"\n            }\n        ],\n        \"images\":[],\n        \"attributes\":[\n            {\n            \"name\":\"name\",\n            \"value\":\"Italian Cooking class\"\n            }\n        ],\n        \"assets\":[]\n    },\n    \n    \"searchKeywords\":{\n        \n    },\n    \"publish\": true,\n    \"key\":\"italian-cooking-online-class\",\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/products",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"products"
									],
									"query": [
										{
											"key": "priceCurrency",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCountry",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCustomerGroup",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceChannel",
											"value": "",
											"disabled": true
										},
										{
											"key": "localeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "storeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "023 Create Product - Middle Eastern cooking class",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"product-id\", data.results[0].id); ",
											"    pm.environment.set(\"product-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"product-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"product-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"product-id\", data.id); ",
											"    pm.environment.set(\"product-id-middle-eastern-class\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"product-key\", data.key);",
											"    pm.environment.set(\"product-key-middle-eastern-class\", data.key); ",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\n{\n    \"productType\":{\n        \"typeId\":\"product-type\",\n        \"id\":\"{{product-type-id-online-classes}}\"\n    },\n    \"name\":{\n        \"de\":\"Middle Eastern Cooking class\",\n        \"en\":\"Middle Eastern Cooking class\"\n    },\n    \"slug\":{\n        \"de\":\"middle-eastern-cooking-online-class\",\n        \"en\":\"middle-eastern-cooking-online-class\"\n    },\n    \"metaTitle\":{\n        \"de\":\"middle-eastern-cooking-online-class\",\n        \"en\":\"middle-eastern-cooking-online-class\"\n    },\n    \"masterVariant\":{\n        \"id\":1,\n        \"sku\":\"middle-eastern-cooking-online-class\",\n        \"key\":\"middle-eastern-cooking-online-class\",\n        \"prices\":[\n            {\n            \"value\":{\n                \"type\":\"centPrecision\",\n                \"currencyCode\":\"EUR\",\n                \"centAmount\":3999,\n                \"fractionDigits\":2\n            },\n            \"country\":\"DE\"\n            }\n        ],\n        \"images\":[],\n        \"attributes\":[\n            {\n            \"name\":\"name\",\n            \"value\":\"Middle Eastern Cooking class\"\n            }\n        ],\n        \"assets\":[]\n    },\n    \n    \"searchKeywords\":{\n        \n    },\n    \"publish\": true,\n    \"key\":\"middle-eastern-cooking-online-class\",\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/products",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"products"
									],
									"query": [
										{
											"key": "priceCurrency",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCountry",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCustomerGroup",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceChannel",
											"value": "",
											"disabled": true
										},
										{
											"key": "localeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "storeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "024 Create Product - Soup cooking class",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"product-id\", data.results[0].id); ",
											"    pm.environment.set(\"product-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"product-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"product-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"product-id\", data.id); ",
											"    pm.environment.set(\"product-id-soup-class\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"product-key\", data.key);",
											"    pm.environment.set(\"product-id-soup-class\", data.key); ",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\n{\n    \"productType\":{\n        \"typeId\":\"product-type\",\n        \"id\":\"{{product-type-id-online-classes}}\"\n    },\n    \"name\":{\n        \"de\":\"Soup Cooking class\",\n        \"en\":\"Soup Cooking class\"\n    },\n    \"slug\":{\n        \"de\":\"soup-cooking-online-class\",\n        \"en\":\"soup-cooking-online-class\"\n    },\n    \"metaTitle\":{\n        \"de\":\"soup-cooking-online-class\",\n        \"en\":\"soup-cooking-online-class\"\n    },\n    \"masterVariant\":{\n        \"id\":1,\n        \"sku\":\"soup-cooking-online-class\",\n        \"key\":\"soup-cooking-online-class\",\n        \"prices\":[\n            {\n            \"value\":{\n                \"type\":\"centPrecision\",\n                \"currencyCode\":\"EUR\",\n                \"centAmount\":2599,\n                \"fractionDigits\":2\n            },\n            \"country\":\"DE\"\n            }\n        ],\n        \"images\":[],\n        \"attributes\":[\n            {\n            \"name\":\"name\",\n            \"value\":\"Soup Cooking class\"\n            }\n        ],\n        \"assets\":[]\n    },\n    \n    \"searchKeywords\":{\n        \n    },\n    \"publish\": true,\n    \"key\":\"soup-cooking-online-class\",\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/products",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"products"
									],
									"query": [
										{
											"key": "priceCurrency",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCountry",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCustomerGroup",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceChannel",
											"value": "",
											"disabled": true
										},
										{
											"key": "localeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "storeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "025 Create Product - Grilling class",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"product-id\", data.results[0].id); ",
											"    pm.environment.set(\"product-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"product-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"product-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"product-id\", data.id); ",
											"    pm.environment.set(\"product-id-grilling-class\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"product-key\", data.key);",
											"    pm.environment.set(\"product-id-grilling-class\", data.key); ",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\n{\n    \"productType\":{\n        \"typeId\":\"product-type\",\n        \"id\":\"{{product-type-id-online-classes}}\"\n    },\n    \"name\":{\n        \"de\":\"Grilling class\",\n        \"en\":\"Grilling class\"\n    },\n    \"slug\":{\n        \"de\":\"grilling-online-class\",\n        \"en\":\"grilling-online-class\"\n    },\n    \"metaTitle\":{\n        \"de\":\"grilling-online-class\",\n        \"en\":\"grilling-online-class\"\n    },\n    \"masterVariant\":{\n        \"id\":1,\n        \"sku\":\"grilling-online-class\",\n        \"key\":\"grilling-online-class\",\n        \"prices\":[\n            {\n            \"value\":{\n                \"type\":\"centPrecision\",\n                \"currencyCode\":\"EUR\",\n                \"centAmount\":2299,\n                \"fractionDigits\":2\n            },\n            \"country\":\"DE\"\n            }\n        ],\n        \"images\":[],\n        \"attributes\":[\n            {\n            \"name\":\"name\",\n            \"value\":\"Grilling class\"\n            }\n        ],\n        \"assets\":[]\n    },\n    \n    \"searchKeywords\":{\n        \n    },\n    \"publish\": true,\n    \"key\":\"grilling-online-class\",\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/products",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"products"
									],
									"query": [
										{
											"key": "priceCurrency",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCountry",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCustomerGroup",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceChannel",
											"value": "",
											"disabled": true
										},
										{
											"key": "localeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "storeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Case 2 - Product Modeling Intermediate",
					"item": [
						{
							"name": "01 Create ProductType - Equipment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"product-type-id-equipment\", data.results[0].id); ",
											"    pm.environment.set(\"product-type-version-equipment\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"product-type-key-equipment\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"product-type-version-equipment\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"product-type-id-equipment\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"product-type-key-equipment\", data.key);",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\" : \"Equipment\",\n  \"description\" : \"Equipment\",\n  \"key\" : \"equipment-product-type\",\n  \"attributes\" : [ {\n    \"type\" : {\n      \"name\" : \"text\"\n    },\n    \"isSearchable\" : true,\n    \"inputHint\" : \"SingleLine\",\n    \"name\" : \"size\",\n    \"label\" : {\n      \"en\" : \"Size\",\n      \"de\" : \"Size\"\n    },\n    \"isRequired\" : false,\n    \"attributeConstraint\" : \"Unique\"\n  } ]\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/product-types",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"product-types"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "Create ProductType"
							},
							"response": []
						},
						{
							"name": "02 Create ProductType - Dinnerware",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"product-type-id-dinnerware\", data.results[0].id); ",
											"    pm.environment.set(\"product-type-version-dinnerware\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"product-type-key-dinnerware\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"product-type-version-dinnerware\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"product-type-id-dinnerware\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"product-type-key-dinnerware\", data.key);",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\" : \"Dinnerware\",\n  \"description\" : \"Dinnerware\",\n  \"key\" : \"dinnerware-product-type\",\n  \"attributes\" : [ {\n    \"type\" : {\n      \"name\" : \"text\"\n    },\n    \"isSearchable\" : true,\n    \"inputHint\" : \"SingleLine\",\n    \"name\" : \"size\",\n    \"label\" : {\n      \"en\" : \"Size\",\n      \"de\" : \"Size\"\n    },\n    \"isRequired\" : true,\n    \"attributeConstraint\" : \"Unique\"\n  } ]\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/product-types",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"product-types"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "Create ProductType"
							},
							"response": []
						},
						{
							"name": "021 Create Product - Crème brûlée torch",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"product-id-torch\", data.results[0].id); ",
											"    pm.environment.set(\"product-version-torch\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"product-key-torch\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"product-version-torch\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"product-id-torch\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"product-key-torch\", data.key);",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\n{\n    \"productType\":{\n        \"typeId\":\"product-type\",\n        \"id\":\"{{product-type-id-equipment}}\"\n    },\n    \"name\":{\n        \"de\":\"Crème brûlée torch\",\n        \"en\":\"Crème brûlée torch\"\n    },\n    \"slug\":{\n        \"de\":\"creme-brulee-torch\",\n        \"en\":\"creme-brulee-torch\"\n    },\n    \"metaTitle\":{\n        \"de\":\"Crème brûlée torch\",\n        \"en\":\"Crème brûlée torch\"\n    },\n    \"masterVariant\":{\n        \"id\":1,\n        \"sku\":\"creme-brulee-torch\",\n        \"key\":\"creme-brulee-torch\",\n        \"prices\":[\n            {\n            \"value\":{\n                \"type\":\"centPrecision\",\n                \"currencyCode\":\"EUR\",\n                \"centAmount\":12900,\n                \"fractionDigits\":2\n            },\n            \"country\":\"DE\"\n            }\n        ],\n        \"images\":[],\n       \"assets\":[]\n    },\n    \"searchKeywords\":{\n        \n    },\n    \"publish\": true,\n    \"key\":\"creme-brulee-torch\",\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/products",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"products"
									],
									"query": [
										{
											"key": "priceCurrency",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCountry",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCustomerGroup",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceChannel",
											"value": "",
											"disabled": true
										},
										{
											"key": "localeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "storeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "To create a new product, send a representation that is going to become the initial staged representation\nof the new product in the master catalog. If price selection query parameters are provided,\nthe selected prices will be added to the response.\n"
							},
							"response": []
						},
						{
							"name": "022 Create Product - Ramekins",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"product-id-ramekins\", data.results[0].id); ",
											"    pm.environment.set(\"product-version-ramekins\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"product-key-ramekins\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"product-version-ramekins\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"product-id-ramekins\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"product-key-ramekins\", data.key);",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\n{\n    \"productType\":{\n        \"typeId\":\"product-type\",\n        \"id\":\"{{product-type-id-dinnerware}}\"\n    },\n    \"name\":{\n        \"de\":\"Set of 4 Ramekins\",\n        \"en\":\"Set of 4 Ramekins\"\n    },\n    \"slug\":{\n        \"de\":\"set-of-4-ramekins\",\n        \"en\":\"set-of-4-ramekins\"\n    },\n    \"metaTitle\":{\n        \"de\":\"Set of 4 Ramekins\",\n        \"en\":\"Set of 4 Ramekins\"\n    },\n    \"masterVariant\":{\n        \"id\":1,\n        \"sku\":\"set-of-4-ramekin-01\",\n        \"key\":\"set-of-4-ramekin-01\",\n        \"prices\":[\n            {\n            \"value\":{\n                \"type\":\"centPrecision\",\n                \"currencyCode\":\"EUR\",\n                \"centAmount\":1999,\n                \"fractionDigits\":2\n            },\n            \"country\":\"DE\"\n            }\n        ],\n        \"images\":[],\n        \"attributes\":[\n            {\n            \"name\":\"size\",\n            \"value\":\"4 oz.\"\n            }\n        ],\n        \"assets\":[]\n    },\n    \"variants\":[\n        {\n            \"id\":2,\n            \"sku\":\"set-of-4-ramekin-02\",\n            \"key\":\"set-of-4-ramekin-02\",\n            \"prices\":[\n            {\n                \"value\":{\n                    \"type\":\"centPrecision\",\n                    \"currencyCode\":\"EUR\",\n                    \"centAmount\":1999,\n                    \"fractionDigits\":2\n                },\n                \"country\":\"DE\"\n            }\n            ],\n            \"images\":[],\n            \"attributes\":[\n            {\n                \"name\":\"size\",\n                \"value\":\"6 oz\"\n            }\n            ],\n            \"assets\":[]\n        },\n        {\n            \"id\":3,\n            \"sku\":\"set-of-4-ramekin-03\",\n            \"key\":\"set-of-4-ramekin-03\",\n            \"prices\":[\n            {\n                \"value\":{\n                    \"type\":\"centPrecision\",\n                    \"currencyCode\":\"EUR\",\n                    \"centAmount\":1999,\n                    \"fractionDigits\":2\n                },\n                \"country\":\"DE\"\n            }\n            ],\n            \"images\":[\n            \n            ],\n            \"attributes\":[\n            {\n                \"name\":\"size\",\n                \"value\":\"8 oz.\"\n            }\n            ],\n            \"assets\":[\n            \n            ]\n        }\n    ],\n    \"searchKeywords\":{\n        \n    },\n    \"publish\": true,\n    \"key\":\"set-of-4-ramekins\",\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/products",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"products"
									],
									"query": [
										{
											"key": "priceCurrency",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCountry",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCustomerGroup",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceChannel",
											"value": "",
											"disabled": true
										},
										{
											"key": "localeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "storeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "To create a new product, send a representation that is going to become the initial staged representation\nof the new product in the master catalog. If price selection query parameters are provided,\nthe selected prices will be added to the response.\n"
							},
							"response": []
						},
						{
							"name": "023 Create Product - Pasta Pot",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"product-id-ramekins\", data.results[0].id); ",
											"    pm.environment.set(\"product-version-ramekins\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"product-key-pasta\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"product-version-pasta\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"product-id-pasta\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"product-key-pasta\", data.key);",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\n{\n    \"productType\":{\n        \"typeId\":\"product-type\",\n        \"id\":\"{{product-type-id-equipment}}\"\n    },\n    \"name\":{\n        \"de\":\"Pasta Pot\",\n        \"en\":\"Pasta Pot\"\n    },\n    \"slug\":{\n        \"de\":\"pasta-pot\",\n        \"en\":\"pasta-pot\"\n    },\n    \"metaTitle\":{\n        \"de\":\"Pasta Pot\",\n        \"en\":\"Pasta Pot\"\n    },\n    \"masterVariant\":{\n        \"id\":1,\n        \"sku\":\"pasta-pot-01\",\n        \"key\":\"pasta-pot-01\",\n        \"prices\":[\n            {\n            \"value\":{\n                \"type\":\"centPrecision\",\n                \"currencyCode\":\"EUR\",\n                \"centAmount\":1999,\n                \"fractionDigits\":2\n            },\n            \"country\":\"DE\"\n            }\n        ],\n        \"images\":[],\n        \"attributes\":[\n            {\n            \"name\":\"size\",\n            \"value\":\"2 qt.\"\n            }\n        ],\n        \"assets\":[]\n    },\n    \"variants\":[\n        {\n            \"id\":2,\n            \"sku\":\"pasta-pot-02\",\n            \"key\":\"pasta-pot-02\",\n            \"prices\":[\n            {\n                \"value\":{\n                    \"type\":\"centPrecision\",\n                    \"currencyCode\":\"EUR\",\n                    \"centAmount\":2999,\n                    \"fractionDigits\":2\n                },\n                \"country\":\"DE\"\n            }\n            ],\n            \"images\":[],\n            \"attributes\":[\n            {\n                \"name\":\"size\",\n                \"value\":\"4 qt.\"\n            }\n            ],\n            \"assets\":[]\n        },\n        {\n            \"id\":3,\n            \"sku\":\"pasta-pot-03\",\n            \"key\":\"pasta-pot-03\",\n            \"prices\":[\n            {\n                \"value\":{\n                    \"type\":\"centPrecision\",\n                    \"currencyCode\":\"EUR\",\n                    \"centAmount\":3999,\n                    \"fractionDigits\":2\n                },\n                \"country\":\"DE\"\n            }\n            ],\n            \"images\":[\n            \n            ],\n            \"attributes\":[\n            {\n                \"name\":\"size\",\n                \"value\":\"6 qt.\"\n            }\n            ],\n            \"assets\":[\n            \n            ]\n        }\n    ],\n    \"searchKeywords\":{\n        \n    },\n    \"publish\": true,\n    \"key\":\"pasta-pot\",\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/products",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"products"
									],
									"query": [
										{
											"key": "priceCurrency",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCountry",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCustomerGroup",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceChannel",
											"value": "",
											"disabled": true
										},
										{
											"key": "localeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "storeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "optional after task demo - Create ProductType - bundle",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"product-type-id-bundle\", data.results[0].id); ",
											"    pm.environment.set(\"product-type-version-bundle\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"product-type-key-bundle\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"product-type-version-bundle\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"product-type-id-bundle\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"product-type-key-bundle\", data.key);",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Bundle ProductType\",\n  \"description\": \"AllForFoodies Bundle ProductType\",\n  \"classifier\": \"Complex\",\n  \"attributes\": [\n    {\n      \"name\": \"Items\",\n      \"label\": {\n        \"de\": \"Items\",\n        \"en\": \"Items\"\n      },\n      \"inputTip\": {\n        \"de\": \"Bundle item\",\n        \"en\": \"Bundle item\"\n      },\n      \"isRequired\": false,\n      \"type\": {\n        \"name\": \"set\",\n        \"elementType\": {\n          \"name\": \"reference\",\n          \"referenceTypeId\": \"product\"\n        }\n      },\n      \"attributeConstraint\": \"None\",\n      \"isSearchable\": true,\n      \"inputHint\": \"SingleLine\"\n    }\n  ],\n  \"key\": \"bundle-producttype\"\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/product-types",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"product-types"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "Create ProductType"
							},
							"response": []
						},
						{
							"name": "optional after task demo - Create Product - bundle",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"product-id-bundle\", data.results[0].id); ",
											"    pm.environment.set(\"product-version-bundle\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"product-key-bundle\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"product-version-bundle\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"product-id-bundle\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"product-key-bundle\", data.key);",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"productType\": {\n        \"typeId\": \"product-type\",\n        \"id\": \"{{product-type-id-bundle}}\"\n    },\n    \"name\": {\n      \"en\": \"French Cooking Bundle\"\n    },\n    \"slug\": {\n        \"en\": \"french-cooking-bundle\"\n    },\n    \"masterVariant\": {\n        \"id\": 1,\n        \"sku\": \"french-cooking-bundle\",\n        \"key\": \"french-cooking-bundle\",\n        \"prices\": [\n            {\n            \"value\": {\n                \"type\": \"centPrecision\",\n                \"currencyCode\": \"EUR\",\n                \"centAmount\": 12900,\n                \"fractionDigits\": 2\n            },\n            \"country\": \"DE\"\n            }\n        ],\n\n    \"images\": [],\n    \"attributes\": [\n        {\n        \"name\": \"Items\",\n        \"value\": [\n            {\n            \"typeId\": \"product\",\n            \"id\": \"{{product-id-french-class}}\"\n            },\n            {\n            \"typeId\": \"product\",\n            \"id\": \"{{product-id-torch}}\"\n            },\n            {\n            \"typeId\": \"product\",\n            \"id\": \"{{product-id-ramekins}}\"\n            }\n        ]\n        }\n    ],\n    \"assets\": []\n    },\n    \"variants\": [],\n    \"searchKeywords\": {},\n    \"publish\": true,\n    \"key\": \"french-cooking-bundle\",\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/products",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"products"
									],
									"query": [
										{
											"key": "priceCurrency",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCountry",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCustomerGroup",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceChannel",
											"value": "",
											"disabled": true
										},
										{
											"key": "localeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "storeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "To create a new product, send a representation that is going to become the initial staged representation\nof the new product in the master catalog. If price selection query parameters are provided,\nthe selected prices will be added to the response.\n"
							},
							"response": []
						}
					]
				},
				{
					"name": "Case 3 - Product Modeling Bonus",
					"item": [
						{
							"name": "01 Create ProductType - ingredient",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"product-type-id-ingredient\", data.results[0].id); ",
											"    pm.environment.set(\"product-type-version-ingredient\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"product-type-key-ingredient\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"product-type-version-ingredient\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"product-type-id-ingredient\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"product-type-key-ingredient\", data.key);",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\" : \"Ingredients\",\n  \"description\" : \"Ingredients\",\n  \"key\" : \"ingredient-product-type\",\n  \"attributes\" : [ {\n    \"type\" : {\n      \"name\" : \"text\"\n    },\n    \"isSearchable\" : true,\n    \"inputHint\" : \"SingleLine\",\n    \"name\" : \"package\",\n    \"label\" : {\n      \"en\" : \"Package Type\",\n      \"de\" : \"Package Type\"\n    },\n    \"isRequired\" : true,\n    \"attributeConstraint\" : \"CombinationUnique\"\n  },\n  {\n    \"type\" : {\n      \"name\" : \"number\"\n    },\n    \"name\" : \"weight_in_lb\",\n    \"label\" : {\n      \"en\" : \"Weight in lb\",\n      \"de\" : \"Weight in lb\"\n    },\n    \"isRequired\" : true,\n    \"attributeConstraint\" : \"CombinationUnique\"\n  }]\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/product-types",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"product-types"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "Create ProductType"
							},
							"response": []
						},
						{
							"name": "011 Create Product - Gluten-free brownie mix",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"gluten-free-brownie-mix-product-id\", data.results[0].id); ",
											"    pm.environment.set(\"gluten-free-brownie-mix-product-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"gluten-free-brownie-mix-product-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"gluten-free-brownie-mix-product-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"gluten-free-brownie-mix-product-id\", data.id);",
											"    pm.environment.set(\"gluten-free-brownie-mix-product-id\", data.id) ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"gluten-free-brownie-mix-product-key\", data.key);",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"productType\":{\n        \"typeId\":\"product-type\",\n        \"id\":\"{{product-type-id-ingredient}}\"\n    },\n    \"name\":{\n        \"de\":\"Gluten-free brownie mix\",\n        \"en\":\"Gluten-free brownie mix\"\n    },\n    \"slug\":{\n        \"de\":\"gluten-free-brownie-mix\",\n        \"en\":\"gluten-free-brownie-mix\"\n    },\n    \"metaTitle\":{\n        \"de\":\"Gluten-free brownie mix\",\n        \"en\":\"Gluten-free brownie mix\"\n    },\n    \"masterVariant\":{\n        \"id\":1,\n        \"sku\":\"gluten-free-brownie-mix-01\",\n        \"key\":\"gluten-free-brownie-mix-01\",\n        \"prices\":[\n            {\n            \"value\":{\n                \"type\":\"centPrecision\",\n                \"currencyCode\":\"EUR\",\n                \"centAmount\":399,\n                \"fractionDigits\":2\n            },\n            \"country\":\"DE\"\n            }\n        ],\n        \"images\":[],\n        \"attributes\":[\n            {\n            \"name\":\"package\",\n            \"value\":\"bag\"\n            },\n            {\n            \"name\":\"weight_in_lb\",\n            \"value\":1\n            }\n        ],\n        \"assets\":[]\n    },\n    \"variants\":[\n        {\n            \"id\":2,\n            \"sku\":\"gluten-free-brownie-mix-05\",\n            \"key\":\"gluten-free-brownie-mix-05\",\n            \"prices\":[\n            {\n                \"value\":{\n                    \"type\":\"centPrecision\",\n                    \"currencyCode\":\"EUR\",\n                    \"centAmount\":1935,\n                    \"fractionDigits\":2\n                },\n                \"country\":\"DE\"\n            }\n            ],\n            \"images\":[],\n            \"attributes\":[\n            {\n            \"name\":\"package\",\n            \"value\":\"bag\"\n            },\n            {\n            \"name\":\"weight_in_lb\",\n            \"value\":5\n            }],\n            \"assets\":[]\n        },\n        {\n            \"id\":3,\n            \"sku\":\"gluten-free-brownie-mix-25\",\n            \"key\":\"gluten-free-brownie-mix-25\",\n            \"prices\":[\n            {\n                \"value\":{\n                    \"type\":\"centPrecision\",\n                    \"currencyCode\":\"EUR\",\n                    \"centAmount\":6725,\n                    \"fractionDigits\":2\n                },\n                \"country\":\"DE\"\n            }\n            ],\n            \"images\":[],\n            \"attributes\":[\n            {\n            \"name\":\"package\",\n            \"value\":\"case\"\n            },\n            {\n            \"name\":\"weight_in_lb\",\n            \"value\":25\n            }],\n            \"assets\":[]\n        }\n    ],\n    \"searchKeywords\":{\n        \n    },\n    \"publish\": true,\n    \"key\":\"gluten-free-brownie-mix\",\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/products",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"products"
									],
									"query": [
										{
											"key": "priceCurrency",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCountry",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCustomerGroup",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceChannel",
											"value": "",
											"disabled": true
										},
										{
											"key": "localeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "storeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "To create a new product, send a representation that is going to become the initial staged representation\nof the new product in the master catalog. If price selection query parameters are provided,\nthe selected prices will be added to the response.\n"
							},
							"response": []
						},
						{
							"name": "012 Create Product - Sugar cookie mix",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"sugar-cookie-mix-product-id\", data.results[0].id); ",
											"    pm.environment.set(\"sugar-cookie-mix-product-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"sugar-cookie-mix-product-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"sugar-cookie-mix-product-version\", data.version);",
											"    pm.environment.set(\"sugar-cookie-mix-product-id\", data.id) ",
											"",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"sugar-cookie-mix-product-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"sugar-cookie-mix-product-key\", data.key);",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"productType\":{\n        \"typeId\":\"product-type\",\n        \"id\":\"{{product-type-id-ingredient}}\"\n    },\n    \"name\":{\n        \"de\":\"Sugar cookie mix\",\n        \"en\":\"Sugar cookie mix\"\n    },\n    \"slug\":{\n        \"de\":\"sugar-cookie-mix\",\n        \"en\":\"sugar-cookie-mix\"\n    },\n    \"metaTitle\":{\n        \"de\":\"Sugar cookie mix\",\n        \"en\":\"Sugar cookie mix\"\n    },\n    \"masterVariant\":{\n        \"id\":1,\n        \"sku\":\"sugar-cookie-mix-01\",\n        \"key\":\"sugar-cookie-mix-01\",\n        \"prices\":[\n            {\n            \"value\":{\n                \"type\":\"centPrecision\",\n                \"currencyCode\":\"EUR\",\n                \"centAmount\":299,\n                \"fractionDigits\":2\n            },\n            \"country\":\"DE\"\n            }\n        ],\n        \"images\":[],\n        \"attributes\":[\n            {\n            \"name\":\"package\",\n            \"value\":\"bag\"\n            },\n            {\n            \"name\":\"weight_in_lb\",\n            \"value\":1\n            }\n        ],\n        \"assets\":[]\n    },\n    \"variants\":[\n        {\n            \"id\":2,\n            \"sku\":\"sugar-cookie-mix-05\",\n            \"key\":\"sugar-cookie-mix-05\",\n            \"prices\":[\n            {\n                \"value\":{\n                    \"type\":\"centPrecision\",\n                    \"currencyCode\":\"EUR\",\n                    \"centAmount\":1499,\n                    \"fractionDigits\":2\n                },\n                \"country\":\"DE\"\n            }\n            ],\n            \"images\":[],\n            \"attributes\":[\n            {\n            \"name\":\"package\",\n            \"value\":\"bag\"\n            },\n            {\n            \"name\":\"weight_in_lb\",\n            \"value\":5\n            }],\n            \"assets\":[]\n        },\n        {\n            \"id\":3,\n            \"sku\":\"sugar-cookie-mix-25\",\n            \"key\":\"sugar-cookie-mix-25\",\n            \"prices\":[\n            {\n                \"value\":{\n                    \"type\":\"centPrecision\",\n                    \"currencyCode\":\"EUR\",\n                    \"centAmount\":4975,\n                    \"fractionDigits\":2\n                },\n                \"country\":\"DE\"\n            }\n            ],\n            \"images\":[],\n            \"attributes\":[\n            {\n            \"name\":\"package\",\n            \"value\":\"case\"\n            },\n            {\n            \"name\":\"weight_in_lb\",\n            \"value\":25\n            }],\n            \"assets\":[]\n        }\n    ],\n    \"searchKeywords\":{\n        \n    },\n    \"publish\": true,\n    \"key\":\"sugar-cookie-mix\",\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/products",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"products"
									],
									"query": [
										{
											"key": "priceCurrency",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCountry",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCustomerGroup",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceChannel",
											"value": "",
											"disabled": true
										},
										{
											"key": "localeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "storeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "To create a new product, send a representation that is going to become the initial staged representation\nof the new product in the master catalog. If price selection query parameters are provided,\nthe selected prices will be added to the response.\n"
							},
							"response": []
						},
						{
							"name": "013 Create Product - Walnut pieces",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"walnut-pieces-product-id\", data.results[0].id); ",
											"    pm.environment.set(\"walnut-pieces-product-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"walnut-pieces-product-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"walnut-pieces-product-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"product-id\", data.id); ",
											"    pm.environment.set(\"walnut-pieces-product-id\", data.id) ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"walnut-pieces-product-key\", data.key);",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"productType\":{\n        \"typeId\":\"product-type\",\n        \"id\":\"{{product-type-id-ingredient}}\"\n    },\n    \"name\":{\n        \"de\":\"Walnut pieces\",\n        \"en\":\"Walnut pieces\"\n    },\n    \"slug\":{\n        \"de\":\"walnut-pieces\",\n        \"en\":\"walnut-pieces\"\n    },\n    \"metaTitle\":{\n        \"de\":\"Walnut pieces\",\n        \"en\":\"Walnut pieces\"\n    },\n    \"masterVariant\":{\n        \"id\":1,\n        \"sku\":\"walnut-pieces-01\",\n        \"key\":\"walnut-pieces-01\",\n        \"prices\":[\n            {\n            \"value\":{\n                \"type\":\"centPrecision\",\n                \"currencyCode\":\"EUR\",\n                \"centAmount\":899,\n                \"fractionDigits\":2\n            },\n            \"country\":\"DE\"\n            }\n        ],\n        \"images\":[],\n        \"attributes\":[\n            {\n            \"name\":\"package\",\n            \"value\":\"bag\"\n            },\n            {\n            \"name\":\"weight_in_lb\",\n            \"value\":1\n            }\n        ],\n        \"assets\":[]\n    },\n    \"variants\":[\n        {\n            \"id\":2,\n            \"sku\":\"walnut-pieces-05\",\n            \"key\":\"walnut-pieces-05\",\n            \"prices\":[\n            {\n                \"value\":{\n                    \"type\":\"centPrecision\",\n                    \"currencyCode\":\"EUR\",\n                    \"centAmount\":4360,\n                    \"fractionDigits\":2\n                },\n                \"country\":\"DE\"\n            }\n            ],\n            \"images\":[],\n            \"attributes\":[\n            {\n            \"name\":\"package\",\n            \"value\":\"bag\"\n            },\n            {\n            \"name\":\"weight_in_lb\",\n            \"value\":5\n            }],\n            \"assets\":[]\n        },\n        {\n            \"id\":3,\n            \"sku\":\"walnut-pieces-30\",\n            \"key\":\"walnut-pieces-30\",\n            \"prices\":[\n            {\n                \"value\":{\n                    \"type\":\"centPrecision\",\n                    \"currencyCode\":\"EUR\",\n                    \"centAmount\":20970,\n                    \"fractionDigits\":2\n                },\n                \"country\":\"DE\"\n            }\n            ],\n            \"images\":[],\n            \"attributes\":[\n            {\n            \"name\":\"package\",\n            \"value\":\"case\"\n            },\n            {\n            \"name\":\"weight_in_lb\",\n            \"value\":30\n            }],\n            \"assets\":[]\n        }\n    ],\n    \"searchKeywords\":{\n        \n    },\n    \"publish\": true,\n    \"key\":\"walnut-pieces\",\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/products",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"products"
									],
									"query": [
										{
											"key": "priceCurrency",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCountry",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCustomerGroup",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceChannel",
											"value": "",
											"disabled": true
										},
										{
											"key": "localeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "storeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "To create a new product, send a representation that is going to become the initial staged representation\nof the new product in the master catalog. If price selection query parameters are provided,\nthe selected prices will be added to the response.\n"
							},
							"response": []
						},
						{
							"name": "014 Create Product - Semi-sweet chocolate chips",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"semi-sweet-chocolate-pieces-product-id\", data.results[0].id); ",
											"    pm.environment.set(\"semi-sweet-chocolate-pieces-product-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"semi-sweet-chocolate-pieces-product-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"semi-sweet-chocolate-pieces-product-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"semi-sweet-chocolate-pieces-product-id\", data.id); ",
											"    pm.environment.set(\"semi-sweet-chocolate-pieces-product-id\", data.id) ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"semi-sweet-chocolate-pieces-product-key\", data.key);",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"productType\":{\n        \"typeId\":\"product-type\",\n        \"id\":\"{{product-type-id-ingredient}}\"\n    },\n    \"name\":{\n        \"de\":\"Semi-sweet chocolate chips\",\n        \"en\":\"Semi-sweet chocolate chips\"\n    },\n    \"slug\":{\n        \"de\":\"semi-sweet-chocolate-chips\",\n        \"en\":\"semi-sweet-chocolate-chips\"\n    },\n    \"metaTitle\":{\n        \"de\":\"Semi-sweet chocolate chips\",\n        \"en\":\"Semi-sweet chocolate chips\"\n    },\n    \"masterVariant\":{\n        \"id\":1,\n        \"sku\":\"semi-sweet-chocolate-chips-01\",\n        \"key\":\"semi-sweet-chocolate-chips-01\",\n        \"prices\":[\n            {\n            \"value\":{\n                \"type\":\"centPrecision\",\n                \"currencyCode\":\"EUR\",\n                \"centAmount\":599,\n                \"fractionDigits\":2\n            },\n            \"country\":\"DE\"\n            }\n        ],\n        \"images\":[],\n        \"attributes\":[\n            {\n            \"name\":\"package\",\n            \"value\":\"bag\"\n            },\n            {\n            \"name\":\"weight_in_lb\",\n            \"value\":1\n            }\n        ],\n        \"assets\":[]\n    },\n    \"variants\":[\n        {\n            \"id\":2,\n            \"sku\":\"semi-sweet-chocolate-chips-05\",\n            \"key\":\"semi-sweet-chocolate-chips-05\",\n            \"prices\":[\n            {\n                \"value\":{\n                    \"type\":\"centPrecision\",\n                    \"currencyCode\":\"EUR\",\n                    \"centAmount\":2905,\n                    \"fractionDigits\":2\n                },\n                \"country\":\"DE\"\n            }\n            ],\n            \"images\":[],\n            \"attributes\":[\n            {\n            \"name\":\"package\",\n            \"value\":\"bag\"\n            },\n            {\n            \"name\":\"weight_in_lb\",\n            \"value\":5\n            }],\n            \"assets\":[]\n        },\n        {\n            \"id\":3,\n            \"sku\":\"semi-sweet-chocolate-chips-25\",\n            \"key\":\"semi-sweet-chocolate-chips-25\",\n            \"prices\":[\n            {\n                \"value\":{\n                    \"type\":\"centPrecision\",\n                    \"currencyCode\":\"EUR\",\n                    \"centAmount\":12475,\n                    \"fractionDigits\":2\n                },\n                \"country\":\"DE\"\n            }\n            ],\n            \"images\":[],\n            \"attributes\":[\n            {\n            \"name\":\"package\",\n            \"value\":\"case\"\n            },\n            {\n            \"name\":\"weight_in_lb\",\n            \"value\":25\n            }],\n            \"assets\":[]\n        }\n    ],\n    \"searchKeywords\":{\n        \n    },\n    \"publish\": true,\n    \"key\":\"semi-sweet-chocolate-chips\",\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/products",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"products"
									],
									"query": [
										{
											"key": "priceCurrency",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCountry",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCustomerGroup",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceChannel",
											"value": "",
											"disabled": true
										},
										{
											"key": "localeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "storeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "To create a new product, send a representation that is going to become the initial staged representation\nof the new product in the master catalog. If price selection query parameters are provided,\nthe selected prices will be added to the response.\n"
							},
							"response": []
						},
						{
							"name": "02 Create ProductType - ingredient Info",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"product-type-id-ingredient-info\", data.results[0].id); ",
											"    pm.environment.set(\"product-type-version-ingredient-info\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"product-type-key-ingredient-info\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"product-type-version-ingredient-info\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"product-type-id-ingredient-info\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"product-type-key-ingredient-info\", data.key);",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n      \"name\": \"Ingredient Info\",\n      \"description\": \"Ingredient info to be used as a nested type in recipe product type\",\n      \"classifier\": \"Complex\",\n      \"attributes\": [\n        {\n          \"name\": \"SKU\",\n          \"label\": {\n            \"de\": \"SKU\",\n            \"en\": \"SKU\"\n          },\n          \"isRequired\": true,\n          \"type\": {\n            \"name\": \"text\"\n          },\n          \"attributeConstraint\": \"None\",\n          \"isSearchable\": false,\n          \"inputHint\": \"SingleLine\"\n        },\n        {\n          \"name\": \"Quantity\",\n          \"label\": {\n            \"de\": \"\",\n            \"en\": \"quantity\"\n          },\n          \"isRequired\": true,\n          \"type\": {\n            \"name\": \"number\"\n          },\n          \"attributeConstraint\": \"None\",\n          \"isSearchable\": false,\n          \"inputHint\": \"SingleLine\"\n        },\n        {\n          \"name\": \"Item\",\n          \"label\": {\n            \"de\": \"\",\n            \"en\": \"item\"\n          },\n          \"isRequired\": true,\n          \"type\": {\n            \"name\": \"reference\",\n            \"referenceTypeId\": \"product\"\n          },\n          \"attributeConstraint\": \"None\",\n          \"isSearchable\": false,\n          \"inputHint\": \"SingleLine\"\n        }\n      ],\n      \"key\": \"ingredient-info\"\n    }"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/product-types",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"product-types"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "Create ProductType"
							},
							"response": []
						},
						{
							"name": "03 Create ProductType Recipe",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"product-type-id-recipe\", data.results[0].id); ",
											"    pm.environment.set(\"product-type-version-recipe\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"product-type-key-recipe\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"product-type-version-recipe\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"product-type-id-recipe\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"product-type-key-recipe\", data.key);",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\" : \"Recipe\",\n    \"key\" : \"recipe-product-type\",\n    \"description\" : \"Nested recipe product type.\",\n    \"attributes\" : [ {\n        \"type\": {\n            \"name\": \"set\",\n            \"elementType\": {\n                \"name\": \"nested\",\n                \"typeReference\": {\n                    \"typeId\": \"product-type\",\n                    \"id\": \"{{product-type-id-ingredient-info}}\"\n                }\n            }\n        },\n        \"isSearchable\" : false,\n        \"name\" : \"ingredient-info\",\n        \"label\" : {\n            \"en\" : \"Ingredient Info\",\n            \"de\" : \"Ingredient Info\"\n        },\n        \"isRequired\" : false,\n        \"attributeConstraint\" : \"None\",\n        \"displayGroup\": \"Other\"\n    }]\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/product-types",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"product-types"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "031 Create Product - Fudgy Walnut Brownie Recipe",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"product-id\", data.results[0].id); ",
											"    pm.environment.set(\"product-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"product-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"product-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"product-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"product-key\", data.key);",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"productType\":{\n        \"typeId\":\"product-type\",\n        \"id\":\"{{product-type-id-recipe}}\"\n    },\n    \"name\":{\n        \"de\":\"Fudgy Walnut Brownie Recipe\",\n        \"en\":\"Fudgy Walnut Brownie Recipe\"\n    },\n    \"slug\":{\n        \"de\":\"fudgy-walnut-brownie-recipe\",\n        \"en\":\"fudgy-walnut-brownie-recipe\"\n    },\n    \"metaTitle\":{\n        \"de\":\"fudgy-walnut-brownie-recipe\",\n        \"en\":\"fudgy-walnut-brownie-recipe\"\n    },\n    \"masterVariant\":{\n        \"id\":1,\n        \"sku\":\"fudgy-walnut-brownie-recipe\",\n        \"key\":\"fudgy-walnut-brownie-recipe\",\n        \"prices\":[\n            {\n            \"value\":{\n                \"type\":\"centPrecision\",\n                \"currencyCode\":\"EUR\",\n                \"centAmount\":2000,\n                \"fractionDigits\":2\n            },\n            \"country\":\"DE\"\n            }\n        ],\n        \"images\":[],\n        \"attributes\": [\n          {\n            \"name\": \"ingredient-info\",\n            \"value\": [\n              [\n                {\n                  \"name\": \"Item\",\n                  \"value\": {\n                    \"typeId\": \"product\",\n                    \"id\": \"{{gluten-free-brownie-mix-product-id}}\"\n                  }\n                },\n                {\n                  \"name\": \"SKU\",\n                  \"value\": \"gluten-free-brownie-mix-01\"\n                },\n                {\n                  \"name\": \"Quantity\",\n                  \"value\": 2\n                }\n              ],\n              [\n                {\n                  \"name\": \"Item\",\n                  \"value\": {\n                    \"typeId\": \"product\",\n                    \"id\": \"{{walnut-pieces-product-id}}\"\n                  }\n                },\n                {\n                  \"name\": \"SKU\",\n                  \"value\": \"walnut-pieces-01\"\n                },\n                {\n                  \"name\": \"Quantity\",\n                  \"value\": 1\n                }\n              ],\n                            [\n                {\n                  \"name\": \"Item\",\n                  \"value\": {\n                    \"typeId\": \"product\",\n                    \"id\": \"{{semi-sweet-chocolate-pieces-product-id}}\"\n                  }\n                },\n                {\n                  \"name\": \"SKU\",\n                  \"value\": \"semi-sweet-chocolate-chips-01\"\n                },\n                {\n                  \"name\": \"Quantity\",\n                  \"value\": 1\n                }\n              ]\n            ]\n          }\n        ]\n    },\n    \"searchKeywords\":{\n    },\n    \"publish\": true,\n    \"key\":\"fudgy-walnut-brownie-recipe\",\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/products",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"products"
									],
									"query": [
										{
											"key": "priceCurrency",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCountry",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCustomerGroup",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceChannel",
											"value": "",
											"disabled": true
										},
										{
											"key": "localeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "storeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "To create a new product, send a representation that is going to become the initial staged representation\nof the new product in the master catalog. If price selection query parameters are provided,\nthe selected prices will be added to the response.\n"
							},
							"response": []
						},
						{
							"name": "032 Create Product - Nuts For Chocolate Cookies Recipe",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"nuts-for-chocolate-cookies-product-id\", data.results[0].id); ",
											"    pm.environment.set(\"nuts-for-chocolate-cookies-product-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"nuts-for-chocolate-cookies-product-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"nuts-for-chocolate-cookies-product-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"nuts-for-chocolate-cookies-product-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"nuts-for-chocolate-cookies-product-key\", data.key);",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"productType\":{\n        \"typeId\":\"product-type\",\n        \"id\":\"{{product-type-id-recipe}}\"\n    },\n    \"name\":{\n        \"de\":\"Nuts For Chocolate Cookies Recipe\",\n        \"en\":\"Nuts For Chocolate Cookies Recipe\"\n    },\n    \"slug\":{\n        \"de\":\"nuts-for-chocolate-cookies-recipe\",\n        \"en\":\"nuts-for-chocolate-cookies-recipe\"\n    },\n    \"metaTitle\":{\n        \"de\":\"nuts-for-chocolate-cookies-recipe\",\n        \"en\":\"nuts-for-chocolate-cookies-recipe\"\n    },\n    \"masterVariant\":{\n        \"id\":1,\n        \"sku\":\"nuts-for-chocolate-cookies-recipe\",\n        \"key\":\"nuts-for-chocolate-cookies-recipe\",\n        \"prices\":[\n            {\n            \"value\":{\n                \"type\":\"centPrecision\",\n                \"currencyCode\":\"EUR\",\n                \"centAmount\":2000,\n                \"fractionDigits\":2\n            },\n            \"country\":\"DE\"\n            }\n        ],\n        \"images\":[],\n        \"attributes\": [\n          {\n            \"name\": \"ingredient-info\",\n            \"value\": [\n                [\n                    {\n                    \"name\": \"Item\",\n                    \"value\": {\n                        \"typeId\": \"product\",\n                        \"id\": \"{{sugar-cookie-mix-product-id}}\"\n                    }\n                    },\n                    {\n                    \"name\": \"SKU\",\n                    \"value\": \"sugar-cookie-mix-01\"\n                    },\n                    {\n                    \"name\": \"Quantity\",\n                    \"value\": 1\n                    }\n                ],\n                [\n                    {\n                    \"name\": \"Item\",\n                    \"value\": {\n                        \"typeId\": \"product\",\n                        \"id\": \"{{walnut-pieces-product-id}}\"\n                    }\n                    },\n                    {\n                    \"name\": \"SKU\",\n                    \"value\": \"walnut-pieces-01\"\n                    },\n                    {\n                    \"name\": \"Quantity\",\n                    \"value\": 3\n                    }\n                ],\n                [\n                    {\n                    \"name\": \"Item\",\n                    \"value\": {\n                        \"typeId\": \"product\",\n                        \"id\": \"{{semi-sweet-chocolate-pieces-product-id}}\"\n                    }\n                    },\n                    {\n                    \"name\": \"SKU\",\n                    \"value\": \"semi-sweet-chocolate-chips-01\"\n                    },\n                    {\n                    \"name\": \"Quantity\",\n                    \"value\": 3\n                    }\n                ],\n                [\n                    {\n                    \"name\": \"Item\",\n                    \"value\": {\n                        \"typeId\": \"product\",\n                        \"id\": \"{{semi-sweet-chocolate-pieces-product-id}}\"\n                    }\n                    },\n                    {\n                    \"name\": \"SKU\",\n                    \"value\": \"semi-sweet-chocolate-chips-02\"\n                    },\n                    {\n                    \"name\": \"Quantity\",\n                    \"value\": 2\n                    }\n                ]\n            ]\n          }\n        ],\n    \"searchKeywords\":{\n        }\n    },\n    \"publish\": true,\n    \"key\":\"nuts-for-chocolate-cookies-recip\",\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/products",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"products"
									],
									"query": [
										{
											"key": "priceCurrency",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCountry",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCustomerGroup",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceChannel",
											"value": "",
											"disabled": true
										},
										{
											"key": "localeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "storeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "033 Create Product - Fluffy Sugar Cookies Recipe",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"fluffy-sugar-cookies-product-id\", data.results[0].id); ",
											"    pm.environment.set(\"fluffy-sugar-cookies-product-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"fluffy-sugar-cookies-product-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"fluffy-sugar-cookies-product-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"fluffy-sugar-cookies-product-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"fluffy-sugar-cookies-product-key\", data.key);",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"productType\":{\n        \"typeId\":\"product-type\",\n        \"id\":\"{{product-type-id-recipe}}\"\n    },\n    \"name\":{\n        \"de\":\"Fluffy Sugar Cookies Recipe\",\n        \"en\":\"Fluffy Sugar Cookies Recipe\"\n    },\n    \"slug\":{\n        \"de\":\"fluffy-sugar-cookies-recipe\",\n        \"en\":\"fluffy-sugar-cookies-recipe\"\n    },\n    \"metaTitle\":{\n        \"de\":\"fluffy-sugar-cookies-recipe\",\n        \"en\":\"fluffy-sugar-cookies-recipe\"\n    },\n    \"masterVariant\":{\n        \"id\":1,\n        \"sku\":\"fluffy-sugar-cookies-recipe\",\n        \"key\":\"fluffy-sugar-cookies-recipe\",\n        \"prices\":[\n            {\n            \"value\":{\n                \"type\":\"centPrecision\",\n                \"currencyCode\":\"EUR\",\n                \"centAmount\":2000,\n                \"fractionDigits\":2\n            },\n            \"country\":\"DE\"\n            }\n        ],\n        \"images\":[],\n        \"attributes\": [\n          {\n            \"name\": \"ingredient-info\",\n            \"value\": [\n                [\n                    {\n                    \"name\": \"Item\",\n                    \"value\": {\n                        \"typeId\": \"product\",\n                        \"id\": \"{{sugar-cookie-mix-product-id}}\"\n                    }\n                    },\n                    {\n                    \"name\": \"SKU\",\n                    \"value\": \"sugar-cookie-mix-05\"\n                    },\n                    {\n                    \"name\": \"Quantity\",\n                    \"value\": 1\n                    }\n                ]\n            ]\n          }\n        ],\n    \"searchKeywords\":{\n        }\n    },\n    \"publish\": true,\n    \"key\":\"fluffy-sugar-cookies-recipe\",\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/products",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"products"
									],
									"query": [
										{
											"key": "priceCurrency",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCountry",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCustomerGroup",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceChannel",
											"value": "",
											"disabled": true
										},
										{
											"key": "localeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "storeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Customer Groups (for Case 5)",
					"item": [
						{
							"name": "01 Create CustomerGroup",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"customer-group-id-01\", data.results[0].id); ",
											"    pm.environment.set(\"customer-group-version-01\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"customer-group-key-01\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"customer-group-version-01\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"customer-group-id-01\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"customer-group-key-01\", data.key);",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"groupName\" : \"B2B Group 1\",\n  \"key\" : \"b2b-group1\"\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/customer-groups",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"customer-groups"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "Create CustomerGroup"
							},
							"response": []
						},
						{
							"name": "02 Create CustomerGroup",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"customer-group-id-02\", data.results[0].id); ",
											"    pm.environment.set(\"customer-group-version-02\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"customer-group-key-02\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"customer-group-version-02\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"customer-group-id-02\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"customer-group-key-02\", data.key);",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"groupName\" : \"B2B Group 2\",\n  \"key\" : \"b2b-group2\"\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/customer-groups",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"customer-groups"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "Create CustomerGroup"
							},
							"response": []
						},
						{
							"name": "03 Create CustomerGroup",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"customer-group-id-03\", data.results[0].id); ",
											"    pm.environment.set(\"customer-group-version-03\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"customer-group-key-03\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"customer-group-version-03\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"customer-group-id-03\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"customer-group-key-03\", data.key);",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"groupName\" : \"B2B Group 3\",\n  \"key\" : \"b2b-group3\"\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/customer-groups",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"customer-groups"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "Create CustomerGroup"
							},
							"response": []
						},
						{
							"name": "04 Create CustomerGroup",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"customer-group-id-04\", data.results[0].id); ",
											"    pm.environment.set(\"customer-group-version-04\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"customer-group-key-04\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"customer-group-version-04\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"customer-group-id-04\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"customer-group-key-04\", data.key);",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"groupName\" : \"B2B Group 4\",\n  \"key\" : \"b2b-group4\"\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/customer-groups",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"customer-groups"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "Create CustomerGroup"
							},
							"response": []
						}
					]
				},
				{
					"name": "Case 5 - Pricing",
					"item": [
						{
							"name": "01 Create ProductType - School lunch",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"product-type-id-lunch\", data.results[0].id); ",
											"    pm.environment.set(\"product-type-version-lunch\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"product-type-key-lunch\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"product-type-version-lunch\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"product-type-id-lunch\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"product-type-key-lunch\", data.key);",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\" : \"School Lunch\",\n  \"description\" : \"School Lunch\",\n  \"key\" : \"school-lunch-product-type\",\n  \"attributes\" : [ \n  {\n    \"type\" : {\n      \"name\" : \"boolean\"\n    },\n    \"isSearchable\" : true,\n    \"name\" : \"withDrink\",\n    \"label\" : {\n      \"en\" : \"Drink included\",\n      \"de\" : \"Drink included\"\n    },\n    \"isRequired\" : true\n  } ]\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/product-types",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"product-types"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "Create ProductType"
							},
							"response": []
						},
						{
							"name": "02 Create Product - Avocado Egg Salad lunch",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"product-id\", data.results[0].id); ",
											"    pm.environment.set(\"product-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"product-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"product-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"product-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"product-key\", data.key);",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"productType\":{\n        \"typeId\":\"product-type\",\n        \"id\":\"{{product-type-id-lunch}}\"\n    },\n    \"name\":{\n        \"de\":\"Avocado Egg Salad Lunch\",\n        \"en\":\"Avocado Egg Salad Lunch\"\n    },\n    \"slug\":{\n        \"de\":\"avocado-egg-salad-lunch\",\n        \"en\":\"avocado-egg-salad-lunch\"\n    },\n    \"metaTitle\":{\n        \"de\":\"Avocado Egg Salad Lunch\",\n        \"en\":\"Avocado Egg Salad Lunch\"\n    },\n    \"masterVariant\":{\n        \"id\":1,\n        \"sku\":\"avocado-egg-salad-lunch-w-drink\",\n        \"key\":\"avocado-egg-salad-lunch-w-drink\",\n        \"images\":[],\n        \"attributes\":[\n            {\n            \"name\":\"withDrink\",\n            \"value\":true\n            }\n        ],\n        \"assets\":[]\n    },\n    \"variants\":[\n        {\n            \"id\":2,\n            \"sku\":\"avocado-egg-salad-lunch-no-drink\",\n            \"key\":\"avocado-egg-salad-lunch-no-drink\",\n            \"images\":[],\n            \"attributes\":[\n            {\n                \"name\":\"withDrink\",\n                \"value\":false\n            }\n            ],\n            \"assets\":[]\n        }\n    ],\n    \"searchKeywords\":{\n        \n    },\n    \"publish\": true,\n    \"key\":\"avocado-egg-salad-lunch\",\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/products",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"products"
									],
									"query": [
										{
											"key": "priceCurrency",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCountry",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCustomerGroup",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceChannel",
											"value": "",
											"disabled": true
										},
										{
											"key": "localeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "storeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "03 Create Product - Tomato salad grilled halloumi lunch",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"product-id\", data.results[0].id); ",
											"    pm.environment.set(\"product-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"product-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"product-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"product-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"product-key\", data.key);",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"productType\":{\n        \"typeId\":\"product-type\",\n        \"id\":\"{{product-type-id-lunch}}\"\n    },\n    \"name\":{\n        \"de\":\"Tomato Salad Grilled Halloumi Lunch\",\n        \"en\":\"Tomato Salad Grilled Halloumi Lunch\"\n    },\n    \"slug\":{\n        \"de\":\"tomato-salad-grilled-halloumi-lunch\",\n        \"en\":\"tomato-salad-grilled-halloumi-lunch\"\n    },\n    \"metaTitle\":{\n        \"de\":\"Tomato Salad Grilled Halloumi Lunch\",\n        \"en\":\"Tomato Salad Grilled Halloumi Lunch\"\n    },\n    \"masterVariant\":{\n        \"id\":1,\n        \"sku\":\"tomato-salad-grilled-halloumi-lunch-w-drink\",\n        \"key\":\"tomato-salad-grilled-halloumi-lunch-w-drink\",\n        \"images\":[],\n        \"attributes\":[\n            {\n            \"name\":\"withDrink\",\n            \"value\":true\n            }\n        ],\n        \"assets\":[]\n    },\n    \"variants\":[\n        {\n            \"id\":2,\n            \"sku\":\"tomato-salad-grilled-halloumi-lunch-no-drink\",\n            \"key\":\"tomato-salad-grilled-halloumi-lunch-no-drink\",\n            \"images\":[],\n            \"attributes\":[\n            {\n                \"name\":\"withDrink\",\n                \"value\":false\n            }\n            ],\n            \"assets\":[]\n        }\n    ],\n    \"searchKeywords\":{\n        \n    },\n    \"publish\": true,\n    \"key\":\"tomato-salad-grilled-halloumi-lunch\",\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/products",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"products"
									],
									"query": [
										{
											"key": "priceCurrency",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCountry",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCustomerGroup",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceChannel",
											"value": "",
											"disabled": true
										},
										{
											"key": "localeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "storeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "04 Create Product - Avocado Poke Bowl Lunch",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"product-id\", data.results[0].id); ",
											"    pm.environment.set(\"product-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"product-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"product-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"product-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"product-key\", data.key);",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"productType\":{\n        \"typeId\":\"product-type\",\n        \"id\":\"{{product-type-id-lunch}}\"\n    },\n    \"name\":{\n        \"de\":\"Avocado Poke Bowl Lunch\",\n        \"en\":\"Avocado Poke Bowl Lunch\"\n    },\n    \"slug\":{\n        \"de\":\"avocado-poke-bowl-lunch\",\n        \"en\":\"avocado-poke-bowl-lunch\"\n    },\n    \"metaTitle\":{\n        \"de\":\"Avocado Poke Bowl Lunch\",\n        \"en\":\"Avocado Poke Bowl Lunch\"\n    },\n    \"masterVariant\":{\n        \"id\":1,\n        \"sku\":\"avocado-poke-bowl-lunch-w-drink\",\n        \"key\":\"avocado-poke-bowl-lunch-w-drink\",\n        \"images\":[],\n        \"attributes\":[\n            {\n            \"name\":\"withDrink\",\n            \"value\":true\n            }\n        ],\n        \"assets\":[]\n    },\n    \"variants\":[\n        {\n            \"id\":2,\n            \"sku\":\"avocado-poke-bowl-lunch-no-drink\",\n            \"key\":\"avocado-poke-bowl-lunch-no-drink\",\n            \"images\":[],\n            \"attributes\":[\n            {\n                \"name\":\"withDrink\",\n                \"value\":false\n            }\n            ],\n            \"assets\":[]\n        }\n    ],\n    \"searchKeywords\":{\n        \n    },\n    \"publish\": true,\n    \"key\":\"avocado-poke-bowl-lunch\",\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/products",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"products"
									],
									"query": [
										{
											"key": "priceCurrency",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCountry",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCustomerGroup",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceChannel",
											"value": "",
											"disabled": true
										},
										{
											"key": "localeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "storeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "05 Create Product - Chicken Wrap With Arugula",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"product-id\", data.results[0].id); ",
											"    pm.environment.set(\"product-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"product-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"product-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"product-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"product-key\", data.key);",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"productType\":{\n        \"typeId\":\"product-type\",\n        \"id\":\"{{product-type-id-lunch}}\"\n    },\n    \"name\":{\n        \"de\":\"Chicken Wrap With Arugula\",\n        \"en\":\"Chicken Wrap With Arugula\"\n    },\n    \"slug\":{\n        \"de\":\"chicken-wrap-with-arugula\",\n        \"en\":\"chicken-wrap-with-arugula\"\n    },\n    \"metaTitle\":{\n        \"de\":\"Chicken Wrap With Arugula\",\n        \"en\":\"Chicken Wrap With Arugula\"\n    },\n    \"masterVariant\":{\n        \"id\":1,\n        \"sku\":\"chicken-wrap-with-arugula-w-drink\",\n        \"key\":\"chicken-wrap-with-arugula-w-drink\",\n        \"images\":[],\n        \"attributes\":[\n            {\n            \"name\":\"withDrink\",\n            \"value\":true\n            }\n        ],\n        \"assets\":[]\n    },\n    \"variants\":[\n        {\n            \"id\":2,\n            \"sku\":\"chicken-wrap-with-arugula-no-drink\",\n            \"key\":\"chicken-wrap-with-arugula-no-drink\",\n            \"images\":[],\n            \"attributes\":[\n            {\n                \"name\":\"withDrink\",\n                \"value\":false\n            }\n            ],\n            \"assets\":[]\n        }\n    ],\n    \"searchKeywords\":{\n        \n    },\n    \"publish\": true,\n    \"key\":\"chicken-wrap-with-arugula\",\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/products",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"products"
									],
									"query": [
										{
											"key": "priceCurrency",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCountry",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCustomerGroup",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceChannel",
											"value": "",
											"disabled": true
										},
										{
											"key": "localeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "storeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Case 8 - Shipping",
					"item": [
						{
							"name": "01 Create ProductType - Grill",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"product-type-id-grill\", data.results[0].id); ",
											"    pm.environment.set(\"product-type-version-grill\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"product-type-key-grill\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"product-type-version-grill\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"product-type-id-grill\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"product-type-key-grill\", data.key);",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\" : \"Grill\",\n  \"description\" : \"Grill\",\n  \"key\" : \"grill-product-type\",\n  \"attributes\" : [ {\n    \"type\" : {\n      \"name\" : \"text\"\n    },\n    \"isSearchable\" : true,\n    \"inputHint\" : \"SingleLine\",\n    \"name\" : \"brand\",\n    \"label\" : {\n      \"en\" : \"Brand\",\n      \"de\" : \"Brand\"\n    },\n    \"isRequired\" : true,\n    \"sameForAll\" : true\n  },\n  {\n    \"type\" : {\n      \"name\" : \"text\"\n    },\n    \"isSearchable\" : true,\n    \"inputHint\" : \"SingleLine\",\n    \"name\" : \"model\",\n    \"label\" : {\n      \"en\" : \"Model\",\n      \"de\" : \"Model\"\n    },\n    \"isRequired\" : true,\n    \"sameForAll\" : true\n  },\n  {\n    \"type\" : {\n      \"name\" : \"text\"\n    },\n    \"isSearchable\" : true,\n    \"inputHint\" : \"SingleLine\",\n    \"name\" : \"submodel\",\n    \"label\" : {\n      \"en\" : \"Sub Model\",\n      \"de\" : \"Sub Model\"\n    },\n    \"isRequired\" : true,\n    \"attributeConstraint\" : \"Unique\"\n  },\n  {\n    \"type\" : {\n      \"name\" : \"boolean\"\n    },\n    \"isSearchable\" : true,\n    \"inputHint\" : \"SingleLine\",\n    \"name\" : \"heavy_weight\",\n    \"label\" : {\n      \"en\" : \"Heavy weight\",\n      \"de\" : \"Heavy weight\"\n    },\n    \"isRequired\" : true\n  }\n  ]\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/product-types",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"product-types"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "Create ProductType"
							},
							"response": []
						},
						{
							"name": "021 Create Product - Grill",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"product-id-grill\", data.results[0].id); ",
											"    pm.environment.set(\"product-version-grill\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"product-key-grill\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"product-version-grill\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"product-id-grill\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"product-key-grill\", data.key);",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\n{\n    \"productType\":{\n        \"typeId\":\"product-type\",\n        \"id\":\"{{product-type-id-grill}}\"\n    },\n    \"name\":{\n        \"de\":\"Weber 502\",\n        \"en\":\"Weber 502\"\n    },\n    \"slug\":{\n        \"de\":\"weber-502\",\n        \"en\":\"weber-502\"\n    },\n    \"metaTitle\":{\n        \"de\":\"weber-502\",\n        \"en\":\"weber-502\"\n    },\n    \"masterVariant\":{\n        \"id\":1,\n        \"sku\":\"weber-502-x21\",\n        \"key\":\"weber-502-x21\",\n        \"attributes\":[\n            {\n            \"name\":\"brand\",\n            \"value\":\"Weber\"\n            },\n            {\n            \"name\":\"model\",\n            \"value\":\"502\"\n            },\n            {\n            \"name\":\"submodel\",\n            \"value\":\"X21\"\n            },\n            {\n            \"name\":\"heavy_weight\",\n            \"value\":false\n            }\n        ],\n        \"prices\":[\n            {\n            \"value\":{\n                \"type\":\"centPrecision\",\n                \"currencyCode\":\"EUR\",\n                \"centAmount\":12900,\n                \"fractionDigits\":2\n            },\n            \"country\":\"DE\"\n            }\n        ],\n        \"images\":[],\n       \"assets\":[]\n    },\n    \"variants\":[\n        {\n            \"id\":2,\n            \"sku\":\"weber-502-x22\",\n            \"key\":\"weber-502-x22\",\n            \"prices\":[\n            {\n                \"value\":{\n                    \"type\":\"centPrecision\",\n                    \"currencyCode\":\"EUR\",\n                    \"centAmount\":14999,\n                    \"fractionDigits\":2\n                },\n                \"country\":\"DE\"\n            }\n            ],\n            \"images\":[],\n        \"attributes\":[\n            {\n            \"name\":\"brand\",\n            \"value\":\"Weber\"\n            },\n            {\n            \"name\":\"model\",\n            \"value\":\"502\"\n            },\n            {\n            \"name\":\"submodel\",\n            \"value\":\"X22\"\n            },\n            {\n            \"name\":\"heavy_weight\",\n            \"value\":false\n            }\n            ],\n            \"assets\":[]\n        },\n                {\n            \"id\":3,\n            \"sku\":\"weber-502-x23\",\n            \"key\":\"weber-502-x23\",\n            \"prices\":[\n            {\n                \"value\":{\n                    \"type\":\"centPrecision\",\n                    \"currencyCode\":\"EUR\",\n                    \"centAmount\":16999,\n                    \"fractionDigits\":2\n                },\n                \"country\":\"DE\"\n            }\n            ],\n            \"images\":[],\n        \"attributes\":[\n            {\n            \"name\":\"brand\",\n            \"value\":\"Weber\"\n            },\n            {\n            \"name\":\"model\",\n            \"value\":\"502\"\n            },\n            {\n            \"name\":\"submodel\",\n            \"value\":\"X23\"\n            },\n            {\n            \"name\":\"heavy_weight\",\n            \"value\":true\n            }\n            ],\n            \"assets\":[]\n        }\n    ],\n      \"searchKeywords\":{\n    },\n    \"publish\": true,\n    \"key\":\"weber-502\",\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/products",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"products"
									],
									"query": [
										{
											"key": "priceCurrency",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCountry",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCustomerGroup",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceChannel",
											"value": "",
											"disabled": true
										},
										{
											"key": "localeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "storeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "To create a new product, send a representation that is going to become the initial staged representation\nof the new product in the master catalog. If price selection query parameters are provided,\nthe selected prices will be added to the response.\n"
							},
							"response": []
						}
					]
				},
				{
					"name": "Case 9 - Discounts",
					"item": [
						{
							"name": "01 Create Category - Kitchen Gadgets",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"category-id-gadgets\", data.results[0].id); ",
											"    pm.environment.set(\"category-version-gadgets\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"category-key-gadgets\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"category-version-gadgets\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"category-id-gadgets\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"category-key-gadgets\", data.key);",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\" : {\n    \"en\" : \"Kitchen Gadgets\",\n    \"de\" : \"Kitchen Gadgets\"\n  },\n  \"slug\" : {\n    \"en\" : \"kitchen-gadgets\",\n    \"de\" : \"kitchen-gadgets\"\n  },\n  \"key\" :  \"kitchen-gadgets\",\n  \"orderHint\" : \"0.1\"\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/categories",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"categories"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "Creating a category produces the CategoryCreated message."
							},
							"response": []
						},
						{
							"name": "011 Create Product - Pancakebot",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"product-id\", data.results[0].id); ",
											"    pm.environment.set(\"product-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"product-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"product-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"product-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"product-key\", data.key);",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\n{\n    \"productType\":{\n        \"typeId\":\"product-type\",\n        \"id\":\"{{product-type-id-equipment}}\"\n    },\n    \"categories\" : [ {\n      \"typeId\" : \"category\",\n      \"id\" : \"{{category-id-gadgets}}\"\n    } ],\n    \"name\":{\n        \"de\":\"Pancakebot\",\n        \"en\":\"Pancakebot\"\n    },\n    \"slug\":{\n        \"de\":\"pancakebot\",\n        \"en\":\"pancakebot\"\n    },\n    \"metaTitle\":{\n        \"de\":\"Pancakebot\",\n        \"en\":\"Pancakebot\"\n    },\n    \"masterVariant\":{\n        \"id\":1,\n        \"sku\":\"pancakebot\",\n        \"key\":\"pancakebot\",\n        \"images\":[],\n       \"assets\":[]\n    },\n    \"searchKeywords\":{\n        \n    },\n    \"publish\": true,\n    \"key\":\"pancakebot\",\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/products",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"products"
									],
									"query": [
										{
											"key": "priceCurrency",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCountry",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCustomerGroup",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceChannel",
											"value": "",
											"disabled": true
										},
										{
											"key": "localeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "storeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "To create a new product, send a representation that is going to become the initial staged representation\nof the new product in the master catalog. If price selection query parameters are provided,\nthe selected prices will be added to the response.\n"
							},
							"response": []
						},
						{
							"name": "012 Create Product - Egg Separator",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"product-id\", data.results[0].id); ",
											"    pm.environment.set(\"product-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"product-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"product-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"product-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"product-key\", data.key);",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\n{\n    \"productType\":{\n        \"typeId\":\"product-type\",\n        \"id\":\"{{product-type-id-equipment}}\"\n    },\n    \"categories\" : [ {\n      \"typeId\" : \"category\",\n      \"id\" : \"{{category-id-gadgets}}\"\n    } ],\n    \"name\":{\n        \"de\":\"Egg Separator\",\n        \"en\":\"Egg Separator\"\n    },\n    \"slug\":{\n        \"de\":\"egg-separator\",\n        \"en\":\"egg-separator\"\n    },\n    \"metaTitle\":{\n        \"de\":\"Egg Separator\",\n        \"en\":\"Egg Separator\"\n    },\n    \"masterVariant\":{\n        \"id\":1,\n        \"sku\":\"egg-separator\",\n        \"key\":\"egg-separator\",\n        \"images\":[],\n       \"assets\":[]\n    },\n    \"searchKeywords\":{\n        \n    },\n    \"publish\": true,\n    \"key\":\"egg-separator\",\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/products",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"products"
									],
									"query": [
										{
											"key": "priceCurrency",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCountry",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCustomerGroup",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceChannel",
											"value": "",
											"disabled": true
										},
										{
											"key": "localeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "storeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "To create a new product, send a representation that is going to become the initial staged representation\nof the new product in the master catalog. If price selection query parameters are provided,\nthe selected prices will be added to the response.\n"
							},
							"response": []
						},
						{
							"name": "013 Create Product - Pocket Sized Nutrition Scale",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"product-id\", data.results[0].id); ",
											"    pm.environment.set(\"product-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"product-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"product-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"product-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"product-key\", data.key);",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\n{\n    \"productType\":{\n        \"typeId\":\"product-type\",\n        \"id\":\"{{product-type-id-equipment}}\"\n    },\n    \"categories\" : [ {\n      \"typeId\" : \"category\",\n      \"id\" : \"{{category-id-gadgets}}\"\n    } ],\n    \"name\":{\n        \"de\":\"Pocket Sized Nutrition Scale\",\n        \"en\":\"Pocket Sized Nutrition Scale\"\n    },\n    \"slug\":{\n        \"de\":\"pocket-sized-nutrition-scale\",\n        \"en\":\"pocket-sized-nutrition-scale\"\n    },\n    \"metaTitle\":{\n        \"de\":\"Pocket Sized Nutrition Scale\",\n        \"en\":\"Pocket Sized Nutrition Scale\"\n    },\n    \"masterVariant\":{\n        \"id\":1,\n        \"sku\":\"pocket-sized-nutrition-scale\",\n        \"key\":\"pocket-sized-nutrition-scale\",\n        \"images\":[],\n       \"assets\":[]\n    },\n    \"searchKeywords\":{\n        \n    },\n    \"publish\": true,\n    \"key\":\"pocket-sized-nutrition-scale\",\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/products",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"products"
									],
									"query": [
										{
											"key": "priceCurrency",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCountry",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCustomerGroup",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceChannel",
											"value": "",
											"disabled": true
										},
										{
											"key": "localeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "storeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "To create a new product, send a representation that is going to become the initial staged representation\nof the new product in the master catalog. If price selection query parameters are provided,\nthe selected prices will be added to the response.\n"
							},
							"response": []
						},
						{
							"name": "014 Create Product - Accusharp Knife Sharpener",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"product-id\", data.results[0].id); ",
											"    pm.environment.set(\"product-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"product-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"product-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"product-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"product-key\", data.key);",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\n{\n    \"productType\":{\n        \"typeId\":\"product-type\",\n        \"id\":\"{{product-type-id-equipment}}\"\n    },\n    \"categories\" : [ {\n      \"typeId\" : \"category\",\n      \"id\" : \"{{category-id-gadgets}}\"\n    } ],\n    \"name\":{\n        \"de\":\"Accusharp Knife Sharpener\",\n        \"en\":\"Accusharp Knife Sharpener\"\n    },\n    \"slug\":{\n        \"de\":\"accusharp-knife-sharpener\",\n        \"en\":\"accusharp-knife-sharpener\"\n    },\n    \"metaTitle\":{\n        \"de\":\"Accusharp Knife Sharpener\",\n        \"en\":\"Accusharp Knife Sharpener\"\n    },\n    \"masterVariant\":{\n        \"id\":1,\n        \"sku\":\"accusharp-knife-sharpener\",\n        \"key\":\"accusharp-knife-sharpener\",\n        \"images\":[],\n       \"assets\":[]\n    },\n    \"searchKeywords\":{\n        \n    },\n    \"publish\": true,\n    \"key\":\"accusharp-knife-sharpener\",\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/products",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"products"
									],
									"query": [
										{
											"key": "priceCurrency",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCountry",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCustomerGroup",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceChannel",
											"value": "",
											"disabled": true
										},
										{
											"key": "localeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "storeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "To create a new product, send a representation that is going to become the initial staged representation\nof the new product in the master catalog. If price selection query parameters are provided,\nthe selected prices will be added to the response.\n"
							},
							"response": []
						},
						{
							"name": "015 Create Product - Garlic Press",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"product-id\", data.results[0].id); ",
											"    pm.environment.set(\"product-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"product-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"product-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"product-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"product-key\", data.key);",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\n{\n    \"productType\":{\n        \"typeId\":\"product-type\",\n        \"id\":\"{{product-type-id-equipment}}\"\n    },\n    \"categories\" : [ {\n      \"typeId\" : \"category\",\n      \"id\" : \"{{category-id-gadgets}}\"\n    } ],\n    \"name\":{\n        \"de\":\"Garlic Press\",\n        \"en\":\"Garlic Press\"\n    },\n    \"slug\":{\n        \"de\":\"garlic-press\",\n        \"en\":\"garlic-press\"\n    },\n    \"metaTitle\":{\n        \"de\":\"Garlic Press\",\n        \"en\":\"Garlic Press\"\n    },\n    \"masterVariant\":{\n        \"id\":1,\n        \"sku\":\"garlic-press\",\n        \"key\":\"garlic-press\",\n        \"images\":[],\n       \"assets\":[]\n    },\n    \"searchKeywords\":{\n        \n    },\n    \"publish\": true,\n    \"key\":\"garlic-press\",\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/products",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"products"
									],
									"query": [
										{
											"key": "priceCurrency",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCountry",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCustomerGroup",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceChannel",
											"value": "",
											"disabled": true
										},
										{
											"key": "localeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "storeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "To create a new product, send a representation that is going to become the initial staged representation\nof the new product in the master catalog. If price selection query parameters are provided,\nthe selected prices will be added to the response.\n"
							},
							"response": []
						},
						{
							"name": "016 Create Product - Edible Ink Cartridge",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"product-id\", data.results[0].id); ",
											"    pm.environment.set(\"product-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"product-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"product-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"product-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"product-key\", data.key);",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\n{\n    \"productType\":{\n        \"typeId\":\"product-type\",\n        \"id\":\"{{product-type-id-equipment}}\"\n    },\n    \"categories\" : [ {\n      \"typeId\" : \"category\",\n      \"id\" : \"{{category-id-gadgets}}\"\n    } ],\n    \"name\":{\n        \"de\":\"Edible Ink Cartridge\",\n        \"en\":\"Edible Ink Cartridge\"\n    },\n    \"slug\":{\n        \"de\":\"edible-ink-cartridge\",\n        \"en\":\"edible-ink-cartridge\"\n    },\n    \"metaTitle\":{\n        \"de\":\"Edible Ink Cartridge\",\n        \"en\":\"Edible Ink Cartridge\"\n    },\n    \"masterVariant\":{\n        \"id\":1,\n        \"sku\":\"edible-ink-cartridge\",\n        \"key\":\"edible-ink-cartridge\",\n        \"images\":[],\n       \"assets\":[]\n    },\n    \"searchKeywords\":{\n        \n    },\n    \"publish\": true,\n    \"key\":\"edible-ink-cartridge\",\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/products",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"products"
									],
									"query": [
										{
											"key": "priceCurrency",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCountry",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCustomerGroup",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceChannel",
											"value": "",
											"disabled": true
										},
										{
											"key": "localeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "storeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "To create a new product, send a representation that is going to become the initial staged representation\nof the new product in the master catalog. If price selection query parameters are provided,\nthe selected prices will be added to the response.\n"
							},
							"response": []
						},
						{
							"name": "02 Create Category - Chocolate Heaven",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"category-id-heaven\", data.results[0].id); ",
											"    pm.environment.set(\"category-version-heaven\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"category-key-heaven\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"category-version-heaven\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"category-id-heaven\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"category-key-heaven\", data.key);",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\" : {\n    \"en\" : \"Chocolate Heaven\",\n    \"de\" : \"Chocolate Heaven\"\n  },\n  \"key\" :  \"chocolate-heaven\",\n  \"slug\" : {\n    \"en\" : \"chocolate-heaven\",\n    \"de\" : \"chocolate-heaven\"\n  },\n  \"orderHint\" : \"0.2\"\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/categories",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"categories"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "Creating a category produces the CategoryCreated message."
							},
							"response": []
						},
						{
							"name": "03 Create ProductType - Designer Chocolate",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"product-type-id-chocolate\", data.results[0].id); ",
											"    pm.environment.set(\"product-type-version-chocolate\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"product-type-key-chocolate\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"product-type-version-chocolate\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"product-type-id-chocolate\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"product-type-key-chocolate\", data.key);",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\" : \"Designer Chocolate\",\n  \"description\" : \"Designer Chocolate\",\n  \"key\" : \"designer-chocolate-product-type\",\n  \"attributes\" : [ {\n    \"type\" : {\n      \"name\" : \"boolean\"\n    },\n    \"isSearchable\" : true,\n    \"inputHint\" : \"SingleLine\",\n    \"name\" : \"limited_edition\",\n    \"label\" : {\n      \"en\" : \"Limited Edition\",\n      \"de\" : \"Limited Edition\"\n    },\n    \"isRequired\" : true\n  } ]\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/product-types",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"product-types"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "Create ProductType"
							},
							"response": []
						},
						{
							"name": "031 Create Product - Chocolate scrumptious",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"product-id\", data.results[0].id); ",
											"    pm.environment.set(\"product-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"product-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"product-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"product-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"product-key\", data.key);",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\n{\n    \"productType\":{\n        \"typeId\":\"product-type\",\n        \"id\":\"{{product-type-id-chocolate}}\"\n    },\n    \"categories\" : [ {\n      \"typeId\" : \"category\",\n      \"id\" : \"{{category-id-heaven}}\"\n    } ],\n    \"name\":{\n        \"de\":\"Chocolate scrumptious\",\n        \"en\":\"Chocolate scrumptious\"\n    },\n    \"slug\":{\n        \"de\":\"chocolate-scrumptious\",\n        \"en\":\"chocolate-scrumptious\"\n    },\n    \"metaTitle\":{\n        \"de\":\"Chocolate scrumptious\",\n        \"en\":\"Chocolate scrumptious\"\n    },\n    \"masterVariant\":{\n        \"id\":1,\n        \"sku\":\"chocolate-scrumptious\",\n        \"key\":\"chocolate-scrumptious\",\n        \"images\":[],\n       \"assets\":[],\n        \"attributes\":[\n            {\n            \"name\":\"limited_edition\",\n            \"value\":true\n            }\n        ]\n    },\n    \"searchKeywords\":{\n        \n    },\n    \"publish\": true,\n    \"key\":\"chocolate-scrumptious\",\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/products",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"products"
									],
									"query": [
										{
											"key": "priceCurrency",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCountry",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCustomerGroup",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceChannel",
											"value": "",
											"disabled": true
										},
										{
											"key": "localeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "storeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "To create a new product, send a representation that is going to become the initial staged representation\nof the new product in the master catalog. If price selection query parameters are provided,\nthe selected prices will be added to the response.\n"
							},
							"response": []
						},
						{
							"name": "032 Create Product - Chocolate elegant",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"product-id\", data.results[0].id); ",
											"    pm.environment.set(\"product-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"product-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"product-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"product-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"product-key\", data.key);",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\n{\n    \"productType\":{\n        \"typeId\":\"product-type\",\n        \"id\":\"{{product-type-id-chocolate}}\"\n    },\n    \"categories\" : [ {\n      \"typeId\" : \"category\",\n      \"id\" : \"{{category-id-heaven}}\"\n    } ],\n    \"name\":{\n        \"de\":\"Chocolate elegant\",\n        \"en\":\"Chocolate elegant\"\n    },\n    \"slug\":{\n        \"de\":\"chocolate-elegant\",\n        \"en\":\"chocolate-elegant\"\n    },\n    \"metaTitle\":{\n        \"de\":\"Chocolate elegant\",\n        \"en\":\"Chocolate elegant\"\n    },\n    \"masterVariant\":{\n        \"id\":1,\n        \"sku\":\"chocolate-elegant\",\n        \"key\":\"chocolate-elegant\",\n        \"images\":[],\n       \"assets\":[],\n        \"attributes\":[\n            {\n            \"name\":\"limited_edition\",\n            \"value\":false\n            }\n        ]\n    },\n    \"searchKeywords\":{\n        \n    },\n    \"publish\": true,\n    \"key\":\"chocolate-elegant\",\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/products",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"products"
									],
									"query": [
										{
											"key": "priceCurrency",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCountry",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCustomerGroup",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceChannel",
											"value": "",
											"disabled": true
										},
										{
											"key": "localeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "storeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "To create a new product, send a representation that is going to become the initial staged representation\nof the new product in the master catalog. If price selection query parameters are provided,\nthe selected prices will be added to the response.\n"
							},
							"response": []
						},
						{
							"name": "033 Create Product - Chocolate marvel",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"product-id\", data.results[0].id); ",
											"    pm.environment.set(\"product-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"product-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"product-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"product-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"product-key\", data.key);",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\n{\n    \"productType\":{\n        \"typeId\":\"product-type\",\n        \"id\":\"{{product-type-id-chocolate}}\"\n    },\n    \"categories\" : [ {\n      \"typeId\" : \"category\",\n      \"id\" : \"{{category-id-heaven}}\"\n    } ],\n    \"name\":{\n        \"de\":\"Chocolate marvel\",\n        \"en\":\"Chocolate marvel\"\n    },\n    \"slug\":{\n        \"de\":\"chocolate-marvel\",\n        \"en\":\"chocolate-marvel\"\n    },\n    \"metaTitle\":{\n        \"de\":\"Chocolate marvel\",\n        \"en\":\"Chocolate marvel\"\n    },\n    \"masterVariant\":{\n        \"id\":1,\n        \"sku\":\"chocolate-marvel\",\n        \"key\":\"chocolate-marvel\",\n        \"images\":[],\n       \"assets\":[],\n        \"attributes\":[\n            {\n            \"name\":\"limited_edition\",\n            \"value\":false\n            }\n        ]\n    },\n    \"searchKeywords\":{\n        \n    },\n    \"publish\": true,\n    \"key\":\"chocolate-marvel\",\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/products",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"products"
									],
									"query": [
										{
											"key": "priceCurrency",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCountry",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCustomerGroup",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceChannel",
											"value": "",
											"disabled": true
										},
										{
											"key": "localeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "storeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "To create a new product, send a representation that is going to become the initial staged representation\nof the new product in the master catalog. If price selection query parameters are provided,\nthe selected prices will be added to the response.\n"
							},
							"response": []
						},
						{
							"name": "034 Create Product - Chocolate exquisite",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"product-id\", data.results[0].id); ",
											"    pm.environment.set(\"product-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"product-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"product-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"product-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"product-key\", data.key);",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\n{\n    \"productType\":{\n        \"typeId\":\"product-type\",\n        \"id\":\"{{product-type-id-chocolate}}\"\n    },\n    \"categories\" : [ {\n      \"typeId\" : \"category\",\n      \"id\" : \"{{category-id-heaven}}\"\n    } ],\n    \"name\":{\n        \"de\":\"Chocolate exquisite\",\n        \"en\":\"Chocolate exquisite\"\n    },\n    \"slug\":{\n        \"de\":\"chocolate-exquisite\",\n        \"en\":\"chocolate-exquisite\"\n    },\n    \"metaTitle\":{\n        \"de\":\"Chocolate exquisite\",\n        \"en\":\"Chocolate exquisite\"\n    },\n    \"masterVariant\":{\n        \"id\":1,\n        \"sku\":\"chocolate-exquisite\",\n        \"key\":\"chocolate-exquisite\",\n        \"images\":[],\n       \"assets\":[],\n        \"attributes\":[\n            {\n            \"name\":\"limited_edition\",\n            \"value\":true\n            }\n        ]\n    },\n    \"searchKeywords\":{\n        \n    },\n    \"publish\": true,\n    \"key\":\"chocolate-exquisite\",\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/products",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"products"
									],
									"query": [
										{
											"key": "priceCurrency",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCountry",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceCustomerGroup",
											"value": "",
											"disabled": true
										},
										{
											"key": "priceChannel",
											"value": "",
											"disabled": true
										},
										{
											"key": "localeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "storeProjection",
											"value": "",
											"disabled": true
										},
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "To create a new product, send a representation that is going to become the initial staged representation\nof the new product in the master catalog. If price selection query parameters are provided,\nthe selected prices will be added to the response.\n"
							},
							"response": []
						}
					]
				},
				{
					"name": "Misc Demos",
					"item": [
						{
							"name": "Create Custom Type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"type-id\", data.results[0].id); ",
											"    pm.environment.set(\"type-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"type-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"type-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"type-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"type-key\", data.key);",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n    \"key\": \"customer-info\",\n    \"name\": {\n        \"de\": \"Customer Info\",\n        \"en\": \"Customer Info\"\n    },\n    \"resourceTypeIds\": [\n        \"customer\"\n    ],\n    \"fieldDefinitions\": [\n    {\n        \"name\": \"shoesize\",\n        \"label\": {\n            \"de\": \"Shoe Size\",\n            \"en\": \"Shoe Size\"\n        },\n        \"required\": false,\n        \"type\": {\n        \"name\": \"Number\"\n        },\n        \"inputHint\": \"SingleLine\"\n    },\n    {\n        \"name\": \"shirtsize\",\n        \"label\": {\n        \"de\": \"Shirt Size\",\n        \"en\": \"Shirt Size\"\n        },\n        \"required\": false,\n        \"type\": {\n        \"name\": \"Number\"\n        },\n        \"inputHint\": \"SingleLine\"\n    }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/types",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"types"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "Create Type"
							},
							"response": []
						},
						{
							"name": "Create CustomObject - External Prices 01",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"custom-object-id\", data.results[0].id); ",
											"    pm.environment.set(\"custom-object-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"custom-object-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"custom-object-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"custom-object-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"custom-object-key\", data.key);",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"container\":\"ExternalPrices\",\n   \"key\":\"cust0001prod0001\",\n   \"value\":[{\n      \"VariantID\":\"1\",\n      \"MinQuantity\":\"5\",\n      \"Price\":\"15.99 USD\"\n   },\n   {\n      \"VariantID\":\"1\",\n      \"MinQuantity\":\"10\",\n      \"Price\":\"14.99 USD\"\n   },\n   {\n      \"VariantID\":\"1\",\n      \"MinQuantity\":\"15\",\n      \"Price\":\"13.99 USD\"\n   }\n   ]\n\n}\n"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/custom-objects",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"custom-objects"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "Creates a new custom object or updates an existing custom object.\nIf an object with the given container/key exists,\nthe object will be replaced with the new value and the version is incremented.\nIf the request contains a version and an object with the given container/key exists then the version\nmust match the version of the existing object. Concurrent updates for the same custom object still can result\nin a Conflict (409) even if the version is not provided.\nFields with null values will not be saved.\n"
							},
							"response": []
						},
						{
							"name": "Create CustomObject - External Prices 02",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"custom-object-id\", data.results[0].id); ",
											"    pm.environment.set(\"custom-object-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"custom-object-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"custom-object-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"custom-object-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"custom-object-key\", data.key);",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"container\":\"ExternalPrices\",\n   \"key\":\"cust0002prod0001\",\n   \"value\":[{\n      \"VariantID\":\"1\",\n      \"MinQuantity\":\"5\",\n      \"Price\":\"16.99 USD\"\n   },\n   {\n      \"VariantID\":\"1\",\n      \"MinQuantity\":\"10\",\n      \"Price\":\"15.99 USD\"\n   },\n   {\n      \"VariantID\":\"1\",\n      \"MinQuantity\":\"15\",\n      \"Price\":\"14.99 USD\"\n   }\n   ]\n\n}\n"
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/custom-objects",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"custom-objects"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "Creates a new custom object or updates an existing custom object.\nIf an object with the given container/key exists,\nthe object will be replaced with the new value and the version is incremented.\nIf the request contains a version and an object with the given container/key exists then the version\nmust match the version of the existing object. Concurrent updates for the same custom object still can result\nin a Conflict (409) even if the version is not provided.\nFields with null values will not be saved.\n"
							},
							"response": []
						},
						{
							"name": "Query Custom Objects for ExternalPrices",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
											"var data = JSON.parse(responseBody);",
											"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
											"    pm.environment.set(\"custom-object-id\", data.results[0].id); ",
											"    pm.environment.set(\"custom-object-version\", data.results[0].version);",
											"}",
											"if(data.results && data.results[0] && data.results[0].key){",
											"    pm.environment.set(\"custom-object-key\", data.results[0].key); ",
											"}",
											"if(data.version){",
											"    pm.environment.set(\"custom-object-version\", data.version);",
											"}",
											"if(data.id){",
											"    pm.environment.set(\"custom-object-id\", data.id); ",
											"}",
											"if(data.key){",
											"    pm.environment.set(\"custom-object-key\", data.key);",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{ctp_access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{project-key}}/custom-objects/ExternalPrices",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{project-key}}",
										"custom-objects",
										"ExternalPrices"
									],
									"query": [
										{
											"key": "expand",
											"value": "",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "",
											"disabled": true
										},
										{
											"key": "withTotal",
											"value": "",
											"disabled": true
										},
										{
											"key": "where",
											"value": "",
											"disabled": true
										},
										{
											"key": "/^var[.][a-zA-Z0-9]+$/",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "The query endpoint allows to retrieve custom objects in a specific container or all custom objects.\nFor performance reasons, it is highly advisable to query only for custom objects in a container by using\nthe container field in the where predicate.\n"
							},
							"response": []
						}
					]
				},
				{
					"name": "Obtain access token",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"var data = JSON.parse(responseBody);",
									"if(data.access_token){",
									"    pm.environment.set(\"ctp_access_token\", data.access_token);",
									"}",
									"if (data.scope) {",
									"    parts = data.scope.split(\" \");",
									"    parts = parts.filter(scope => scope.includes(\":\")).map(scope => scope.split(\":\"))",
									"    if (parts.length > 0) {",
									"        scopeParts = parts[0];",
									"        pm.environment.set(\"project-key\", scopeParts[1]);",
									"        parts = parts.filter(scope => scope.length >= 3)",
									"        if (parts.length > 0) {",
									"            scopeParts = parts[0];",
									"            pm.environment.set(\"store-key\", scopeParts[2]);",
									"        }",
									"    }",
									"}"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{client_id}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{client_secret}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{auth_url}}/oauth/token?grant_type=client_credentials",
							"host": [
								"{{auth_url}}"
							],
							"path": [
								"oauth",
								"token"
							],
							"query": [
								{
									"key": "grant_type",
									"value": "client_credentials"
								}
							]
						},
						"description": "Use this request to obtain an access token for your commercetools platform project via Client Credentials Flow. As a prerequisite you must have filled out environment variables in Postman for projectKey, client_id and client_secret to use this."
					},
					"response": []
				},
				{
					"name": "Get TaxCategory",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"tax-category-id\", data.results[0].id); ",
									"    pm.environment.set(\"tax-category-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"tax-category-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"tax-category-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"tax-category-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"tax-category-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/tax-categories",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"tax-categories"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Get TaxCategory by key"
					},
					"response": []
				}
			]
		},
		{
			"name": ".NET",
			"item": [
				{
					"name": "01 Create ProductType - phone",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"product-type-id-clothing\", data.results[0].id); ",
									"    pm.environment.set(\"product-type-version-clothing\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"product-type-key-clothing\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"product-type-version-clothing\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"product-type-id-clothing\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"product-type-key-clothing\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\" : \"PhonePT\",\n  \"description\" : \"Phone product type for .NET class\",\n  \"key\" : \"PhonePT\",\n  \"attributes\" : [ {\n    \"type\" : {\n      \"name\" : \"text\"\n    },\n    \"isSearchable\" : true,\n    \"inputHint\" : \"SingleLine\",\n    \"name\" : \"phonecolor\",\n    \"label\" : {\n      \"en\" : \"Color\",\n      \"de\" : \"Color\"\n    },\n    \"isRequired\" : true,\n    \"attributeConstraint\" : \"Unique\"\n  },\n  {\n    \"type\" : {\n      \"name\" : \"number\"\n    },\n    \"isSearchable\" : false,\n    \"name\" : \"phoneweight\",\n    \"label\" : {\n      \"en\" : \"Weight\",\n      \"de\" : \"Weight\"\n    },\n    \"isRequired\" : true,\n    \"attributeConstraint\" : \"Unique\"\n  } ]\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/product-types",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"product-types"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Create ProductType"
					},
					"response": []
				}
			]
		},
		{
			"name": "FA Exam Prep",
			"item": [
				{
					"name": "01 Create ProductType - Room Access",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"product-type-id-room-access\", data.results[0].id); ",
									"    pm.environment.set(\"product-type-version-room-access\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"product-type-key-room-access\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"product-type-version-room-access\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"product-type-id-room-access\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"product-type-key-room-access\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"key\" : \"room-access\",\n  \"name\" : \"Room access\",\n  \"description\" : \"Room access\",\n  \"attributes\" : [ \n         {\n          \"name\": \"room-type\",\n          \"label\": {\n            \"de\": \"Room type\",\n            \"en\": \"Room type\"\n          },\n          \"inputTip\": {\n            \"de\": \"Room type\",\n            \"en\": \"Room type\"\n          },\n          \"isRequired\": true,\n          \"type\": {\n            \"name\": \"enum\",\n            \"values\": [\n              {\n                \"key\": \"weight-room\",\n                \"label\": \"Weight room\"\n              },\n              {\n                \"key\": \"fitness-room\",\n                \"label\": \"Fitness room\"\n              },\n              {\n                \"key\": \"sauna\",\n                \"label\": \"Sauna\"\n              },\n              {\n                \"key\": \"steam-room\",\n                \"label\": \"Steam room\"\n              }\n            ]\n          },\n          \"attributeConstraint\": \"None\",\n          \"isSearchable\": true\n        },\n        {\n          \"name\": \"duration\",\n          \"label\": {\n            \"de\": \"Duration\",\n            \"en\": \"Duration\"\n          },\n          \"inputTip\": {\n            \"de\": \"Duration\",\n            \"en\": \"Duration\"\n          },\n          \"isRequired\": true,\n          \"type\": {\n            \"name\": \"enum\",\n            \"values\": [\n              {\n                \"key\": \"monthly\",\n                \"label\": \"Monthly\"\n              },\n              {\n                \"key\": \"annual\",\n                \"label\": \"Annual\"\n              }\n            ]\n          },\n          \"attributeConstraint\": \"None\",\n          \"isSearchable\": true\n        }\n      ]\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/product-types",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"product-types"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Create ProductType"
					},
					"response": []
				},
				{
					"name": "02 Create ProductType - Membership",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"product-type-id-membership\", data.results[0].id); ",
									"    pm.environment.set(\"product-type-version-membership\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"product-type-key-membership\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"product-type-version-membership\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"product-type-id-membership\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"product-type-key-membership\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n      \"key\": \"membership\",\n      \"name\": \"Membership\",\n      \"description\": \"Membership\",\n      \"attributes\": [\n        {\n          \"name\": \"duration\",\n          \"label\": {\n            \"de\": \"Duration\",\n            \"en\": \"Duration\"\n          },\n          \"inputTip\": {\n            \"de\": \"Duration\",\n            \"en\": \"Duration\"\n          },\n          \"isRequired\": true,\n          \"type\": {\n            \"name\": \"enum\",\n            \"values\": [\n              {\n                \"key\": \"monthly\",\n                \"label\": \"Monthly\"\n              },\n              {\n                \"key\": \"annual\",\n                \"label\": \"Annual\"\n              }\n            ]\n          },\n          \"attributeConstraint\": \"None\",\n          \"isSearchable\": true\n        }\n      ]\n    }\n"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/product-types",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"product-types"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Create ProductType"
					},
					"response": []
				},
				{
					"name": "02.1 Create Product - Gym Membership",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"product-id-gym-membership\", data.results[0].id); ",
									"    pm.environment.set(\"product-version-gym-membership\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"product-key-gym-membership\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"product-version-gym-membership\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"product-id-gym-membership\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"product-key-gym-membership\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\"productType\": {\n\"typeId\": \"product-type\",\n\"id\": \"{{product-type-id-membership}}\"\n},\n    \"key\": \"gym-membership\",\n    \"name\": {\n    \"de\": \"Gym Membership\",\n    \"en\": \"Gym Membership\"\n    },\n    \"description\": {\n    \"de\": \"Gym Membership\",\n    \"en\": \"Gym Membership\"\n    },\n    \"slug\": {\n    \"de\": \"gym-membership\",\n    \"en\": \"gym-membership\"\n    },\n    \"masterVariant\": {\n    \"id\": 1,\n    \"sku\": \"gym-membership-monthly\",\n    \"key\": \"gym-membership-monthly\",\n    \"prices\": [\n        {\n        \"value\": {\n            \"type\": \"centPrecision\",\n            \"currencyCode\": \"EUR\",\n            \"centAmount\": 4000,\n            \"fractionDigits\": 2\n        }\n        }\n    ],\n    \"images\": [],\n    \"attributes\": [\n        {\n        \"name\": \"duration\",\n        \"value\": {\n            \"key\": \"monthly\",\n            \"label\": \"Monthly\"\n        }\n        }\n    ],\n    \"assets\": []\n    },\n    \"variants\": [],\n    \"publish\": true,\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    }\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/products",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"products"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Create ProductType"
					},
					"response": []
				},
				{
					"name": "02.2 Create Product - Spa Membership",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"product-id-spa-membership\", data.results[0].id); ",
									"    pm.environment.set(\"product-version-spa-membership\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"product-key-spa-membership\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"product-version-spa-membership\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"product-id-spa-membership\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"product-key-spa-membership\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\"productType\": {\n\"typeId\": \"product-type\",\n\"id\": \"{{product-type-id-membership}}\"\n},\n    \"key\": \"spa-membership\",\n    \"name\": {\n    \"de\": \"Spa Membership\",\n    \"en\": \"Spa Membership\"\n    },\n    \"description\": {\n    \"de\": \"Spa Membership\",\n    \"en\": \"Spa Membership\"\n    },\n    \"slug\": {\n    \"de\": \"spa-membership\",\n    \"en\": \"spa-membership\"\n    },\n    \"masterVariant\": {\n    \"id\": 1,\n    \"sku\": \"spa-membership-monthly\",\n    \"key\": \"spa-membership-monthly\",\n    \"prices\": [\n        {\n        \"value\": {\n            \"type\": \"centPrecision\",\n            \"currencyCode\": \"EUR\",\n            \"centAmount\": 4000,\n            \"fractionDigits\": 2\n        }\n        }\n    ],\n    \"images\": [],\n    \"attributes\": [\n        {\n        \"name\": \"duration\",\n        \"value\": {\n            \"key\": \"monthly\",\n            \"label\": \"Monthly\"\n        }\n        }\n    ],\n    \"assets\": []\n    },\n    \"variants\": [],\n    \"publish\": true,\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    }\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/products",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"products"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Create ProductType"
					},
					"response": []
				},
				{
					"name": "03 Create ProductType - Fitness class",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"product-type-id-fitness-class\", data.results[0].id); ",
									"    pm.environment.set(\"product-type-version-fitness-class\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"product-type-key-fitness-class\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"product-type-version-fitness-class\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"product-type-id-fitness-class\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"product-type-key-fitness-class\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n      \"key\": \"fitness-class\",\n      \"name\": \"Fitness Class\",\n      \"description\": \"Fitness Class\",\n      \"attributes\": []\n    }\n"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/product-types",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"product-types"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Create ProductType"
					},
					"response": []
				},
				{
					"name": "04 Create ProductType - Facial Cream",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"product-type-id-facial-cream\", data.results[0].id); ",
									"    pm.environment.set(\"product-type-version-facial-cream\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"product-type-key-facial-cream\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"product-type-version-facial-cream\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"product-type-id-facial-cream\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"product-type-key-facial-cream\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n      \"key\": \"facial-cream\",\n      \"name\": \"Facial cream\",\n      \"description\": \"Facial cream\",\n      \"attributes\": []\n    }\n"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/product-types",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"product-types"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Create ProductType"
					},
					"response": []
				},
				{
					"name": "04.1 Create Product - Exfoliating Facial Cream",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"product-id-facial-cream\", data.results[0].id); ",
									"    pm.environment.set(\"product-version-facial-cream\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"product-key-facial-cream\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"product-version-facial-cream\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"product-id-facial-cream\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"product-key-facial-cream\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\"productType\": {\n\"typeId\": \"product-type\",\n\"id\": \"{{product-type-id-facial-cream}}\"\n},\n    \"key\": \"exfoliating-facial-cream\",\n    \"name\": {\n    \"de\": \"Exfoliating Facial Cream\",\n    \"en\": \"Exfoliating Facial Cream\"\n    },\n    \"description\": {\n    \"de\": \"Exfoliating Facial Cream\",\n    \"en\": \"Exfoliating Facial Cream\"\n    },\n    \"slug\": {\n    \"de\": \"exfoliating-facial-cream\",\n    \"en\": \"exfoliating-facial-cream\"\n    },\n    \"masterVariant\": {\n    \"id\": 1,\n    \"sku\": \"exfoliating-facial-cream\",\n    \"key\": \"exfoliating-facial-cream\",\n    \"prices\": [\n        {\n        \"id\": \"965c78de-9a0c-4dfb-b8b2-c348fde8a5c3\",\n        \"value\": {\n            \"type\": \"centPrecision\",\n            \"currencyCode\": \"EUR\",\n            \"centAmount\": 9999,\n            \"fractionDigits\": 2\n        }\n        }\n    ],\n    \"images\": [],\n    \"attributes\": [],\n    \"assets\": []\n    },\n    \"variants\": [],\n    \"publish\": true,\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    }\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/products",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"products"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Create ProductType"
					},
					"response": []
				},
				{
					"name": "05 Create ProductType - Facial Treatment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"product-type-id-facial-treatment\", data.results[0].id); ",
									"    pm.environment.set(\"product-type-version-facial-treatment\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"product-type-key-facial-treatment\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"product-type-version-facial-treatment\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"product-type-id-facial-treatment\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"product-type-key-facial-treatment\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n      \"key\": \"facial-treatment\",\n      \"name\": \"Facial Treatment\",\n      \"description\": \"Facial Treatment\",\n      \"attributes\": []\n    }\n"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/product-types",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"product-types"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Create ProductType"
					},
					"response": []
				},
				{
					"name": "05.1 Create Product - Facial Massage",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"product-id-facial-massage\", data.results[0].id); ",
									"    pm.environment.set(\"product-version-facial-massage\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"product-key-facial-massage\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"product-version-facial-massage\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"product-id-facial-massage\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"product-key-facial-massage\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\"productType\": {\n\"typeId\": \"product-type\",\n\"id\": \"{{product-type-id-facial-treatment}}\"\n},\n    \"key\": \"facial-massage\",\n    \"name\": {\n    \"de\": \"Facial Massage\",\n    \"en\": \"Facial Massage\"\n    },\n    \"description\": {\n    \"de\": \"Facial Massage\",\n    \"en\": \"Facial Massage\"\n    },\n    \"slug\": {\n    \"de\": \"facial-massage\",\n    \"en\": \"facial-massage\"\n    },\n    \"masterVariant\": {\n    \"id\": 1,\n    \"sku\": \"facial-massage\",\n    \"key\": \"facial-massage\",\n    \"prices\": [\n        {\n        \"id\": \"965c78de-9a0c-4dfb-b8b2-c348fde8a5c3\",\n        \"value\": {\n            \"type\": \"centPrecision\",\n            \"currencyCode\": \"EUR\",\n            \"centAmount\": 9717,\n            \"fractionDigits\": 2\n        }\n        }\n    ],\n    \"images\": [],\n    \"attributes\": [],\n    \"assets\": []\n    },\n    \"variants\": [],\n    \"publish\": true,\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    }\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/products",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"products"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Create ProductType"
					},
					"response": []
				},
				{
					"name": "05.2 Create Product - Facial Herbal Treatment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"product-id-facial-herbal-treatment\", data.results[0].id); ",
									"    pm.environment.set(\"product-version-facial-herbal-treatment\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"product-key-facial-herbal-treatment\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"product-version-facial-herbal-treatment\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"product-id-facial-herbal-treatment\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"product-key-facial-herbal-treatment\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\"productType\": {\n\"typeId\": \"product-type\",\n\"id\": \"{{product-type-id-facial-treatment}}\"\n},\n    \"key\": \"facial-herbal-treatment\",\n    \"name\": {\n    \"de\": \"Facial Herbal Treatment\",\n    \"en\": \"Facial Herbal Treatment\"\n    },\n    \"description\": {\n    \"de\": \"Facial Herbal Treatment\",\n    \"en\": \"Facial Herbal Treatment\"\n    },\n    \"slug\": {\n    \"de\": \"facial-herbal-treatment\",\n    \"en\": \"facial-herbal-treatment\"\n    },\n    \"masterVariant\": {\n    \"id\": 1,\n    \"sku\": \"facial-herbal-treatment\",\n    \"key\": \"facial-herbal-treatment\",\n    \"prices\": [\n        {\n        \"id\": \"965c78de-9a0c-4dfb-b8b2-c348fde8a5c3\",\n        \"value\": {\n            \"type\": \"centPrecision\",\n            \"currencyCode\": \"EUR\",\n            \"centAmount\": 5775,\n            \"fractionDigits\": 2\n        }\n        }\n    ],\n    \"images\": [],\n    \"attributes\": [],\n    \"assets\": []\n    },\n    \"variants\": [],\n    \"publish\": true,\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    }\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/products",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"products"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Create ProductType"
					},
					"response": []
				},
				{
					"name": "05.3 Create Product - Facial Mud Pack",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"product-id-facial-mud-pack\", data.results[0].id); ",
									"    pm.environment.set(\"product-version-facial-mud-pack\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"product-key-facial-mud-pack\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"product-version-facial-mud-pack\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"product-id-facial-mud-pack\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"product-key-facial-mud-pack\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\"productType\": {\n\"typeId\": \"product-type\",\n\"id\": \"{{product-type-id-facial-treatment}}\"\n},\n    \"key\": \"facial-mud-pack\",\n    \"name\": {\n    \"de\": \"Facial Mud Pack\",\n    \"en\": \"Facial Mud Pack\"\n    },\n    \"description\": {\n    \"de\": \"Facial Mud Pack\",\n    \"en\": \"Facial Mud Pack\"\n    },\n    \"slug\": {\n    \"de\": \"facial-mud-pack\",\n    \"en\": \"facial-mud-pack\"\n    },\n    \"masterVariant\": {\n    \"id\": 1,\n    \"sku\": \"facial-mud-pack\",\n    \"key\": \"facial-mud-pack\",\n    \"prices\": [\n        {\n        \"id\": \"965c78de-9a0c-4dfb-b8b2-c348fde8a5c3\",\n        \"value\": {\n            \"type\": \"centPrecision\",\n            \"currencyCode\": \"EUR\",\n            \"centAmount\": 7723,\n            \"fractionDigits\": 2\n        }\n        }\n    ],\n    \"images\": [],\n    \"attributes\": [],\n    \"assets\": []\n    },\n    \"variants\": [],\n    \"publish\": true,\n    \"taxCategory\":{\n        \"typeId\":\"tax-category\",\n        \"id\":\"{{tax-category-id}}\"\n    }\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/products",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"products"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Create ProductType"
					},
					"response": []
				},
				{
					"name": "06 Create Customer Custom Type",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"type-id\", data.results[0].id); ",
									"    pm.environment.set(\"type-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"type-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"type-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"type-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"type-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{  \n    \"key\": \"customer-stats\",\n    \"name\": {\n        \"de\": \"Customer Health Stats\",\n        \"en\": \"Customer Health Stats\"\n    },\n    \"resourceTypeIds\": [\n        \"customer\"\n    ],\n    \"fieldDefinitions\": [\n    {\n        \"name\": \"height_in_inches\",\n        \"label\": {\n            \"de\": \"Height in inches\",\n            \"en\": \"Height in inches\"\n        },\n        \"required\": false,\n        \"type\": {\n        \"name\": \"Number\"\n        }\n    },\n    {\n        \"name\": \"weight_in_pounds\",\n        \"label\": {\n        \"de\": \"Weight in pounds\",\n        \"en\": \"Weight in pounds\"\n        },\n        \"required\": false,\n        \"type\": {\n        \"name\": \"Number\"\n        }\n    }\n    ]\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/types",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"types"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "06 Create Purchased State",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"purchased-state-id\", data.results[0].id); ",
									"    pm.environment.set(\"purchased-state-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"purchased-state-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"purchased-state-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"purchased-state-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"purchased-state-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\" : {\n    \"de\": \"Purchased State\",\n    \"en\": \"Purchased State\"\n   },\n  \"key\" : \"purchased-state\",\n  \"type\" : \"OrderState\",\n  \"roles\" : [ ],\n  \"initial\" : true\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/states",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"states"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "06.1 Create Expired State",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"expired-state-id\", data.results[0].id); ",
									"    pm.environment.set(\"expired-state-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"expired-state-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"expired-state-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"expired-state-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"purchased-state-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\" : {\n    \"de\": \"Expired State\",\n    \"en\": \"Expired State\"\n   },\n  \"key\" : \"expired-state\",\n  \"type\" : \"OrderState\",\n  \"roles\" : [ ],\n  \"transitions\" : [],\n  \"initial\" : false\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/states",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"states"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "06.2 Create Redeemed State",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"redeemed-state-id\", data.results[0].id); ",
									"    pm.environment.set(\"redeemed-state-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"redeemed-state-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"redeemed-state-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"redeemed-state-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"redeemed-state-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\" : {\n    \"de\": \"Redeemed State\",\n    \"en\": \"Redeemed State\"\n   },\n  \"key\" : \"redeemed-state\",\n  \"type\" : \"OrderState\",\n  \"roles\" : [ ],\n  \"transitions\" : [],\n  \"initial\" : false\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/states",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"states"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "06.3 Set Purchased State Transitions",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
									"var data = JSON.parse(responseBody);",
									"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
									"    pm.environment.set(\"purchased-state-id\", data.results[0].id); ",
									"    pm.environment.set(\"purchased-state-version\", data.results[0].version);",
									"}",
									"if(data.results && data.results[0] && data.results[0].key){",
									"    pm.environment.set(\"purchased-state-key\", data.results[0].key); ",
									"}",
									"if(data.version){",
									"    pm.environment.set(\"purchased-state-version\", data.version);",
									"}",
									"if(data.id){",
									"    pm.environment.set(\"purchased-state-id\", data.id); ",
									"}",
									"if(data.key){",
									"    pm.environment.set(\"purchased-state-key\", data.key);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{ctp_access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"version\": {{purchased-state-version}},\n    \"actions\": [\n        {\n            \"action\" : \"setTransitions\",\n            \"transitions\" : [ {\n              \"typeId\" : \"state\",\n              \"id\" : \"{{expired-state-id}}\"\n            }, {\n              \"typeId\" : \"state\",\n              \"id\" : \"{{redeemed-state-id}}\"\n            } ]\n          }\n    ]\n}"
						},
						"url": {
							"raw": "{{host}}/{{project-key}}/states/{{purchased-state-id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{project-key}}",
								"states",
								"{{purchased-state-id}}"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Obtain access token",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"var data = JSON.parse(responseBody);",
							"if(data.access_token){",
							"    pm.environment.set(\"ctp_access_token\", data.access_token);",
							"}",
							"if (data.scope) {",
							"    parts = data.scope.split(\" \");",
							"    parts = parts.filter(scope => scope.includes(\":\")).map(scope => scope.split(\":\"))",
							"    if (parts.length > 0) {",
							"        scopeParts = parts[0];",
							"        pm.environment.set(\"project-key\", scopeParts[1]);",
							"        parts = parts.filter(scope => scope.length >= 3)",
							"        if (parts.length > 0) {",
							"            scopeParts = parts[0];",
							"            pm.environment.set(\"store-key\", scopeParts[2]);",
							"        }",
							"    }",
							"}"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{client_id}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{client_secret}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{auth_url}}/oauth/token?grant_type=client_credentials",
					"host": [
						"{{auth_url}}"
					],
					"path": [
						"oauth",
						"token"
					],
					"query": [
						{
							"key": "grant_type",
							"value": "client_credentials"
						}
					]
				},
				"description": "Use this request to obtain an access token for your commercetools platform project via Client Credentials Flow. As a prerequisite you must have filled out environment variables in Postman for projectKey, client_id and client_secret to use this."
			},
			"response": []
		},
		{
			"name": "Get TaxCategory",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
							"var data = JSON.parse(responseBody);",
							"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
							"    pm.environment.set(\"tax-category-id\", data.results[0].id); ",
							"    pm.environment.set(\"tax-category-version\", data.results[0].version);",
							"}",
							"if(data.results && data.results[0] && data.results[0].key){",
							"    pm.environment.set(\"tax-category-key\", data.results[0].key); ",
							"}",
							"if(data.version){",
							"    pm.environment.set(\"tax-category-version\", data.version);",
							"}",
							"if(data.id){",
							"    pm.environment.set(\"tax-category-id\", data.id); ",
							"}",
							"if(data.key){",
							"    pm.environment.set(\"tax-category-key\", data.key);",
							"}",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "accessToken",
							"value": "{{ctp_access_token}}",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						},
						{
							"key": "tokenType",
							"value": "Bearer",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/{{project-key}}/tax-categories",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{project-key}}",
						"tax-categories"
					],
					"query": [
						{
							"key": "expand",
							"value": "",
							"disabled": true
						}
					]
				},
				"description": "Get TaxCategory by key"
			},
			"response": []
		},
		{
			"name": "Create CustomObject",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
							"var data = JSON.parse(responseBody);",
							"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
							"    pm.environment.set(\"custom-object-id\", data.results[0].id); ",
							"    pm.environment.set(\"custom-object-version\", data.results[0].version);",
							"}",
							"if(data.results && data.results[0] && data.results[0].key){",
							"    pm.environment.set(\"custom-object-key\", data.results[0].key); ",
							"}",
							"if(data.version){",
							"    pm.environment.set(\"custom-object-version\", data.version);",
							"}",
							"if(data.id){",
							"    pm.environment.set(\"custom-object-id\", data.id); ",
							"}",
							"if(data.key){",
							"    pm.environment.set(\"custom-object-key\", data.key);",
							"}",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "accessToken",
							"value": "{{ctp_access_token}}",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						},
						{
							"key": "tokenType",
							"value": "Bearer",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"container\" : \"test-container\",\n  \"key\" : \"test-key4\",\n  \"value\" : \"test-value4\"\n}"
				},
				"url": {
					"raw": "{{host}}/{{project-key}}/custom-objects",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{project-key}}",
						"custom-objects"
					],
					"query": [
						{
							"key": "expand",
							"value": "",
							"disabled": true
						}
					]
				},
				"description": "Creates a new custom object or updates an existing custom object.\nIf an object with the given container/key exists,\nthe object will be replaced with the new value and the version is incremented.\nIf the request contains a version and an object with the given container/key exists then the version\nmust match the version of the existing object. Concurrent updates for the same custom object still can result\nin a Conflict (409) even if the version is not provided.\nFields with null values will not be saved.\n"
			},
			"response": []
		},
		{
			"name": "Query custom-objects",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
							"var data = JSON.parse(responseBody);",
							"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
							"    pm.environment.set(\"custom-object-id\", data.results[0].id); ",
							"    pm.environment.set(\"custom-object-version\", data.results[0].version);",
							"}",
							"if(data.results && data.results[0] && data.results[0].key){",
							"    pm.environment.set(\"custom-object-key\", data.results[0].key); ",
							"}",
							"if(data.version){",
							"    pm.environment.set(\"custom-object-version\", data.version);",
							"}",
							"if(data.id){",
							"    pm.environment.set(\"custom-object-id\", data.id); ",
							"}",
							"if(data.key){",
							"    pm.environment.set(\"custom-object-key\", data.key);",
							"}",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "accessToken",
							"value": "{{ctp_access_token}}",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						},
						{
							"key": "tokenType",
							"value": "Bearer",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/{{project-key}}/custom-objects?container=test-container",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{project-key}}",
						"custom-objects"
					],
					"query": [
						{
							"key": "expand",
							"value": "",
							"disabled": true
						},
						{
							"key": "sort",
							"value": "",
							"disabled": true
						},
						{
							"key": "limit",
							"value": "",
							"disabled": true
						},
						{
							"key": "offset",
							"value": "",
							"disabled": true
						},
						{
							"key": "withTotal",
							"value": "",
							"disabled": true
						},
						{
							"key": "where",
							"value": "",
							"disabled": true
						},
						{
							"key": "/^var[.][a-zA-Z0-9]+$/",
							"value": "",
							"disabled": true
						},
						{
							"key": "container",
							"value": "test-container"
						}
					]
				},
				"description": "The query endpoint allows to retrieve custom objects in a specific container or all custom objects.\nFor performance reasons, it is highly advisable to query only for custom objects in a container by using\nthe container field in the where predicate.\n"
			},
			"response": []
		},
		{
			"name": "Get CustomObject by container and key",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
							"var data = JSON.parse(responseBody);",
							"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
							"    pm.environment.set(\"custom-object-id\", data.results[0].id); ",
							"    pm.environment.set(\"custom-object-version\", data.results[0].version);",
							"}",
							"if(data.results && data.results[0] && data.results[0].key){",
							"    pm.environment.set(\"custom-object-key\", data.results[0].key); ",
							"}",
							"if(data.version){",
							"    pm.environment.set(\"custom-object-version\", data.version);",
							"}",
							"if(data.id){",
							"    pm.environment.set(\"custom-object-id\", data.id); ",
							"}",
							"if(data.key){",
							"    pm.environment.set(\"custom-object-key\", data.key);",
							"}",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "accessToken",
							"value": "{{ctp_access_token}}",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						},
						{
							"key": "tokenType",
							"value": "Bearer",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/{{project-key}}/custom-objects/{{container}}/{{custom-object-key}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{project-key}}",
						"custom-objects",
						"{{container}}",
						"{{custom-object-key}}"
					],
					"query": [
						{
							"key": "expand",
							"value": "",
							"disabled": true
						},
						{
							"key": "container",
							"value": "test-container",
							"disabled": true
						}
					]
				},
				"description": "Get CustomObject by container and key"
			},
			"response": []
		},
		{
			"name": "AddPrice Test",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
							"var data = JSON.parse(responseBody);",
							"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
							"    pm.environment.set(\"product-id\", data.results[0].id); ",
							"    pm.environment.set(\"product-version\", data.results[0].version);",
							"}",
							"if(data.results && data.results[0] && data.results[0].key){",
							"    pm.environment.set(\"product-key\", data.results[0].key); ",
							"}",
							"if(data.version){",
							"    pm.environment.set(\"product-version\", data.version);",
							"}",
							"if(data.id){",
							"    pm.environment.set(\"product-id\", data.id); ",
							"}",
							"if(data.key){",
							"    pm.environment.set(\"product-key\", data.key);",
							"}",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "accessToken",
							"value": "{{ctp_access_token}}",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						},
						{
							"key": "tokenType",
							"value": "Bearer",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"version\": {{product-version}},\n    \"actions\": [\n        {\n            \"action\" : \"addPrice\",\n            \"variantId\" : 1,\n            \"price\" : {\n              \"value\" : {\n                \"currencyCode\" : \"EUR\",\n                \"centAmount\" : 1000000\n              }\n            }\n          }\n    ]\n}"
				},
				"url": {
					"raw": "{{host}}/{{project-key}}/products/{{product-id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{project-key}}",
						"products",
						"{{product-id}}"
					],
					"query": [
						{
							"key": "priceCurrency",
							"value": "",
							"disabled": true
						},
						{
							"key": "priceCountry",
							"value": "",
							"disabled": true
						},
						{
							"key": "priceCustomerGroup",
							"value": "",
							"disabled": true
						},
						{
							"key": "priceChannel",
							"value": "",
							"disabled": true
						},
						{
							"key": "localeProjection",
							"value": "",
							"disabled": true
						},
						{
							"key": "storeProjection",
							"value": "",
							"disabled": true
						},
						{
							"key": "expand",
							"value": "",
							"disabled": true
						}
					]
				},
				"description": "Update Product by ID"
			},
			"response": []
		}
	]
}